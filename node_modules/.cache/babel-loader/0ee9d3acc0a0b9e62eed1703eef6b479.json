{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\components\\\\chooseProject\\\\CustomCalendar.jsx\",\n  _s = $RefreshSig$();\n// CustomCalendar.js\nimport React, { useState } from \"react\";\n// import \"./CustomCalendar.css\"; // Create this file for styling if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomCalendar = () => {\n  _s();\n  // Use state to track the current date\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // Function to handle navigation to the previous day\n  const goToPreviousDay = () => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() - 1);\n    setCurrentDate(newDate);\n  };\n\n  // Function to handle navigation to the next day\n  const goToNextDay = () => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + 1);\n\n    // If the next day is in the next month, update the month as well\n    if (newDate.getMonth() !== currentDate.getMonth()) {\n      newDate.setMonth(newDate.getMonth() + 1);\n    }\n    setCurrentDate(newDate);\n  };\n\n  // Function to handle navigation to the previous month\n  const goToPreviousMonth = () => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() - 1);\n    setCurrentDate(newDate);\n  };\n\n  // Function to handle navigation to the next month\n  const goToNextMonth = () => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() + 1);\n    setCurrentDate(newDate);\n  };\n\n  // Function to get the days of the month for the current date\n  const getDaysInMonth = () => {\n    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n    const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n    const daysInMonth = [];\n    const startDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n    // Add empty placeholders for days before the first day of the month\n    for (let i = 0; i < startDayOfWeek; i++) {\n      daysInMonth.push(\"\");\n    }\n\n    // Add the days of the month\n    for (let i = 1; i <= lastDay.getDate(); i++) {\n      daysInMonth.push(i);\n    }\n    return daysInMonth;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousDay,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousMonth,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: new Intl.DateTimeFormat(\"en-US\", {\n          month: \"long\",\n          year: \"numeric\"\n        }).format(currentDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextMonth,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextDay,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-days\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Sun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Tue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Wed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Thu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Fri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day\",\n        children: \"Sat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-dates\",\n      children: getDaysInMonth().map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomCalendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CustomCalendar","_s","currentDate","setCurrentDate","Date","goToPreviousDay","newDate","setDate","getDate","goToNextDay","getMonth","setMonth","goToPreviousMonth","goToNextMonth","getDaysInMonth","firstDay","getFullYear","lastDay","daysInMonth","startDayOfWeek","getDay","i","push","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Intl","DateTimeFormat","month","year","format","map","day","index","_c","$RefreshReg$"],"sources":["E:/ui/src/components/chooseProject/CustomCalendar.jsx"],"sourcesContent":["// CustomCalendar.js\r\nimport React, { useState } from \"react\";\r\n// import \"./CustomCalendar.css\"; // Create this file for styling if needed\r\n\r\nconst CustomCalendar = () => {\r\n  // Use state to track the current date\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  // Function to handle navigation to the previous day\r\n  const goToPreviousDay = () => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setDate(newDate.getDate() - 1);\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  // Function to handle navigation to the next day\r\n  const goToNextDay = () => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setDate(newDate.getDate() + 1);\r\n\r\n    // If the next day is in the next month, update the month as well\r\n    if (newDate.getMonth() !== currentDate.getMonth()) {\r\n      newDate.setMonth(newDate.getMonth() + 1);\r\n    }\r\n\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  // Function to handle navigation to the previous month\r\n  const goToPreviousMonth = () => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setMonth(newDate.getMonth() - 1);\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  // Function to handle navigation to the next month\r\n  const goToNextMonth = () => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setMonth(newDate.getMonth() + 1);\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  // Function to get the days of the month for the current date\r\n  const getDaysInMonth = () => {\r\n    const firstDay = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth(),\r\n      1\r\n    );\r\n    const lastDay = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() + 1,\r\n      0\r\n    );\r\n    const daysInMonth = [];\r\n\r\n    const startDayOfWeek = firstDay.getDay(); // 0 (Sunday) to 6 (Saturday)\r\n\r\n    // Add empty placeholders for days before the first day of the month\r\n    for (let i = 0; i < startDayOfWeek; i++) {\r\n      daysInMonth.push(\"\");\r\n    }\r\n\r\n    // Add the days of the month\r\n    for (let i = 1; i <= lastDay.getDate(); i++) {\r\n      daysInMonth.push(i);\r\n    }\r\n\r\n    return daysInMonth;\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-calendar\">\r\n      <div className=\"calendar-header\">\r\n        <button onClick={goToPreviousDay}>{\"<\"}</button>\r\n        <button onClick={goToPreviousMonth}>{\"<<\"}</button>\r\n        <h2>\r\n          {new Intl.DateTimeFormat(\"en-US\", {\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n          }).format(currentDate)}\r\n        </h2>\r\n        <button onClick={goToNextMonth}>{\">>\"}</button>\r\n        <button onClick={goToNextDay}>{\">\"}</button>\r\n      </div>\r\n      <div className=\"calendar-days\">\r\n        <div className=\"day\">Sun</div>\r\n        <div className=\"day\">Mon</div>\r\n        <div className=\"day\">Tue</div>\r\n        <div className=\"day\">Wed</div>\r\n        <div className=\"day\">Thu</div>\r\n        <div className=\"day\">Fri</div>\r\n        <div className=\"day\">Sat</div>\r\n      </div>\r\n      <div className=\"calendar-dates\">\r\n        {getDaysInMonth().map((day, index) => (\r\n          <div key={index} className=\"date\">\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}