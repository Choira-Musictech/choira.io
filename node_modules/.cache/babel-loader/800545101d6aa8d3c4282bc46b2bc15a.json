{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\components\\\\chooseProject\\\\CustomCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const handlePreviousMonth = () => {\n    const newDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n    setCurrentDate(newDate);\n  };\n  const handleNextMonth = () => {\n    const newDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);\n    setCurrentDate(newDate);\n  };\n  const generateDateGrid = () => {\n    // Calculate start day, number of days, and offsets\n    const startDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\n    const numberOfDays = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n    const previousMonthOffset = startDay === 0 ? 6 : startDay - 1;\n    const nextMonthOffset = 6 - (numberOfDays + previousMonthOffset) % 7;\n\n    // Generate grid data\n    const gridData = [];\n    for (let i = -previousMonthOffset; i <= numberOfDays + nextMonthOffset - 1; i++) {\n      const day = new Date(currentDate.getFullYear(), currentDate.getMonth(), i + 1);\n      gridData.push({\n        day: day.getDate(),\n        month: day.getMonth() === currentDate.getMonth() ? \"current\" : day.getMonth() === currentDate.getMonth() - 1 ? \"previous\" : \"next\"\n      });\n    }\n    return gridData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousMonth,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentDate.toLocaleDateString(\"en-US\", {\n          month: \"long\",\n          year: \"numeric\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell\",\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), generateDateGrid().map((dayData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-row\",\n        children: [dayData.month === \"previous\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell calendar-cell-previous\",\n          children: dayData.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), dayData.month === \"current\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell calendar-cell-current\",\n          children: dayData.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), dayData.month === \"next\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-cell calendar-cell-next\",\n          children: dayData.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomCalendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CustomCalendar;\nexport default CustomCalendar;\nvar _c;\n$RefreshReg$(_c, \"CustomCalendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CustomCalendar","_s","currentDate","setCurrentDate","Date","handlePreviousMonth","newDate","getFullYear","getMonth","handleNextMonth","generateDateGrid","startDay","getDay","numberOfDays","getDate","previousMonthOffset","nextMonthOffset","gridData","i","day","push","month","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","year","map","dayData","index","_c","$RefreshReg$"],"sources":["E:/ui/src/components/chooseProject/CustomCalendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CustomCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  const handlePreviousMonth = () => {\r\n    const newDate = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() - 1,\r\n      1\r\n    );\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    const newDate = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() + 1,\r\n      1\r\n    );\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  const generateDateGrid = () => {\r\n    // Calculate start day, number of days, and offsets\r\n    const startDay = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth(),\r\n      1\r\n    ).getDay();\r\n    const numberOfDays = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() + 1,\r\n      0\r\n    ).getDate();\r\n    const previousMonthOffset = startDay === 0 ? 6 : startDay - 1;\r\n    const nextMonthOffset = 6 - ((numberOfDays + previousMonthOffset) % 7);\r\n\r\n    // Generate grid data\r\n    const gridData = [];\r\n    for (\r\n      let i = -previousMonthOffset;\r\n      i <= numberOfDays + nextMonthOffset - 1;\r\n      i++\r\n    ) {\r\n      const day = new Date(\r\n        currentDate.getFullYear(),\r\n        currentDate.getMonth(),\r\n        i + 1\r\n      );\r\n      gridData.push({\r\n        day: day.getDate(),\r\n        month:\r\n          day.getMonth() === currentDate.getMonth()\r\n            ? \"current\"\r\n            : day.getMonth() === currentDate.getMonth() - 1\r\n            ? \"previous\"\r\n            : \"next\",\r\n      });\r\n    }\r\n    return gridData;\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <header className=\"calendar-header\">\r\n        <button onClick={handlePreviousMonth}>&lt;</button>\r\n        <span>\r\n          {currentDate.toLocaleDateString(\"en-US\", {\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n          })}\r\n        </span>\r\n        <button onClick={handleNextMonth}>&gt;</button>\r\n      </header>\r\n\r\n      <div className=\"calendar-grid\">\r\n        <div className=\"calendar-row\">\r\n          <div className=\"calendar-cell\">Sun</div>\r\n          <div className=\"calendar-cell\">Mon</div>\r\n          <div className=\"calendar-cell\">Tue</div>\r\n          <div className=\"calendar-cell\">Wed</div>\r\n          <div className=\"calendar-cell\">Thu</div>\r\n          <div className=\"calendar-cell\">Fri</div>\r\n          <div className=\"calendar-cell\">Sat</div>\r\n        </div>\r\n\r\n        {generateDateGrid().map((dayData, index) => (\r\n          <div className=\"calendar-row\" key={index}>\r\n            {dayData.month === \"previous\" && (\r\n              <div className=\"calendar-cell calendar-cell-previous\">\r\n                {dayData.day}\r\n              </div>\r\n            )}\r\n\r\n            {dayData.month === \"current\" && (\r\n              <div className=\"calendar-cell calendar-cell-current\">\r\n                {dayData.day}\r\n              </div>\r\n            )}\r\n\r\n            {dayData.month === \"next\" && (\r\n              <div className=\"calendar-cell calendar-cell-next\">\r\n                {dayData.day}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}