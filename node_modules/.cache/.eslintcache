[{"E:\\ui\\src\\index.js":"1","E:\\ui\\src\\App.js":"2","E:\\ui\\src\\reportWebVitals.js":"3","E:\\ui\\src\\assets\\js\\script.js":"4","E:\\ui\\src\\Router.js":"5","E:\\ui\\src\\redux\\store.js":"6","E:\\ui\\src\\pages\\google-anaylitics.js":"7","E:\\ui\\src\\redux\\rootReducer.js":"8","E:\\ui\\src\\pages\\home\\TermsandCondition.jsx":"9","E:\\ui\\src\\pages\\home\\Home.jsx":"10","E:\\ui\\src\\pages\\home\\Contactus.jsx":"11","E:\\ui\\src\\pages\\home\\Disclaimer.jsx":"12","E:\\ui\\src\\pages\\home\\about.jsx":"13","E:\\ui\\src\\pages\\home\\refundpolicy.jsx":"14","E:\\ui\\src\\pages\\home\\Privacypolicy.jsx":"15","E:\\ui\\src\\pages\\userHome\\userHome.jsx":"16","E:\\ui\\src\\pages\\arm\\armHome.jsx":"17","E:\\ui\\src\\pages\\admin\\adminHome.jsx":"18","E:\\ui\\src\\components\\loader\\ChoiraLoader.jsx":"19","E:\\ui\\src\\redux\\slices\\modal\\modalReducer.js":"20","E:\\ui\\src\\redux\\slices\\projets\\projectReducer.js":"21","E:\\ui\\src\\spotify.js":"22","E:\\ui\\src\\restservice.js":"23","E:\\ui\\src\\pages\\home\\jsfunctions.js":"24","E:\\ui\\src\\helper\\firebaseInit.js":"25","E:\\ui\\src\\helper\\firebaseMethod.js":"26","E:\\ui\\src\\services\\firebaseService.js":"27","E:\\ui\\src\\components\\video-player\\VideoPlayer.jsx":"28","E:\\ui\\src\\pocPages\\register.jsx":"29","E:\\ui\\src\\components\\team-carousel\\TeamCarousel.jsx":"30","E:\\ui\\src\\components\\testimonial-carousel\\TestimonialCarousel.jsx":"31","E:\\ui\\src\\pocPages\\extraGoogle.jsx":"32","E:\\ui\\src\\pocPages\\login.jsx":"33","E:\\ui\\src\\pages\\comingSoon\\comingSoon.jsx":"34","E:\\ui\\src\\pages\\customerExplore\\exploreSection.jsx":"35","E:\\ui\\src\\pages\\externalExplore\\exploreSection.jsx":"36","E:\\ui\\src\\pages\\myprofile\\FormProfileAdmin.jsx":"37","E:\\ui\\src\\pages\\myprofile\\FormProfile.jsx":"38","E:\\ui\\src\\pages\\dashboard\\produce\\addProject.jsx":"39","E:\\ui\\src\\pages\\dashboard\\produce\\maangetwopage.jsx":"40","E:\\ui\\src\\pages\\messages\\message.jsx":"41","E:\\ui\\src\\pages\\admin\\tracks\\setpagetracks.jsx":"42","E:\\ui\\src\\pages\\admin\\genre\\setpagegenre.jsx":"43","E:\\ui\\src\\pages\\admin\\dashboard\\setDashboard.jsx":"44","E:\\ui\\src\\pages\\admin\\employee\\Setpage.jsx":"45","E:\\ui\\src\\pages\\admin\\projects\\Setprojectpage.jsx":"46","E:\\ui\\src\\pages\\admin\\user\\showUsers.jsx":"47","E:\\ui\\src\\pages\\arm\\managetrack.jsx":"48","E:\\ui\\src\\pages\\arm\\Tracksstatus.jsx":"49","E:\\ui\\src\\pages\\messages\\messageManager.jsx":"50","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormMain.jsx":"51","E:\\ui\\src\\pages\\myprofile\\FormProfileRM.jsx":"52","E:\\ui\\src\\pages\\arm\\projects\\Setprojectpage.jsx":"53","E:\\ui\\src\\pages\\arm\\user\\showUsers.jsx":"54","E:\\ui\\src\\pages\\dashboard\\decidetrack.jsx":"55","E:\\ui\\src\\helper\\firebaseConf.js":"56","E:\\ui\\src\\pages\\community\\index.jsx":"57","E:\\ui\\src\\pages\\customerExplore\\showData.jsx":"58","E:\\ui\\src\\pages\\customerExplore\\submitData.jsx":"59","E:\\ui\\src\\pages\\externalExplore\\showData.jsx":"60","E:\\ui\\src\\pages\\externalExplore\\submitData.jsx":"61","E:\\ui\\src\\pages\\dashboard\\produce\\trackShow.jsx":"62","E:\\ui\\src\\pages\\arm\\Edittrack.jsx":"63","E:\\ui\\src\\pages\\admin\\user\\Edituser.jsx":"64","E:\\ui\\src\\pages\\arm\\Addtrack.jsx":"65","E:\\ui\\src\\pages\\admin\\user\\projectmanage.jsx":"66","E:\\ui\\src\\pages\\admin\\user\\Adduser.jsx":"67","E:\\ui\\src\\pages\\admin\\user\\manageUser.jsx":"68","E:\\ui\\src\\pages\\admin\\user\\detailsUser.jsx":"69","E:\\ui\\src\\pages\\admin\\projects\\detailsProject.jsx":"70","E:\\ui\\src\\pages\\admin\\projects\\Editpage.jsx":"71","E:\\ui\\src\\pages\\admin\\projects\\project.jsx":"72","E:\\ui\\src\\pages\\admin\\employee\\Adetails.jsx":"73","E:\\ui\\src\\pages\\admin\\employee\\Editemp.jsx":"74","E:\\ui\\src\\pages\\admin\\employee\\Addemployee.jsx":"75","E:\\ui\\src\\pages\\admin\\employee\\employee.jsx":"76","E:\\ui\\src\\pages\\admin\\dashboard\\dashboard.jsx":"77","E:\\ui\\src\\pages\\admin\\genre\\managegenre.jsx":"78","E:\\ui\\src\\pages\\admin\\genre\\Editgenre.jsx":"79","E:\\ui\\src\\pages\\admin\\genre\\Addgenre.jsx":"80","E:\\ui\\src\\pages\\admin\\tracks\\Editpage.jsx":"81","E:\\ui\\src\\pages\\admin\\tracks\\Addtrack.jsx":"82","E:\\ui\\src\\pages\\dashboard\\produce\\project\\FormProject.jsx":"83","E:\\ui\\src\\pages\\dashboard\\produce\\manageProject.jsx":"84","E:\\ui\\src\\pages\\dashboard\\produce\\showDetails.jsx":"85","E:\\ui\\src\\pages\\admin\\tracks\\managetracks.jsx":"86","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormF.jsx":"87","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormE.jsx":"88","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormD.jsx":"89","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormC.jsx":"90","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormB.jsx":"91","E:\\ui\\src\\components\\testimonial\\Testimonial.jsx":"92","E:\\ui\\src\\pages\\arm\\projects\\detailsProject.jsx":"93","E:\\ui\\src\\pages\\arm\\projects\\project.jsx":"94","E:\\ui\\src\\pages\\arm\\projects\\Editpage.jsx":"95","E:\\ui\\src\\pages\\arm\\user\\Edituser.jsx":"96","E:\\ui\\src\\pages\\arm\\user\\Adduser.jsx":"97","E:\\ui\\src\\pages\\arm\\user\\projectmanage.jsx":"98","E:\\ui\\src\\pages\\arm\\user\\manageUser.jsx":"99","E:\\ui\\src\\pages\\arm\\user\\detailsUser.jsx":"100","E:\\ui\\src\\pages\\customerExplore\\exploreOverlay.jsx":"101","E:\\ui\\src\\pages\\externalExplore\\exploreOverlay.jsx":"102","E:\\ui\\src\\pages\\externalExplore\\Waveform.js":"103","E:\\ui\\src\\pages\\customerExplore\\Waveform.js":"104","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormA.jsx":"105","E:\\ui\\src\\pages\\home\\Signin.jsx":"106","E:\\ui\\src\\components\\signin\\SigninNum.jsx":"107","E:\\ui\\src\\components\\signin\\OptVerify.jsx":"108","E:\\ui\\src\\components\\signin\\SignUpDetails.jsx":"109","E:\\ui\\src\\pages\\home\\Signup.jsx":"110","E:\\ui\\src\\components\\signin\\SubBtn.jsx":"111","E:\\ui\\src\\pages\\home\\Project.jsx":"112","E:\\ui\\src\\components\\project-slider\\Slider.jsx":"113","E:\\ui\\src\\components\\project-slider\\Menu.jsx":"114"},{"size":501,"mtime":1700721435752,"results":"115","hashOfConfig":"116"},{"size":492,"mtime":1701078524284,"results":"117","hashOfConfig":"116"},{"size":362,"mtime":1700721435892,"results":"118","hashOfConfig":"116"},{"size":4389,"mtime":1700721448970,"results":"119","hashOfConfig":"116"},{"size":2258,"mtime":1701334860337,"results":"120","hashOfConfig":"116"},{"size":173,"mtime":1700721444269,"results":"121","hashOfConfig":"116"},{"size":271,"mtime":1700721436194,"results":"122","hashOfConfig":"116"},{"size":294,"mtime":1700721444320,"results":"123","hashOfConfig":"116"},{"size":38589,"mtime":1700721441310,"results":"124","hashOfConfig":"116"},{"size":40090,"mtime":1701335015023,"results":"125","hashOfConfig":"116"},{"size":3908,"mtime":1700721441971,"results":"126","hashOfConfig":"116"},{"size":14169,"mtime":1700721441532,"results":"127","hashOfConfig":"116"},{"size":1036,"mtime":1700721441637,"results":"128","hashOfConfig":"116"},{"size":7268,"mtime":1700721441734,"results":"129","hashOfConfig":"116"},{"size":48152,"mtime":1700721441146,"results":"130","hashOfConfig":"116"},{"size":11293,"mtime":1700721436255,"results":"131","hashOfConfig":"116"},{"size":5223,"mtime":1700721439900,"results":"132","hashOfConfig":"116"},{"size":6507,"mtime":1700721437398,"results":"133","hashOfConfig":"116"},{"size":270,"mtime":1700721445294,"results":"134","hashOfConfig":"116"},{"size":470,"mtime":1700721444402,"results":"135","hashOfConfig":"116"},{"size":406,"mtime":1700721444494,"results":"136","hashOfConfig":"116"},{"size":1382,"mtime":1700721436100,"results":"137","hashOfConfig":"116"},{"size":599,"mtime":1700721435794,"results":"138","hashOfConfig":"116"},{"size":648,"mtime":1700721441840,"results":"139","hashOfConfig":"116"},{"size":335,"mtime":1700721444884,"results":"140","hashOfConfig":"116"},{"size":230,"mtime":1700721445063,"results":"141","hashOfConfig":"116"},{"size":292,"mtime":1700721445702,"results":"142","hashOfConfig":"116"},{"size":2053,"mtime":1700721445447,"results":"143","hashOfConfig":"116"},{"size":5533,"mtime":1700721444554,"results":"144","hashOfConfig":"116"},{"size":6030,"mtime":1700721445184,"results":"145","hashOfConfig":"116"},{"size":5742,"mtime":1700721445554,"results":"146","hashOfConfig":"116"},{"size":1885,"mtime":1700721444799,"results":"147","hashOfConfig":"116"},{"size":2884,"mtime":1700721444656,"results":"148","hashOfConfig":"116"},{"size":662,"mtime":1700721439810,"results":"149","hashOfConfig":"116"},{"size":1163,"mtime":1700721443988,"results":"150","hashOfConfig":"116"},{"size":730,"mtime":1700721437207,"results":"151","hashOfConfig":"116"},{"size":18259,"mtime":1700721436529,"results":"152","hashOfConfig":"116"},{"size":18346,"mtime":1700721436366,"results":"153","hashOfConfig":"116"},{"size":1264,"mtime":1700721442436,"results":"154","hashOfConfig":"116"},{"size":2098,"mtime":1700721442602,"results":"155","hashOfConfig":"116"},{"size":3124,"mtime":1700721442049,"results":"156","hashOfConfig":"116"},{"size":1085,"mtime":1700721438468,"results":"157","hashOfConfig":"116"},{"size":1274,"mtime":1700721437898,"results":"158","hashOfConfig":"116"},{"size":416,"mtime":1700721438799,"results":"159","hashOfConfig":"116"},{"size":2891,"mtime":1700721438183,"results":"160","hashOfConfig":"116"},{"size":1442,"mtime":1700721437734,"results":"161","hashOfConfig":"116"},{"size":3280,"mtime":1700721439500,"results":"162","hashOfConfig":"116"},{"size":1001,"mtime":1700721440086,"results":"163","hashOfConfig":"116"},{"size":64909,"mtime":1700721440201,"results":"164","hashOfConfig":"116"},{"size":2493,"mtime":1700721442116,"results":"165","hashOfConfig":"116"},{"size":11207,"mtime":1700721443246,"results":"166","hashOfConfig":"116"},{"size":16144,"mtime":1700721436634,"results":"167","hashOfConfig":"116"},{"size":1588,"mtime":1700721440569,"results":"168","hashOfConfig":"116"},{"size":2669,"mtime":1700721440970,"results":"169","hashOfConfig":"116"},{"size":811,"mtime":1700721442287,"results":"170","hashOfConfig":"116"},{"size":371,"mtime":1700721444971,"results":"171","hashOfConfig":"116"},{"size":1477,"mtime":1700721437286,"results":"172","hashOfConfig":"116"},{"size":15426,"mtime":1700721443885,"results":"173","hashOfConfig":"116"},{"size":12682,"mtime":1700721443549,"results":"174","hashOfConfig":"116"},{"size":15134,"mtime":1700721437152,"results":"175","hashOfConfig":"116"},{"size":4785,"mtime":1700721436968,"results":"176","hashOfConfig":"116"},{"size":4877,"mtime":1700721442343,"results":"177","hashOfConfig":"116"},{"size":21574,"mtime":1700721440148,"results":"178","hashOfConfig":"116"},{"size":13105,"mtime":1700721438872,"results":"179","hashOfConfig":"116"},{"size":21150,"mtime":1700721440266,"results":"180","hashOfConfig":"116"},{"size":16397,"mtime":1700721439060,"results":"181","hashOfConfig":"116"},{"size":14908,"mtime":1700721439580,"results":"182","hashOfConfig":"116"},{"size":22582,"mtime":1700721439636,"results":"183","hashOfConfig":"116"},{"size":3953,"mtime":1700721439233,"results":"184","hashOfConfig":"116"},{"size":13984,"mtime":1700721437464,"results":"185","hashOfConfig":"116"},{"size":15177,"mtime":1700721437692,"results":"186","hashOfConfig":"116"},{"size":13579,"mtime":1700721437580,"results":"187","hashOfConfig":"116"},{"size":3862,"mtime":1700721438035,"results":"188","hashOfConfig":"116"},{"size":14752,"mtime":1700721438328,"results":"189","hashOfConfig":"116"},{"size":14572,"mtime":1700721438142,"results":"190","hashOfConfig":"116"},{"size":9051,"mtime":1700721438232,"results":"191","hashOfConfig":"116"},{"size":22349,"mtime":1700721438694,"results":"192","hashOfConfig":"116"},{"size":7463,"mtime":1700721437944,"results":"193","hashOfConfig":"116"},{"size":10519,"mtime":1700721437855,"results":"194","hashOfConfig":"116"},{"size":10207,"mtime":1700721437806,"results":"195","hashOfConfig":"116"},{"size":14753,"mtime":1700721438555,"results":"196","hashOfConfig":"116"},{"size":18657,"mtime":1700721438606,"results":"197","hashOfConfig":"116"},{"size":18400,"mtime":1700721442870,"results":"198","hashOfConfig":"116"},{"size":6811,"mtime":1700721442545,"results":"199","hashOfConfig":"116"},{"size":5100,"mtime":1700721442752,"results":"200","hashOfConfig":"116"},{"size":65310,"mtime":1700721438430,"results":"201","hashOfConfig":"116"},{"size":1022,"mtime":1700721442987,"results":"202","hashOfConfig":"116"},{"size":2650,"mtime":1700721442940,"results":"203","hashOfConfig":"116"},{"size":2764,"mtime":1700721443038,"results":"204","hashOfConfig":"116"},{"size":2132,"mtime":1700721443287,"results":"205","hashOfConfig":"116"},{"size":4151,"mtime":1700721443104,"results":"206","hashOfConfig":"116"},{"size":695,"mtime":1700721445613,"results":"207","hashOfConfig":"116"},{"size":12799,"mtime":1700721440337,"results":"208","hashOfConfig":"116"},{"size":12261,"mtime":1700721440432,"results":"209","hashOfConfig":"116"},{"size":14437,"mtime":1700721440524,"results":"210","hashOfConfig":"116"},{"size":10148,"mtime":1700721440621,"results":"211","hashOfConfig":"116"},{"size":11244,"mtime":1700721441015,"results":"212","hashOfConfig":"116"},{"size":16722,"mtime":1700721440669,"results":"213","hashOfConfig":"116"},{"size":16509,"mtime":1700721441065,"results":"214","hashOfConfig":"116"},{"size":3220,"mtime":1700721440788,"results":"215","hashOfConfig":"116"},{"size":6557,"mtime":1700721443497,"results":"216","hashOfConfig":"116"},{"size":916,"mtime":1700721436887,"results":"217","hashOfConfig":"116"},{"size":4308,"mtime":1700721437035,"results":"218","hashOfConfig":"116"},{"size":4466,"mtime":1700721443614,"results":"219","hashOfConfig":"116"},{"size":4154,"mtime":1700721443194,"results":"220","hashOfConfig":"116"},{"size":17822,"mtime":1701329733413,"results":"221","hashOfConfig":"116"},{"size":1437,"mtime":1701168216262,"results":"222","hashOfConfig":"116"},{"size":4474,"mtime":1701328678125,"results":"223","hashOfConfig":"116"},{"size":2288,"mtime":1701324081081,"results":"224","hashOfConfig":"116"},{"size":18892,"mtime":1701328752627,"results":"225","hashOfConfig":"116"},{"size":149,"mtime":1701243154788,"results":"226","hashOfConfig":"116"},{"size":1906,"mtime":1701433602431,"results":"227","hashOfConfig":"116"},{"size":2767,"mtime":1701433585979,"results":"228","hashOfConfig":"116"},{"size":2472,"mtime":1701432376210,"results":"229","hashOfConfig":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},"1doxb2d",{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"232"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"232"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"232"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"232"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"232"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"232"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"232"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"232"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"232"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"232"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"232"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"232"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"232"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"232"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"232"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"232"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"232"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"232"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"232"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"232"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"232"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"232"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"232"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"232"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"232"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"232"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"232"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"232"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"232"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"232"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"232"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"232"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"232"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"232"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"232"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"232"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"232"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"232"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"232"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"232"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"232"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"232"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"232"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"232"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"232"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"232"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"232"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"232"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"232"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"232"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ui\\src\\index.js",[],["509","510"],"E:\\ui\\src\\App.js",[],"E:\\ui\\src\\reportWebVitals.js",[],"E:\\ui\\src\\assets\\js\\script.js",[],"E:\\ui\\src\\Router.js",[],"E:\\ui\\src\\redux\\store.js",[],"E:\\ui\\src\\pages\\google-anaylitics.js",[],"E:\\ui\\src\\redux\\rootReducer.js",[],"E:\\ui\\src\\pages\\home\\TermsandCondition.jsx",[],"E:\\ui\\src\\pages\\home\\Home.jsx",["511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533"],"E:\\ui\\src\\pages\\home\\Contactus.jsx",[],"E:\\ui\\src\\pages\\home\\Disclaimer.jsx",[],"E:\\ui\\src\\pages\\home\\about.jsx",[],"E:\\ui\\src\\pages\\home\\refundpolicy.jsx",[],"E:\\ui\\src\\pages\\home\\Privacypolicy.jsx",[],"E:\\ui\\src\\pages\\userHome\\userHome.jsx",["534","535","536","537","538","539","540","541","542","543"],"import React, { useEffect, useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport Logo from \"../../assets/choria.svg\";\nimport FormMain from \"../dashboard/produce/projectForm/FormMain\";\nimport FormProfile from \"../../pages/myprofile/FormProfile\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport \"../dashboard/produce/project/project.scss\";\nimport \"./userHome.scss\";\n\nimport \"../../assets/theme/theme.css\";\nimport AddProject from \"../dashboard/produce/addProject\";\n// import ManageProject from \"../dashboard/produce/manageProject\";\nimport axios from \"axios\";\nimport Managetwopage from \"../dashboard/produce/maangetwopage\";\nimport ComingSoon from \"../comingSoon/comingSoon\";\nimport Comminuty from \"../community\";\nimport { useNavigate } from \"react-router\";\nimport MessageComponent from \"../messages/message\";\n// import ShowExploreData from \"../customerExplore/showData\";\n// nc\n// import ExploreSection from \"../customerExplore/exploreSection\";\n\n// import ShowDetails from \"../dashboard/produce/showDetails\";\n// import TrackShow from \"../dashboard/produce/trackShow\";\nimport Manageroutetrack from \"../dashboard/decidetrack\";\n// import musics from from \"../../../\"\n// import music3 from \"../../assets/icons/music3.svg\";\n// import musicicon from \"../../assets/musicicon.png\";\nimport musicicon2 from \"../../assets/musicicon2.png\";\nimport { httpUrl, docServerUrl } from '../../restservice'\n\n\nReactModal.setAppElement(\"#root\");\n\nlet isLoaded = true;\n\nexport default function UserHome() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [isProfile, setIsProfile] = useState(false);\n\n  const [selectedPage, setSelectedPage] = useState(1)\n\n  const [tabPage, setTabPage] = useState(2)\n\n  const [pcount, setPcount] = useState()\n\n\n  const [openDetailsBox, setOpenDetailsBox] = useState(true)\n  // const [storeTracksFolderSection, setStoreTracksFolderSection] = useState(\"\")\n\n  // nc \n\n  const [isLoading, setisLoading] = useState(true)\n\n  const navigate = useNavigate();\n  const docServer = docServerUrl;\n  // const docServer = docServerUrl\n  let userData = JSON.parse(localStorage.getItem('userData'))\n  let userPhoto = JSON.parse(localStorage.getItem('photo'));\n  let getDoc = userPhoto?.docpath;\n  let getDocLink = userPhoto?.urllink;\n\n  let getName = userData?.name\n  let passableId = userData?.id\n  let pName = sessionStorage.getItem(\"project\")\n  let pNameCount = sessionStorage.getItem(\"proname\")\n\n  useEffect(() => {\n\n      axios.get(httpUrl +  'project?customer=' + passableId)\n      .then((result) => {\n        localStorage.setItem('lengthdata', result.data.length)\n        let responseJson = result.data;\n        console.log(responseJson);\n\n        if (responseJson.length === 0) {\n          isLoaded = true\n          setSelectedPage(1)\n          console.log(\"Projects Not Found\")\n        } else {\n          isLoaded = false\n          setSelectedPage(2)\n          if (pNameCount > 0) {\n            setPcount(pNameCount)\n          }\n          console.log(\"User Projects responseJson:\",responseJson)\n          console.log(\"Projects Found\")\n        }\n        // if (pName) {\n        //   setPcount(1)\n        // }\n\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n        isLoaded = true\n        setSelectedPage(1)\n      });\n  }, [passableId])\n\n  useEffect(() => {\n    if (localStorage.getItem(\"userData\") === null) {\n      localStorage.clear();\n      navigate(\"/\");\n    }\n\n    // nc\n    window.addEventListener('popstate', (event) => {\n      window.location.href = 'https://choira.io';\n    });\n\n    return () =>{\n      console.log(\"user home unmounted \");\n    }\n\n  }, [])\n\n\n\n  function toggleModal() {\n    setIsOpen(!isOpen);    \n  }\n\n  function projectDone() {\n    isLoaded = false\n    setSelectedPage(2)\n  }\n\n  function openProfile() {\n    setIsProfile(!isProfile);\n  }\n\n  function removeIcon() {\n    setOpenDetailsBox(true)\n    if (pNameCount) {\n      sessionStorage.removeItem(\"proname\");\n      setPcount()\n    } else {\n      setTimeout(() => {\n        sessionStorage.removeItem(\"project\")\n      }, 1000);\n    }\n  }\n\n\n\n  const goback = () => {\n    setOpenDetailsBox(true)\n  }\n  // updateTable = () => {\n  //   let userid = JSON.parse(localStorage.getItem(\"userData\")).id;\n  //   axios.get(httpUrl +  'project?customer=' + userid)\n  //       .then(responce => {\n  //         localStorage.setItem('lengthdata',responce.data.length)\n  //         console.log(responce.data)\n  //       });\n  // }\n\n  return (\n    // <!-- [WRAPPER] -->\n    <div id=\"wrapper\">\n      {/* <!-- [MAIN CONTAINER] ------------ --> */}\n\n      <main className=\"main-container\">\n        {/* <!-- [SIDEBAR] ------------ --> */}\n        <aside className=\"sidebar\">\n          <div className=\"sidebar__wrap\">\n            <div className=\"sidebar__logo\">\n              <a href=\"/\" className=\"sidebar__logo--img\">\n                <img src={Logo} alt=\"Logo main\" />\n              </a>\n              {/* nc */}\n              {/* <button className=\"btn-primary\" style={{ padding: \"11px 23px\" }} onClick={() => { setSelectedPage(3); setTabPage(0) }}>Start Jam</button> */}\n              {/* <button className=\"btn-primary\" style={{ padding: \"11px 23px\" }} onClick={() => { setSelectedPage(10); setTabPage(0) }}>Start Jam</button> */}\n              <a href=\"https://jam.choira.io\"><button className=\"btn-primary\" style={{ padding: \"11px 23px\" }}>Start Jam</button></a>\n            </div>\n\n            <div className=\"sidebar__list\">\n              <ul>\n                {/* nc */}\n                <li>\n                  <div onClick={() => { setSelectedPage(3); setTabPage(1); setOpenDetailsBox(true); }} className={tabPage === 1 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-user-group\"}></use>\n                    </svg>\n                    Community\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(2); setOpenDetailsBox(true); if (isLoaded) setSelectedPage(1); else setSelectedPage(2) }} className={tabPage === 2 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Produce\n                  </div>\n                </li>\n                {/* nc */}\n                <li>\n                  {/* <div onClick={() => { setSelectedPage(10); setTabPage(3); setOpenDetailsBox(true); }} className={tabPage === 3 ? \"active-link\" : \"\"}>\n                    <svg className=\"icon-atom\">\n                      <use href={sprite + \"#icon-atom\"}></use>\n\n                    </svg>\n                    Jamming\n                  </div> */}\n\n                  <div onClick={() => {window.location = \"https://jam.choira.io\"; }} className={tabPage === 3 ? \"active-link\" : \"\"}>\n                    <svg className=\"icon-atom\">\n                      <use href={sprite + \"#icon-atom\"}></use>\n\n                    </svg>\n                    Jamming\n                  </div>\n                </li>\n                {/* nc */}\n                {/* <li>\n                  <div onClick={() => { setSelectedPage(4); setTabPage(4); setOpenDetailsBox(true); removeIcon(); }} className={tabPage === 4 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    Messages\n                    {pcount ?\n                      <span className=\"badge\">{pcount}</span>\n                      : null}\n                  </div>\n                </li> */}\n\n                {/* <li>\n                  <div onClick={() => { setSelectedPage(5); setTabPage(5); setOpenDetailsBox(true); }} className={tabPage === 5 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-music\"}></use>\n                    </svg>\n                    Explore\n                  </div>\n                </li> */}\n                {/* <li>\n                  <div onClick={() => { setSelectedPage(7); setTabPage(6) }} className={tabPage === 6 ? \"active-link\" : \"\"}>\n                    <img src={musicicon2} alt=\"image\" width=\"25px\" height=\"25px\" />\n                    // <svg>\n                    // <use href={sprite + \"#icon-folder\"}></use>\n                    // </svg> \n                    Tracks\n                  </div>\n                </li> */}\n                <li className=\"belowProfile\">\n                  <div onClick={() => { openProfile() }} className={tabPage === 7 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-checkmark\"}></use>\n                    </svg>\n                    Profile\n                  </div>\n                </li>\n\n              </ul>\n\n              <div className=\"sidebar__user\" onClick={openProfile}>\n                <div className=\"sidebar__user--img\">\n                  {getDoc !== null ?\n                    (\n                      <img src={docServer + getDoc} alt=\"User\" />\n                    ) : (\n                      <img src={getDocLink} alt=\"User\" />\n                    )\n                  }\n                </div>\n                <div className=\"sidebar__user--text\">\n                  <h3>{getName}</h3>\n                  <p>My Profile</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n\n        {/* <!-- [CONTENT BOX] --> */}\n        <div >\n          <div className={\"content\" + (selectedPage !== 1 && selectedPage !== 2 && selectedPage !== 3 && selectedPage !== 7 && selectedPage !== 10 ? \" hide\" : \"\")}>\n            {selectedPage === 1 ?\n              (<AddProject closeModelFunction={toggleModal} setOpenDetailsBox={setOpenDetailsBox} />)\n              :\n              selectedPage === 2 ?\n                (<Managetwopage />)\n                :\n                selectedPage === 3 ?\n                  (<Comminuty />)\n                  :\n                  selectedPage === 7 ?\n                    (<Manageroutetrack />)\n\n                    :\n                    selectedPage === 10 ?\n                    (<ComingSoon />):null\n            }\n\n          </div>\n          <div className={\"content limitHeight80\" + (selectedPage !== 4 ? \" hide\" : \"\")}>\n            {/* <MessageComponent /> */}\n            {selectedPage === 4 ?\n              (<MessageComponent />)\n              : null\n            }\n          </div>\n          {/* <div className={\"contentSelf\" + (selectedPage !== 5 ? \" hide\" : \"\")}>\n            <ExploreSection />\n          </div> */}\n          {/* <div className={\"contentSelf\" + (selectedPage !== 7 ? \" hide\" : \"\")}>\n             <Manageroutetrack/>  \n             </div> */}\n        </div>\n\n      </main>\n\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormMain toggleModals={toggleModal} changePage={projectDone} />\n        {/* <button onClick={toggleModal}>Close modal</button> */}\n      </ReactModal>\n\n      <ReactModal\n        isOpen={isProfile}\n        onRequestClose={openProfile}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormProfile />\n      </ReactModal>\n\n    </div>\n  );\n}\n","E:\\ui\\src\\pages\\arm\\armHome.jsx",["544","545"],"import React, { useEffect, useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport Logo from \"../../assets/choria.svg\";\nimport FormMain from \"../dashboard/produce/projectForm/FormMain\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport \"../dashboard/produce/project/project.scss\";\nimport \"./armHome.scss\"\nimport { docServerUrl } from '../../restservice'\nimport \"../../assets/theme/theme.css\";\n\nimport ShowArmUsers from \"./user/showUsers\";\nimport Setprojectpage from \"./projects/Setprojectpage\";\nimport FormProjectRM from \"../myprofile/FormProfileRM\";\nimport { useNavigate } from \"react-router\";\nimport MessageManager from \"../messages/messageManager\";\nimport Managetracks from \"./Tracksstatus\";\nimport ManagepageTrack from \"./managetrack\";\n\nReactModal.setAppElement(\"#root\");\n\n\nexport default function ArmHome() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [isProfile, setIsProfile] = useState(false);\n\n  const [tabPage, setTabPage] = useState(1)\n\n  const [getName, setGetName] = useState(\"\")\n\n  const navigate = useNavigate();\n  const docServer = docServerUrl\n  let userPhoto = JSON.parse(localStorage.getItem('photo'));\n  let getDoc = userPhoto?.docpath;\n  let getDocLink = userPhoto?.urllink;\n\n  let userData;\n\n  useEffect(() => {\n    if (localStorage.getItem(\"userData\") === null) {\n      localStorage.clear();\n      navigate(\"/\");\n    }\n    else {\n      userData = JSON.parse(localStorage.getItem('userData'));\n      setGetName(userData.name)\n    }\n  }, [])\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  function openProfile() {\n    setIsProfile(!isProfile);\n  }\n\n  return (\n    // <!-- [WRAPPER] -->\n    <div id=\"wrapper\">\n      {/* <!-- [MAIN CONTAINER] ------------ --> */}\n\n      <main className=\"main-container\">\n        {/* <!-- [SIDEBAR] ------------ --> */}\n        <aside className=\"sidebar\">\n          <div className=\"sidebar__wrap\">\n            <div className=\"sidebar__logo\">\n              <a href=\"/userHome\" className=\"sidebar__logo--img\">\n                <img src={Logo} alt=\"Logo main\" />\n              </a>\n\n              {/* <button className=\"btn-primary\">Start Jam</button> */}\n            </div>\n\n            <div className=\"sidebar__list\">\n              <ul>\n                <li>\n                  <div onClick={() => { setTabPage(1) }} className={tabPage === 1 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-user-group\"}></use>\n                    </svg>\n                    All Projects\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(2); }} className={tabPage === 2 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    User\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(4); }} className={tabPage === 4 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Tracks\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(3); }} className={tabPage === 3 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    Chats\n                  </div>\n                </li>\n              </ul>\n\n              <div className=\"sidebar__user\" onClick={openProfile}>\n                <div className=\"sidebar__user--img\">\n                  {getDoc !== null ?\n                    (\n                      <img src={docServer + getDoc} alt=\"User\" />\n                    ) : (\n                      <img src={getDocLink} alt=\"ARM\" />\n                    )\n                  }\n                </div>\n                <div className=\"sidebar__user--text\">\n                  <h3>{getName}</h3>\n                  <p>ARM Profile</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n\n        {/* <!-- [CONTENT BOX] --> */}\n\n        <div className={\"con page-margin\" + (tabPage === 3 ? \" hide\" : \"\")} >\n          {tabPage === 1 ?\n            (<Setprojectpage />)\n            :\n            tabPage === 2 ?\n              (<ShowArmUsers />)\n              :\n              tabPage === 4 ?\n                (<ManagepageTrack />)\n                : null\n          }\n        </div>\n        <div className={\"con page-margin\" + (tabPage !== 3 ? \" hide\" : \"\")}  >\n          <MessageManager />\n        </div>\n      </main>\n\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormMain />\n        {/* <button onClick={toggleModal}>Close modal</button> */}\n      </ReactModal>\n\n      <ReactModal\n        isOpen={isProfile}\n        onRequestClose={openProfile}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormProjectRM />\n      </ReactModal>\n\n    </div>\n  );\n}\n","E:\\ui\\src\\pages\\admin\\adminHome.jsx",["546","547","548"],"import React, { useEffect, useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport Logo from \"../../assets/choria.svg\";\nimport FormMain from \"../dashboard/produce/projectForm/FormMain\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport \"../dashboard/produce/project/project.scss\";\nimport \"./adminHome.scss\"\nimport { docServerUrl } from '../../restservice'\nimport \"../../assets/theme/theme.css\";\n\nimport ComingSoon from \"../comingSoon/comingSoon\";\nimport ShowUsers from \"./user/showUsers\";\nimport Setprojectpage from \"./projects/Setprojectpage\";\nimport ShowEmployeePage from \"./employee/Setpage\";\nimport FormProjectAdmin from \"../myprofile/FormProfileAdmin\";\nimport { useNavigate } from \"react-router\";\nimport ShowDashboardPage from \"./dashboard/setDashboard\";\nimport Setpagegenre from \"./genre/setpagegenre\";\nimport ShowTracksPage from \"./tracks/setpagetracks\";\nimport musicicon2 from \"../../assets/musicicon2.png\";\n\nReactModal.setAppElement(\"#root\");\n\n\nexport default function AdminHome() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [isProfile, setIsProfile] = useState(false);\n\n  const [tabPage, setTabPage] = useState(1)\n  const [getName, setGetName] = useState(\"\")\n\n  const navigate = useNavigate();\n  const docServer = docServerUrl\n  let userPhoto = JSON.parse(localStorage.getItem('photo'));\n  let getDoc = userPhoto?.docpath;\n  let getDocLink = userPhoto?.urllink;\n  let userData;\n  useEffect(() => {\n    if (localStorage.getItem(\"userData\") === null) {\n      localStorage.clear();\n      navigate(\"/\");\n    }\n    else {\n      userData = JSON.parse(localStorage.getItem('userData'));\n      setGetName(userData.name)\n    }\n  }, [])\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  function openProfile() {\n    setIsProfile(!isProfile);\n  }\n\n  return (\n    // <!-- [WRAPPER] -->\n    <div id=\"wrapper\">\n      {/* <!-- [MAIN CONTAINER] ------------ --> */}\n\n      <main className=\"main-container\">\n        {/* <!-- [SIDEBAR] ------------ --> */}\n        <aside className=\"sidebar\">\n          <div className=\"sidebar__wrap\">\n            <div className=\"sidebar__logo\">\n              <a href=\"/userHome\" className=\"sidebar__logo--img\">\n                <img src={Logo} alt=\"Logo main\" />\n              </a>\n\n              {/* <button className=\"btn-primary\">Start Jam</button> */}\n            </div>\n\n            <div className=\"sidebar__list\">\n              <ul>\n                <li>\n                  <div onClick={() => { setTabPage(1) }} className={tabPage === 1 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-user-group\"}></use>\n                    </svg>\n                    DashBoard\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(2); }} className={tabPage === 2 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    User\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(3) }} className={tabPage === 3 ? \"active-link\" : \"\"}>\n                    <svg className=\"icon-atom\">\n                      <use href={sprite + \"#icon-atom\"}></use>\n\n                    </svg>\n                    All Projects\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(4) }} className={tabPage === 4 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    ARM\n                  </div>\n                </li>\n                <li>\n                  <div onClick={() => { setTabPage(5) }} className={tabPage === 5 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Genre\n                  </div>\n                </li>\n                <li>\n                  <div onClick={() => { setTabPage(6) }} className={tabPage === 6 ? \"active-link\" : \"\"}>\n                  <img src={musicicon2} alt=\"image\" width=\"25px\" height=\"25px\"/>\n                    {/* <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg> */}\n                    Tracks\n                  </div>\n                </li>\n\n                <li>\n                  <p className=\"sidebar_user_prfile\" onClick={openProfile}>\n                      My Profile\n                  </p>\n                </li>\n\n              </ul>\n\n              <div className=\"sidebar__user\" onClick={openProfile}>\n                <div className=\"sidebar__user--img\">\n                  {getDoc !== null ?\n                    (\n                      <img src={docServer + getDoc} alt=\"User\" />\n                    ) : (\n                      <img src={getDocLink} alt=\"Admin\" />\n                    )\n                  }\n                </div>\n                <div className=\"sidebar__user--text\">\n                  <h3>{getName}</h3>\n                  <p>Admin Profile</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n\n        {/* <!-- [CONTENT BOX] --> */}\n        <div className=\"con\">\n        <div  className=\"page-margin\">\n          {tabPage === 1 ?\n            (<ShowDashboardPage />)\n            :\n            tabPage === 2 ?\n              (<ShowUsers />)\n              :\n              tabPage === 3 ?\n                (<Setprojectpage />)\n                :\n                tabPage === 4 ?\n                  (<ShowEmployeePage />)\n                  :\n                  tabPage === 5 ?\n                    (<Setpagegenre />)\n                    :\n                    tabPage === 6 ?\n                      (<ShowTracksPage />)\n                      : null\n          }\n\n        </div>\n        </div>\n       \n      </main>\n\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormMain />\n        {/* <button onClick={toggleModal}>Close modal</button> */}\n      </ReactModal>\n\n      <ReactModal\n        isOpen={isProfile}\n        onRequestClose={openProfile}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormProjectAdmin />\n      </ReactModal>\n\n    </div>\n  );\n}\n","E:\\ui\\src\\components\\loader\\ChoiraLoader.jsx",[],"E:\\ui\\src\\redux\\slices\\modal\\modalReducer.js",[],"E:\\ui\\src\\redux\\slices\\projets\\projectReducer.js",[],"E:\\ui\\src\\spotify.js",[],"E:\\ui\\src\\restservice.js",[],"E:\\ui\\src\\pages\\home\\jsfunctions.js",[],"E:\\ui\\src\\helper\\firebaseInit.js",[],"E:\\ui\\src\\helper\\firebaseMethod.js",[],"E:\\ui\\src\\services\\firebaseService.js",[],"E:\\ui\\src\\components\\video-player\\VideoPlayer.jsx",["549","550","551","552","553"],"import React, { useEffect, useRef, useState } from \"react\";\nimport PauseIcon from \"../../assets/pause-circle-fill.svg\";\nimport PlayIcon from \"../../assets/play-circle-fill.svg\";\n\nimport \"./video-player.scss\";\nimport \"./seek-bar.scss\";\n\nexport default function VideoPlayer() {\n  const videoRef = useRef();\n  const videoPlayerRef = useRef();\n  const controlsRef = useRef();\n  const [currentTime, setCurrentTime] = useState(0);\n  const [seekBarValue, setSeekBarValue] = useState(0);\n  const [isVideoPaused, setIsVideoPaused] = useState(true);\n\n  useEffect(() => {\n    const value = (100 / videoRef.current.duration) * currentTime;\n    setSeekBarValue(value);\n  }, [currentTime]);\n\n  const onTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n\n  const onVideoClick = () => {\n    const { current: video } = videoRef;\n    const { current: controls } = controlsRef;\n    if (video.paused) {\n      video.play();\n      setIsVideoPaused(false);\n      controls.classList.remove(\"paused\");\n    } else {\n      video.pause();\n      setIsVideoPaused(true);\n      controls.classList.add(\"paused\");\n    }\n  };\n\n  const seekVideo = (e) => {\n    e.stopPropagation();\n    const { value } = e.target;\n    const { current: video } = videoRef;\n    const newTime = (video.duration / 100) * value;\n    video.currentTime = newTime;\n  };\n\n  return (\n    <div ref={videoPlayerRef} className=\"video-player\">\n      <video\n        ref={videoRef}\n        // src=\"video.mkv\"\n        width=\"100%\"\n        onTimeUpdate={onTimeUpdate}\n        onClick={onVideoClick}\n        poster=\"images/video-thumbnail.png\"\n      ></video>\n      {/* <div ref={controlsRef} className=\"controls paused\" onClick={onVideoClick}>\n        {isVideoPaused ? (\n          <img className=\"play-icon\" src={PlayIcon} alt=\"\" />\n        ) : (\n          <img className=\"pause-icon\" src={PauseIcon} alt=\"\" />\n        )}\n\n        <input\n          type=\"range\"\n          id=\"seek-bar\"\n          value={seekBarValue || 0}\n          onChange={seekVideo}\n        />\n      </div> */}\n    </div>\n  );\n}\n","E:\\ui\\src\\pocPages\\register.jsx",[],"E:\\ui\\src\\components\\team-carousel\\TeamCarousel.jsx",[],"E:\\ui\\src\\components\\testimonial-carousel\\TestimonialCarousel.jsx",[],"E:\\ui\\src\\pocPages\\extraGoogle.jsx",[],"E:\\ui\\src\\pocPages\\login.jsx",[],"E:\\ui\\src\\pages\\comingSoon\\comingSoon.jsx",[],"E:\\ui\\src\\pages\\customerExplore\\exploreSection.jsx",["554"],"import userEvent from '@testing-library/user-event';\nimport React, { useState } from 'react'\nimport ShowExploreData from \"./showData\";\nimport SubmitData from './submitData';\n\nexport default function ExploreSection() {\n    const [selectedPage, setSelectedPage] = useState(1)\n    const [selectedPrice, setSelectedPrice] = useState(0)\n    const [selectedTrackId, setSelectedTrackId] = useState(0)\n    const [selectedLicense, setSelectedLicense] = useState('')\n    const changeState = input => {\n        setSelectedPage(input)\n    }\n\n    const managepage =()=>{\n        setSelectedPage(1)\n    }\n    return (\n        <div>\n            {\n                selectedPage === 1 ?\n                    <ShowExploreData \n                        changeState={changeState} \n                        setSelectedPrice={setSelectedPrice} \n                        setSelectedTrackId={setSelectedTrackId} \n                        setSelectedLicense={setSelectedLicense}\n                    /> :\n                    <SubmitData goback={managepage} selectedPrice={selectedPrice} selectedTrackId={selectedTrackId} selectedLicense={selectedLicense} />\n            }\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\externalExplore\\exploreSection.jsx",[],"E:\\ui\\src\\pages\\myprofile\\FormProfileAdmin.jsx",["555"],"import React, { Component } from \"react\";\nimport './profile.scss'\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport { httpUrl, docServerUrl } from '../../restservice'\n\nclass FormProjectAdmin extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      localData: {},\n      data: [],\n      photo: {},\n      fields: {},\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      fieldss: {},\n      setotppage: 0,\n      otpdata: {},\n      otp: 1234,\n      fieldsss: {},\n    };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitpassword = this.submitpassword.bind(this);\n\n  }\n\n\n  docServer = docServerUrl;\n  uppercase = word => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      title: data,\n      type: 'success',\n\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  loadData = () => {\n    const page = JSON.parse(localStorage.getItem('userData')).id;\n    const endpoint = httpUrl + 'employee/' + page;\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          data: [{ ...json }],\n          scrolling: false,\n        });\n      }).catch((e) => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Account Inactive',\n          text: 'Your account has now been deactivated.',\n          showConfirmButton: false,\n          timer: 5500\n        })\n        setTimeout(() => {\n          this.logoutUser();\n          window.location.href = \"/\"\n        }, 2000);\n      }\n      );\n  };\n\n  handleChange2(e) {\n    let fieldsss = this.state.fieldsss;\n    fieldsss[e.target.name] = e.target.value;\n    this.setState({\n      fieldsss\n    });\n\n  }\n  otpfunction = () => {\n\n    var digits = '0123456789';\n    let OTP = '';\n    for (let i = 0; i < 4; i++) {\n      OTP += digits[Math.floor(Math.random() * 10)];\n    }\n    console.log(OTP)\n\n    let sendotp = {\n      toMobile: '91' + this.state.fieldss.phone,\n      message: \"Your OTP for verification is: \" + OTP + \". Choira\"\n    }\n\n    axios.post(httpUrl + 'sms/send', sendotp)\n      .then(responce => {\n        this.setState({\n          otpdata: responce.data,\n          scrolling: false,\n          otp: OTP\n        });\n        console.log(responce.data)\n        this.setState({ setotppage: 3 })\n      }).catch(error => {\n        console.log(error, \"something went wrong\")\n        this.setState({ setotppage: 1 })\n      });\n\n  }\n  updatemployee = () => {\n    // alert('otp')\n    console.log(this.state.otp)\n    let idd = JSON.parse(localStorage.getItem('userData')).id;\n    let updateemp = {\n      id: idd,\n      phone: this.state.fieldss.phone\n    }\n    console.log('otp')\n    console.log(this.state.fieldsss.otpnum)\n    console.log(this.state.otp)\n    if (this.state.fieldsss.otpnum === this.state.otp) {\n\n      axios.post(httpUrl + 'employee/update', updateemp)\n        .then(responce => {\n          console.log(responce.data)\n        });\n      Swal.fire({\n        icon: \"success\",\n        title: 'Phone Number Updated',\n        showConfirmButton: false,\n        timer: 1500\n      })\n      this.setState({ setScreenOpen: 0 });\n\n    }\n    else {\n      Swal.fire({\n        icon: \"error\",\n        title: 'Your OTP Is Incorrect',\n        showConfirmButton: false,\n        timer: 1500\n      })\n    }\n\n\n  }\n  backpage() {\n    this.setState({ setScreenOpen: 0 })\n  }\n  handleChange1(e) {\n    let fieldss = this.state.fieldss;\n    fieldss[e.target.name] = e.target.value;\n    this.setState({\n      fieldss\n    });\n    if (this.state.fieldss.phone) {\n      this.setState({ setotppage: 1 });\n    }\n    console.log(this.state)\n  }\n\n  updateProfile = () => {\n    this.setState({ setScreenOpen: 1 });\n  };\n\n  logoutUser() {\n    localStorage.clear();\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.data[0])\n    return header.map((key, index) => {\n      return <label key={index} className=\"labelStyle\" >{key.toUpperCase()}</label>\n    })\n  }\n\n  onChangeFile = event => {\n    this.setState({ selectedFile: event.target.files[0] })\n\n    if (event.target.files[0] !== '') {\n      // this.file = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: event.target.files[0].name,\n          doctype: 'Profile',\n          docpath: \"Customer/\" + this.state.data[0].id + '/' + event.target.files[0].name,\n          urllink: ''\n        }\n      });\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select image to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, this.state.selectedFile.name);\n    formData.append('name', \"Customer/\" + this.state.data[0].id);\n    formData.append('width', '400')\n    formData.append('height', '400')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      alert(err.message);\n    });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.City.value === '' && this.state.selectedFile == null) {\n      return;\n    }\n    this.handleUpload();\n    localStorage.setItem(\"photo\", JSON.stringify(this.state.photo));\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.data[0].id, phone: this.Phone.value, city: this.City.value,\n        photo: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'employee/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n\n  }\n\n  updatepass = () => {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  submitpassword(e) {\n    e.preventDefault();\n\n    let fields = {\n      oldpassword: \"\",\n      newpassword: \"\",\n      confirmpassword: \"\"\n    }\n    console.log(this.state.fields)\n    // console.log(fields)\n\n    let id = JSON.parse(localStorage.getItem('userData')).id;\n    let loginid = JSON.parse(localStorage.getItem('userData')).login.id\n    let passjson = {\n      id: id,\n      login: {\n        id: loginid,\n        password: btoa(this.state.fields.newpassword)\n      },\n\n    }\n\n    let setpass = JSON.parse(localStorage.getItem('userData')).login.password;\n    setpass = atob(setpass)\n    if (setpass !== this.state.fields.oldpassword) {\n\n      Swal.fire({\n        icon: 'error',\n        title: 'Does Not Match old Password',\n      })\n    }\n    else if (setpass === this.state.fields.newpassword) {\n\n      Swal.fire({\n        icon: 'error',\n        title: 'You Are Using Old Password Add New Password',\n      })\n    }\n    else if (this.state.fields.newpassword !== this.state.fields.confirmpassword) {\n\n      Swal.fire({\n        icon: 'error',\n        title: 'New Passowrd And Confirm Password Does Not Match',\n      })\n    }\n    else {\n\n      axios.post(httpUrl + 'employee/update', passjson)\n        .then(responce => {\n          // this.state.fields = fields\n\n          this.setState({\n            fields: fields\n          })\n          console.log(responce.data)\n          Swal.fire({\n            icon: 'success',\n            title: 'Your Password Has Been Changed Successfully',\n            showConfirmButton: false,\n            timer: 1500\n          })\n          this.setState({ setScreenOpen: 0 });\n        }).catch(error => {\n          console.log(error)\n\n        })\n    }\n\n\n\n\n\n\n  }\n\n\n\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        <div className=\"row animateBox\">\n          {this.state.data.map(data => (\n            <div className=\"col-md-4 animated fadeIn\" key={data.id.value}>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"avatar\">\n                    {\n                      data.photo?.docpath !== null ?\n                        (\n                          <img\n                            src={this.docServer + data.photo?.docpath}\n                            className=\"card-img-top\"\n                            alt=\"\"\n                          />\n                        ) : (\n                          <img\n                            src={data.photo.urllink}\n                            className=\"card-img-top\"\n                            alt=\"\"\n                          />\n                        )\n                    }\n\n                  </div>\n                  <ul>\n                    <h5 className=\"card-title\">\n                      {data.name}\n                    </h5>\n                  </ul>\n                  <ul className=\"card-text\">\n                    <span>Location:</span>\n                    {data.city}\n                  </ul>\n                  <ul>\n                    <span className=\"phone\">Phone:</span>{data.phone}\n                  </ul>\n                  <ul>\n                    <span className=\"phone\">Email:</span>{data.email}\n                  </ul>\n\n\n                </div>\n                <div>\n                  {this.state.setScreenOpen === 0 ?\n\n                    <div className=\"btn_margin\">\n\n                      <div className=\"row\">\n                        <div style={{ width: \"33.33%\", float: \"left\" }} >\n                          <a href='/#/home'>\n                            <button onClick={e => {\n                              this.logoutUser();\n                            }}> Log Out </button>\n                          </a>\n                        </div>\n                        <div style={{ width: \"33.33%\", float: \"left\", textAlign: \"center\" }} >\n\n                          <button\n                            onClick={() => {\n                              this.updatepass();\n                            }}\n                          >\n                            Change Password\n                          </button>\n                        </div>\n                        <div style={{ width: \"33.33%\", float: \"left\", textAlign: \"right\" }} >\n                          <button\n                            onClick={e => {\n                              this.updateProfile();\n                            }}\n                          >\n                            Edit\n                          </button>\n                        </div>\n                      </div>\n                      <div>\n\n                      </div>\n\n\n                    </div>\n                    : null}\n                </div>\n              </div>\n\n\n              {this.state.setScreenOpen === 2 ?\n                <div className=\"col-xs-2\">\n                  <form onSubmit={this.submitpassword}>\n                    <div className=\"card-body\">\n                      <ul>\n                        <label className=\"label\" >Old Password</label><br />\n                        <input type=\"password\" required name=\"oldpassword\" className=\"input\" value={this.state.fields.oldpassword} onChange={this.handleChange} />\n                      </ul>\n                      <ul>\n                        <label className=\"label\" >New Password</label><br />\n                        <input type=\"password\" required name=\"newpassword\" className=\"input\" value={this.state.fields.newpassword} onChange={this.handleChange} />\n                      </ul>\n                      <ul>\n                        <label className=\"label\" >Confirm Password</label><br />\n                        <input type=\"password\" required name=\"confirmpassword\" className=\"input\" value={this.state.fields.confirmpassword} onChange={this.handleChange} /></ul>\n                    </div>\n\n                    <div className=\"btn_margin\" style={{ margin: '0px 25px' }}>\n                      {this.state.setScreenOpen === 2 ?\n                        <button type=\"Submit\" className=\"btn btn-light btn-block w-50 mx-auto\" >\n                          Submit\n                        </button>\n                        : null}\n                    </div>\n                  </form>\n                </div>\n                : null}\n\n              {this.state.setScreenOpen === 1 ?\n                <div className=\"col-xs-2\">\n                  <form onSubmit={this.handleSubmit}>\n                    <div className=\"card-body\">\n                      <ul>\n                        <label className=\"label\" >Phone</label><br />\n                        <input type=\"text\" className=\"input\" name=\"phone\" value={this.state.fieldss.phone} onChange={this.handleChange1} ref={(ref) => { this.Phone = ref }} placeholder={data.phone} />\n                      </ul>\n                      {\n                        this.state.setotppage === 1 ?\n                          <ul>\n                            <button type=\"submit\" className=\"otpchange\" onClick={() => { this.otpfunction() }} >Send OTP</button>\n                            <button className=\"otpchange1\" onClick={() => { this.backpage() }} >Cancel</button>\n                            <br />\n                          </ul>\n                          : null}\n                      {\n                        this.state.setotppage === 3 ?\n                          <ul>\n                            <input type=\"number\" className=\"input\" name=\"otpnum\" required placeholder=\"Enter OTP\" value={this.state.fieldsss.otpnum} id=\"otpnum\" onChange={this.handleChange2} />\n                            <br />\n                            <button type=\"submit\" value=\"Submit\" className=\"otpchange1\" onClick={() => { this.updatemployee() }} >Submit</button>\n                            <br />\n                          </ul>\n\n                          : null}\n                      {\n                        this.state.setotppage === 0 ?\n                          <ul>\n                          </ul>\n                          : null\n                      }\n                      <ul>\n                        <label className=\"label\" >City</label><br />\n                        <input type=\"text\" className=\"input\" ref={(ref) => { this.City = ref }} placeholder={data.city} name=\"city\" /></ul>\n                    </div>\n                    <div style={{ padding: '15px 20px 0px 20px', textAlign: \"center\", display: \"flex\", flexDirection: \"row\" }}>\n                      <span style={{ fontSize: '13px' }}>Select Image:</span>\n                      <span style={{ marginBottom: 10 }}>\n                        <input style={{ fontSize: '12px', width: 'auto' }} type=\"file\" onChange={this.onChangeFile} />\n                      </span>\n                      <div className=\"up-img\">\n                        {imageUrl &&\n                          <img\n                            src={imageUrl}\n                            className=\"card-img-bottom\"\n                            alt=\"\"\n                          />\n                        }\n                      </div>\n                    </div>\n                    <div className=\"btn_margin\" style={{ margin: '0px 20px' }}>\n                      {this.state.setScreenOpen === 1 ?\n                        <button type=\"Submit\" className=\"btn btn-light btn-block w-50 mx-auto\" >\n                          Submit\n                        </button>\n                        : null}\n                    </div>\n                  </form>\n                </div>\n                : null}\n              {/* {this.state.setScreenOpen === 1 ?\n                <div className=\"col-xs-2\">\n                  <form onSubmit={this.handleSubmit}>\n                    <div className=\"card-body\">\n                      <ul>\n                        <label className=\"label\" >Phone</label><br />\n                        <input type=\"text\" className=\"input\" ref={(ref) => { this.Phone = ref }} placeholder={data.phone} name=\"phone\" /></ul>\n                      <ul>\n                        <label className=\"label\" >City</label><br />\n                        <input type=\"text\" className=\"input\" ref={(ref) => { this.City = ref }} placeholder={data.city} name=\"city\" /></ul>\n                    </div>\n                    <div style={{ padding: '15px 20px 0px 20px', textAlign: \"center\", display: \"flex\", flexDirection: \"row\"}}>\n                      <span style={{ fontSize: '13px' }}>Select Image:</span>\n                      <span style={{ marginBottom: 10 }}>\n                        <input style={{ fontSize: '12px', width: 'auto' }} type=\"file\" onChange={this.onChangeFile} />\n                      </span>\n                      <div className=\"up-img\">\n                        {imageUrl &&\n                          <img\n                            src={imageUrl}\n                            className=\"card-img-bottom\"\n                            alt=\"\"\n                          />\n                        }\n                      </div>\n                    </div>\n                    <div className=\"btn_margin\" style={{ margin: '0px 25px' }}>\n                      {this.state.setScreenOpen === 1 ?\n                        <button type=\"Submit\" className=\"btn btn-light btn-block w-50 mx-auto\" >\n                          Submit\n                        </button>\n                        : null}\n                    </div>\n                  </form>\n                </div>\n                : null} */}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormProjectAdmin;\n","E:\\ui\\src\\pages\\myprofile\\FormProfile.jsx",[],"E:\\ui\\src\\pages\\dashboard\\produce\\addProject.jsx",["556","557","558"],"import React, { useState } from 'react';\n\nimport sprite from \"../../../assets/icons/sprite.svg\";\nimport ShowDetails from './showDetails';\nimport TrackShow from './trackShow';\n// import folderIcon from \"../../../assets/foldershow.png\";\n\nexport default function AddProject(props) {\n    const { closeModelFunction } = props\n\n\n    return (\n        <>\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Produce\n                </h1>\n            </div>\n\n            <p style={{textAlign:\"left\"}}>\n                Get a team of the world’s best mixing &amp; mastering engineers,\n                singers, songwriters, producers and studio musicians for your\n                project\n            </p>\n\n            <button onClick={closeModelFunction} className=\"btn-primary\">\n                <svg>\n                    <use href={sprite + \"#icon-folder-plus\"}></use>\n                </svg>\n                New Project\n            </button>\n\n            {/* <TrackShow setOpenDetailsBox={props.setOpenDetailsBox} setStoreTracksFolderSection={props.setStoreTracksFolderSection} /> */}\n            \n        </>\n    )\n}\n","E:\\ui\\src\\pages\\dashboard\\produce\\maangetwopage.jsx",["559","560","561","562","563"],"import React, { useState } from 'react'\nimport ManageProject from './manageProject'\nimport FormProject from './project/FormProject'\nimport ReactModal from \"react-modal\";\n// import FormMain from \"../dashboard/produce/projectForm/FormMain\";\nimport FormMain from \"../../dashboard/produce/projectForm/FormMain\";\n// import ShowDetails from \"../../dashboard/produce/showDetails\"\n// import Swal from \"sweetalert2\"; \n\n\n\nReactModal.setAppElement(\"#root\");\nlet projectid\nlet isLoaded = true\nexport default function Managetwopage(props) {\n\n    const [pageSelection, setPageSelection] = useState(1)\n    const [openDetailsBox, setOpenDetailsBox] = useState(true)\n    const [storeTracksFolderSection, setStoreTracksFolderSection] = useState(\"\")\n    const [isOpen, setIsOpen] = useState(false);\n\n    const backpage=()=>{\n        setPageSelection(1)\n    }\n\n   const backmanagepage =(senableid)=>{\n    projectid = senableid\n       setPageSelection(2)\n    //    alert(projectid)\n   } \n\n   function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n  function projectDone() {\n    isLoaded = false\n    setPageSelection(1)\n  }\n  const goback=()=>{\n    setOpenDetailsBox(true)\n  }\n\n    return (\n    \n     <div id=\"Wrapper\">\n         <main>\n            \n                 {\n                    pageSelection === 1?\n                   <ManageProject closeModelfunction={toggleModal}  backmanagepage={backmanagepage}/>\n                   :\n                   pageSelection === 2?\n                   <FormProject goback={backpage} projectid={projectid}/>\n                   :null\n                   \n                }\n       \n        </main>\n        <ReactModal\n                    isOpen={isOpen}\n                    onRequestClose={toggleModal}\n                    contentLabel=\"My dialog\"\n                    className=\"Modal\"\n                    overlayClassName=\"Overlay\"\n                >\n                    <FormMain toggleModals={toggleModal} changePage={projectDone} />\n                    {/* <button onClick={toggleModal}>Close modal</button> */}\n                </ReactModal>\n                </div>\n        \n\n\n    )\n}\n","E:\\ui\\src\\pages\\messages\\message.jsx",["564","565"],"import React from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './message.scss';\nimport axios from \"axios\";\nimport { nodeUrl } from '../../restservice';\n\nexport default function MessageComponent() {\n\n    // const [selectedUUID, setSelectedUUID] = useState(1)\n    const [chatInput, setChatInput] = React.useState(false)\n    // let customerId = JSON.parse(localStorage.getItem('userData')).id\n    let projectname = '&';\n    if (sessionStorage.getItem(\"project\")) {\n        projectname = '&' + sessionStorage.getItem(\"project\")\n    }\n\n    // const selectChat = () => {\n    //     setSelectedUUID(12)\n    // }\n\n    // const detectChange = (event) => {\n    //     if (event.key === 'Enter') {\n    //         console.log(\"object\")\n    //         console.log(chatInput)\n    //         setChatInput(\"\")\n    //     }\n    // }\n\n    let url = nodeUrl + \"customer?name=\" + encodeURI(JSON.parse(localStorage.getItem(\"userData\")).name + projectname)\n\n\n\n\n    return (\n        <div className='flexSet'>\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    Messages\n                </h1>\n            </div>\n            {chatInput ? (\n                <div className=\"messageBody\">\n                    <div className=\"msgBox\">\n                        <div className=\"profileBox active\">\n                            <div className=\"profilePic\"><img src=\"https://choira.io/clogo/chatbotIcon.jpeg\" alt=\"User\" /></div>\n                            <div className=\"profileDetails\">\n                                <b>Artist Relationship Manager</b>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"chatBox\">\n                        {projectname ?\n                            <div className=\"animateBox\">\n                                <div style={{ paddingTop: '20px', fontSize: '20px' }}>\n                                    <div className=\"chatBox\">\n                                        <p style={{ fontSize: '18px', marginBottom: '10px' }}>Congratulations Composer! You have successfully created the project <b>{projectname}</b>.</p>\n                                        <p style={{ fontSize: '18px', marginBottom: '10px' }}>Do you wish to chat with your Relationship Manager?</p>\n                                    </div>\n                                </div>\n                            </div>\n                            : null}\n                        <div className=\"showChat\">\n                            <div className=\"showChatArea\">\n                                <div className=\"buttonBox\" onClick={() => setChatInput(false)}>\n                                    Start Chat\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            ) : (\n                <iframe src={url} className=\"iframeBody\" frameBorder=\"0\"></iframe>\n            )}\n\n\n        </div>\n    )\n}","E:\\ui\\src\\pages\\admin\\tracks\\setpagetracks.jsx",[],"E:\\ui\\src\\pages\\admin\\genre\\setpagegenre.jsx",[],"E:\\ui\\src\\pages\\admin\\dashboard\\setDashboard.jsx",["566"],"import React, { useState } from 'react'\nimport AdminDashboard from './dashboard';\n\nexport default function ShowDashboardPage() {\n\n    const [dashboard, setDashboard] = useState(1)\n\n    const showaddpage = () => {\n        setDashboard(2)\n    }\n\n    return (\n        <>\n            {\n                dashboard === 1 ?\n                    <AdminDashboard />\n                    : null\n            }\n        </>\n    )\n}\n","E:\\ui\\src\\pages\\admin\\employee\\Setpage.jsx",[],"E:\\ui\\src\\pages\\admin\\projects\\Setprojectpage.jsx",[],"E:\\ui\\src\\pages\\admin\\user\\showUsers.jsx",[],"E:\\ui\\src\\pages\\arm\\managetrack.jsx",[],"E:\\ui\\src\\pages\\arm\\Tracksstatus.jsx",["567","568","569","570","571","572","573","574","575","576","577"],"import React, { useEffect, useState } from \"react\";\nimport \"./addtrack.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// import { computeHeadingLevel } from \"@testing-library/react\";\nimport { httpUrl, docServerUrl } from '../../restservice'\n\nlet idtrack\nlet statustrack\nlet Armname=JSON.parse(localStorage.getItem(\"userData\")).name;\n\nexport default function Managetracks(props) {\n\n    const [data, setData] = useState([]);\n    const [datafill, setDatafill] = useState([]);\n    const [searchterm, setsearchterm] = useState('');\n    const [pagestatus, setpagestatus] = useState('ALL');\n    const [trackstatus, settrackstatus] = useState('ALL_TRACK');\n    const { showaddtrack, showedittrack } = props\n    const [changepage, setchangepage] = useState(0);\n    const [changerejectstatus, setchangerejectstatus] = useState(false);\n    const [trackdata, settrackdata] = useState([]);\n\n    const [totaltrack, settotaltrack] = useState([]);\n    const [totalsold, setotalsold] = useState(0);\n\n    const docServer = docServerUrl\n    // let apiCallInit = true;\n\n    useEffect(() => {\n        // setpagezero()\n        setpagefour()\n        setpagetwo()\n    }, [])\n\n\n    function getToTitles(str) {\n        let string = str.replace(/_/g, ' ');\n        return toTitles(string);\n    }\n    function toTitles(s) {\n        return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); });\n    }\n\n    function getToTitles(str) {\n        if (str) {\n            let string;\n            if (str !== ' ') {\n                string = str.replace(/_/g, ' ');\n            } else {\n                string = str;\n            }\n            return toTitles(string);\n        }\n    }\n\n    const chnagepageitem = (id) => {\n        setchangerejectstatus(true)\n        idtrack = id\n\n    }\n\n    const statussubmit = (e) => {\n        // e.preventDefault();\n\n        //  console.log(idstore)\n        // const { rejectreason } = values\n\n        let statusupdate = {\n            id: idtrack,\n            rejectreason: e,\n            status: \"REJECT\"\n        }\n\n        axios.post(httpUrl +  'soundTrack/update', statusupdate)\n            .then(responce => {\n                console.log(responce.data)\n                statustrack = pagestatus;\n                setpagezeroall()\n            });\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Rejected',\n            showConfirmButton: false,\n            timer: 1500\n        })\n        // values.rejectreason = \"\"\n        // setchangerejectstatus(false)\n\n    }\n\n\n    const showedit = (senidd) => {\n        showedittrack(senidd)\n    }\n\n\n    function trackdetails(id) {\n\n        setchangepage(1)\n        axios.get(httpUrl +  'soundTrack/' + id)\n            .then(responce => {\n                settrackdata(responce.data)\n                // setidstore(responce.data.id)\n                console.log(responce.data)\n            });\n\n    }\n\n\n\n    function checkstatus(e) {\n        let val = e.target.value;\n        statustrack = val\n        if (val === 'SUBMITTED') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'PUBLISHED') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'SOLD') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'APPROVED') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'REJECT') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else {\n            setpagestatus(val)\n            setpagefour()\n            setpagetwo();\n            // filterItems(val)\n        }\n\n    }\n\n\n\n    function setpagezeroall() {\n        if (trackstatus !== 'ALL_TRACK') {\n            let strdata = '&status=' + statustrack + '&track=' + trackstatus\n            axios.get(httpUrl +  'soundTrack?uploadedby='+Armname+ strdata)\n                .then(responce => {\n                    setData([...responce.data])\n                    setDatafill([...responce.data])\n                    console.log(responce.data)\n                });\n\n        } else if (statustrack === 'ALL') {\n            setpagefour();\n            setpagetwo();\n        } else {\n            let strdata = 'status=' + statustrack\n\n            axios.get(httpUrl +  'soundTrack?uploadedby='+ Armname +'&'+strdata)\n                .then(responce => {\n                    setData([...responce.data])\n                    setDatafill([...responce.data])\n                    console.log(responce.data)\n                });\n        }\n    }\n\n    function setpagetwo() {\n        axios.get(httpUrl +  'soundTrack?uploadedby='+Armname+'&status=SOLD')\n            .then(responce => {\n                let jsonData = [...responce.data]\n                setotalsold(jsonData.length)\n                console.log(responce.data)\n            });\n\n    }\n\n    function nonfeatured() {\n\n        axios.get(httpUrl +  'soundTrack?uploadedby='+Armname+'&track=NON_FEATURED')\n            .then(responce => {\n                setData([...responce.data])\n                settrackstatus('NON_FEATURED')\n                console.log(responce.data)\n            });\n    }\n\n    function featured() {\n\n        axios.get(httpUrl +  'soundTrack?uploadedby='+Armname+'&track=FEATURED')\n            .then(responce => {\n                setData([...responce.data])\n                settrackstatus('FEATURED')\n                console.log(responce.data)\n            });\n    }\n\n    function setpagefour() {\n\n        axios.get(httpUrl +  'soundTrack?uploadedby='+Armname)\n            .then(responce => {\n                let jsonData = [...responce.data]\n                setData([...responce.data])\n                setDatafill([...responce.data])\n                settotaltrack(jsonData.length)\n                settrackstatus('ALL_TRACK')\n                // console.log(responce.data)\n            });\n\n    }\n\n    function deleteemployee(id) {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this Sound Track!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n\n                axios.delete(httpUrl +  'soundTrack/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        console.log(responce)\n                        statustrack = pagestatus;\n                        setpagezeroall()\n                    });\n\n\n            }\n        });\n    }\n\n\n    function statuschange(id, status) {\n\n        let updateproject = {\n            id: id,\n            status: \"PUBLISHED\"\n        }\n\n        console.log(\"updateproject\", updateproject)\n\n        axios.post(httpUrl +  'soundTrack/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                setpagefour()\n            });\n    }\n\n    function rejectedChange(id, status) {\n\n        Swal.fire({\n            title: 'Reject Reason',\n            input: 'text',\n            inputPlaceholder: 'Enter your Reject Reason',\n            confirmButtonText: 'Submit',\n            cancelButtonText: 'Cancel'\n        }).then((result) => {\n            if (result.value) {\n                console.log(\"rejectedChange:\", result.value)\n                statustrack = pagestatus;\n                statussubmit(result.value)\n            }\n        });\n\n        // setchangerejectstatus(true)\n        idtrack = id\n    }\n\n\n\n    return (\n        <div>\n            {changepage === 0 ?\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n                                    <span>\n                                        <h3 style={{ color: \"#ffc701\" }} >\n                                            <span style={{ float: \"left\" }}>Total Track = {totaltrack} &nbsp;  Total Sold = {totalsold} </span>\n                                        </h3>\n                                    </span>\n                                    <span onClick={() => { showaddtrack() }} title=\"Add Track\" style={{ float: \"right\",cursor:\"pointer\" }}>\n                                        <i className=\"fa fa-plus\"></i>\n                                    </span>\n                                </div>\n                                <div style={{ float: \"left\", margin: \"12px\" }}>\n                                    <button onClick={() => { featured() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 32px\", fontSize: \"15px\" }} className={trackstatus === 'FEATURED' ? \"active-link\" : \"\"}>FEATURED</button>\n                                    <button onClick={() => { nonfeatured() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 32px\", fontSize: \"15px\" }} className={trackstatus === 'NON_FEATURED' ? \"active-link\" : \"\"}>NON FEATURED</button>\n                                    <button onClick={() => { setpagefour() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 32px\", fontSize: \"15px\" }} className={trackstatus === 'ALL_TRACK' ? \"active-link\" : \"\"}>ALL TRACK</button>\n\n                                </div>\n                                <div className=\"dropdownstyle1\">\n                                    <select name=\"pagestatus\" onChange={checkstatus} id=\"status\">\n                                        <option value=\"ALL\">All</option>\n                                        <option value=\"SUBMITTED\" >SUBMITTED</option>\n                                        <option value=\"PUBLISHED\">PUBLISHED</option>\n                                        <option value=\"SOLD\">SOLD</option>\n                                        <option value=\"REJECT\">REJECT</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    {\n\n                                        pagestatus === 'ALL' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th >Genre</th>\n                                                                <th >Composer</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{entry.tracktype}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n                                        \n                                                                        {/* {entry.status === 'SUBMITTED' ?\n                                                                            <span>\n                                                                                <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Approved\" style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-thumbs-up\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                &nbsp;\n                                                                                &nbsp;\n                                                                                \n                                                                            </span>\n                                                                            : null} */}\n                                                                           \n                                                                        {/* {entry.status === 'SOLD' ?\n                                                                            <span onClick={() => { deleteemployee(entry.id) }} title=\"Delete\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null}\n\n                                                                        {entry.status === 'APPROVED' || entry.status === 'PUBLISHED' ?\n                                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submitted\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-check\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null\n                                                                        }\n\n                                                                        {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} */}\n                                                                             <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                            {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} \n                                                                            \n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n\n                                        pagestatus === 'SUBMITTED' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                 <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{entry.tracktype}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null}\n                                                                             &nbsp;\n                                                                             &nbsp; */}\n                                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp; */}\n\n                                                                        {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Approved\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-thumbs-up\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                       \n\n                                                                        <span onClick={() => { rejectedChange(entry.id, entry.status) }} title=\"Rejected\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-thumbs-down\"></i>\n                                                                            </button>\n                                                                        </span> */}\n                                                                       \n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n                                        pagestatus === 'PUBLISHED' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{entry.tracktype}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null} */}\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n                                        pagestatus === 'APPROVED' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>Name</th>\n                                                                <th>Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{entry.tracktype}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null}\n                                                                              &nbsp;\n                                                                            &nbsp; */}\n                                                                        {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submited\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-check\"></i>\n                                                                            </button>\n                                                                        </span> */}\n                                                                      \n                                                                       \n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null}\n\n                                    {\n                                        pagestatus === 'SOLD' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{entry.tracktype}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {/* <span onClick={() => {showedit(entry.id) }} title=\"Artist Update\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-edit\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        &nbsp; */}\n                                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span> */}\n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n                                        pagestatus === 'REJECT' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{entry.tracktype}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n\n                                                                        {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submited\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-check\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp; */}\n\n                                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n\n                                                                        {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} */}\n                                                                             {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null}\n                                                                            {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null} */}\n                                                                           \n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                : null\n            }\n            {changepage === 1 ?\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Track Details</span>\n                                        <span onClick={() => { setchangepage(0) }} style={{ color: \"white\", float: \"right\",cursor:\"pointer\" }}>\n                                            Back\n                                        </span>\n                                    </h3>\n\n                                    {/* <h1 onClick={() => {goBack()}} >This is details page == {userId}</h1> */}\n                                </div>\n\n                                <div className=\"panel-body\">\n                                    <div style={{ padding: \"24px\" }}>\n                                        <span style={{ fontSize: \"19px\", float: \"left\" }}>\n                                            Details :\n                                        </span>\n                                    </div>\n\n\n                                    <div className=\"grid-container\">\n\n                                        <div className=\"grid-item\">\n                                            Name: <label>{trackdata.name}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Track Type: <label>{trackdata.tracktype}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Artist: <label>{trackdata.composer}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Status: <label>{trackdata.status}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Price: <label>{trackdata.price}</label>\n                                        </div>\n                                        <div className=\"grid-item\">\n                                            Description: <label>{trackdata.description}</label>\n                                        </div>\n                                        {\n                                            trackdata.status === 'REJECT' ?\n                                                <div className=\"grid-item\">\n                                                    Reject Reason: <label>{trackdata.rejectreason}</label>\n                                                </div>\n                                                : null}\n                                    </div>\n\n                                    <div className=\"grid-container\">\n                                        {\n                                            trackdata.photo ?\n                                                (\n                                                    <div className=\"grid-item\">\n                                                        <img style={{ height: \"100px\", width: \"100px\" }} src={docServer + trackdata.photo?.docpath} />\n                                                    </div>\n                                                )\n                                                : null\n                                        }\n\n                                        {\n                                            trackdata.track ?\n                                                (\n                                                    <div className=\"grid-item\">\n                                                        <audio controls preload=\"auto\" style={{ width: '100%' }} src={docServer + trackdata.track?.docpath} >\n                                                        </audio>\n                                                    </div>\n                                                )\n                                                : null\n                                        }\n\n\n                                    </div>\n                                    {/* <div className=\"btn-margin\">\n                                        {trackdata.status === 'REJECT' ?\n                                            <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                                                onClick={() => { showedit(trackdata.id) }} >Edit\n                                            </button>\n                                            : null}\n                                    </div> */}\n\n\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                : null}\n\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\messages\\messageManager.jsx",["578"],"import React from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './messageManager.scss';\nimport { nodeUrl } from '../../restservice'\nexport default function MessageManager() {\n\n    // const [selectedUUID, setSelectedUUID] = useState(1)\n    // const [chatInput, setChatInput] = useState(\"\")\n    // let customerId = JSON.parse(localStorage.getItem('userData')).id\n\n\n    // const selectChat = () => {\n    //     setSelectedUUID(12)\n    // }\n\n    // const detectChange = (event) => {\n    //     if (event.key === 'Enter') {\n    //         console.log(\"object\")\n    //         console.log(chatInput)\n    //         setChatInput(\"\")\n    //     }\n    // }\n    let url = nodeUrl + 'operator'\n\n    return (\n        <div className='flexSet'>\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    Messages\n                </h1>\n            </div>\n            <div className=\"messageBody\">\n                {/* <div className=\"msgBox\">\n                    <div className=\"profileBox active\" onClick={() => selectChat()}>\n                        <div className=\"profilePic\"><img src=\"https://i.pinimg.com/736x/e8/91/57/e891575d03afba348fa6242e41610215.jpg\" alt=\"User\" /></div>\n                        <div className=\"profileDetails\">\n                            <b>Aman</b>\n                            <div>ARM</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chatBox\">\n                    <div className=\"showChat\">\n                        <div className=\"showChatArea\">\n                            <div className=\"clientBox\"><span>Hi, I'm there.</span></div>\n                            <div className=\"armBox\"><span>Ha bolo</span></div>\n\n                        </div>\n                    </div>\n                    <div className=\"sendChat\">\n                        <input\n                            type=\"text\"\n                            placeholder='Write your message...'\n                            value={chatInput}\n                            onKeyDown={detectChange}\n                            onChange={event => setChatInput(event.target.value)}\n                        />\n                    </div>\n                </div> */}\n                <iframe src={url} className=\"chatBox\" frameBorder=\"0\"></iframe>\n            </div>\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormMain.jsx",[],"E:\\ui\\src\\pages\\myprofile\\FormProfileRM.jsx",[],"E:\\ui\\src\\pages\\arm\\projects\\Setprojectpage.jsx",[],"E:\\ui\\src\\pages\\arm\\user\\showUsers.jsx",[],"E:\\ui\\src\\pages\\dashboard\\decidetrack.jsx",[],"E:\\ui\\src\\helper\\firebaseConf.js",[],"E:\\ui\\src\\pages\\community\\index.jsx",["579"],"import React from 'react'\nimport {useEffect,useRef} from 'react'\n\nexport default function Comminuty() {\n\n    // meth-1\n    // <div className=\"involveme_embed\" data-project=\"test\" data-embed-mode=\"fullscreen\" data-noresize=\"true\"><iframe src=\"https://nitin3.involve.me/embed\"/></div>\n    // meth-2\n    // const divRef = useRef();\n\n    // const htmlString = `\n    //     <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/18.0.0/umd/react.production.min.js\"></script>\n    //     <script>alert('Hello React!');</script>\n    // `;\n\n    // useEffect(() => {\n    //     const fragment = document.createRange().createContextualFragment(htmlString);\n    //     divRef.current.append(fragment);\n    // }, []);\n\n    // return <div ref={divRef} />;\n\n    // meth-3\n    // return <div dangerouslySetInnerHTML={{ __html: \"<iframe src='https://nitin3.involve.me/embed' />\"}} />;\n\n    // meth-4\n    // <div class=\"involveme_embed\" data-project=\"test\"><script src=\"https://nitin3.involve.me/embed\"></script></div>\n\n    useEffect(() => {\n        const script = document.createElement('script');\n      \n        // script.src = \"https://nitin3.involve.me/embed\";\n        script.src = \"https://choira.involve.me/embed\"\n        script.async = true;\n      \n        document.body.appendChild(script);\n      \n        return () => {\n          document.body.removeChild(script);\n        }\n      }, []);\n\n      return <div class=\"involveme_embed\" data-project=\"mp-onboarding-e67d52779ca3\"></div>\n}\n","E:\\ui\\src\\pages\\customerExplore\\showData.jsx",["580","581","582","583"],"import React, { useEffect, useRef, useState } from \"react\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './showExploreData.scss'\nimport featureBox from \"../../assets/explore/img1.png\"\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport iconPauseBox from \"../../assets/explore/pause.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport track from \"../../assets/explore/tracks.png\"\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\nimport { httpUrl, docServerUrl } from '../../restservice'\nimport Waveform from \"./Waveform\";\n// import WaveSurfer from \"wavesurfer.js\";\nimport \"./woveStyles.scss\"\n\nvar audio = null\n\nexport default function ShowExploreData(props) {\n\n    const [selectedFilter, setSelectedFilter] = useState(\"All\")\n    const [genreTable, setGenreTable] = useState([])\n    const [trackTable, setTrackTable] = useState([])\n    const [trackTableAll, setTrackTableAll] = useState([])\n    const [featuredTrackTable, setFeaturedTrackTable] = useState([])\n    const [composername, setcomposer] = useState([])\n    const [featuredTrackTableAll, setFeaturedTrackTableAll] = useState([])\n    const [openOverLay, setOpenOverLay] = useState(false)\n    const [openSoundPlay, setSoundPlay] = useState(false)\n    const [playingAudio, setPlayingAudio] = useState(0)\n    const [selectedPrice, setSelectedPrice] = useState(0)\n    const [selectedTrack, setSelectedTrack] = useState(0)\n    const [selectedLicenseType, setSelectedLicenseType] = useState('')\n    const [selectednametrack, setselectedname] = useState('')\n\n    // For triggaring event\n    const [selectedPlayButton, setSelectedPlayButton] = useState(\"\")\n\n    const docServer = docServerUrl\n\n    const setSelectedPage = param => {\n        setSelectedFilter(param)\n        if (param === \"All\") {\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n        }\n        else {\n            setTrackTable(trackTableAll.filter(entry => entry.genre === param))\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.genre === param))\n        }\n        stopSound()\n    }\n\n    useEffect(() => {\n        axios.get(httpUrl +  'genre')\n            .then((result) => {\n                let responseJson = result.data;\n                setGenreTable(responseJson)\n            });\n        // axios.get(httpUrl +  'soundTrack?status=PUBLISHED&track=NON_FEATURED')\n        axios.get(httpUrl +  'soundTrack')\n            .then((result) => {\n                let responseJson = result.data;\n                if(responseJson){\n                    setTrackTable(responseJson)\n                    setTrackTableAll(responseJson)\n                    setcomposer(responseJson)\n                    setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                    setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                    console.log(responseJson)\n                }\n            });\n        // httpUrl + 'soundTrack?status=PUBLISHED&track=NON_FEATURED\n        axios.get(httpUrl +  'soundTrack?status=PUBLISHED')\n            .then((result) => {\n                let responseJson = result.data;\n                setTrackTable(responseJson)\n                setTrackTableAll(responseJson)\n                setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                console.log(\"track\")\n                console.log(result.data)\n            });\n        console.log(\"ShowExploreData:==\")\n    }, [])\n\n    const toTitleCase = (str) => {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    const lastpagego=()=>{\n        setOpenOverLay(false)\n    }\n    const getTheSong = (selectedEntry) => {\n        setSelectedPrice(selectedEntry.price)\n        setSelectedTrack(selectedEntry.id)\n        setSelectedLicenseType(selectedEntry.tracktype)\n        setselectedname(selectedEntry.name)\n        setOpenOverLay(true)\n        stopSound()\n    }\n\n    const closeTheSong = () => {\n        setOpenOverLay(false)\n        props.setSelectedPrice(selectedPrice)\n        props.setSelectedTrackId(selectedTrack)\n        props.setSelectedLicense(selectedLicenseType)\n        props.changeState(2)\n    }\n\n    const onlyCloseTheSong = () => {\n        setOpenOverLay(false)\n    }\n\n    const playSound = (incomingPath, receivedId) => {\n        console.log(incomingPath)\n        if (openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n        if (playingAudio !== receivedId) {\n            if (incomingPath) {\n                audio = new Audio(docServerUrl + incomingPath);\n                audio.play();\n                setSoundPlay(true)\n            }\n            setPlayingAudio(receivedId)\n        }\n        else {\n            setPlayingAudio(0)\n        }\n    }\n\n    const stopSound = _ => {\n\n        if (audio && openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n    }\n\n    const searchBox = (value) => {\n        console.log(value)\n\n        if (value === \"\") {\n            console.log(\"object1\")\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n            setcomposer(composername)\n        }\n        else {\n            console.log(\"object\")\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1))\n\n            setTrackTable(trackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1 || entry.genre.toLowerCase().search(value.toLowerCase()) !== -1 ||\n                entry.composer.toLowerCase().search(value.toLowerCase()) !== -1))\n        }\n        console.log(trackTableAll)\n        console.log(trackTable)\n        console.log(\"composer\")\n        console.log(composername)\n    }\n\n    const [username, userInput] = useInput({ type: \"text\" }, searchBox);\n\n\n    return (\n        <div className='flexSet'>\n            <div className=\"content__heading upperSectionShowData\" onClick={() => { searchBox() }}>\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-music\"}></use>\n                    </svg>\n                    Explore\n                </h1>\n            </div>\n            <div className=\"searchBox\">\n                {userInput}\n            </div>\n            <div className=\"exploreBox\">\n                <div className=\"genericBox\">\n                    <div\n                        className={\"genericItemBox\" + (selectedFilter === 'All' ? \" activeGeneric\" : \"\")}\n                        onClick={() => { setSelectedPage(\"All\"); }}>\n                        All\n                    </div>\n                    {genreTable.map((entry) => {\n                        return (\n                            <div\n                                key={entry.id}\n                                className={\"genericItemBox\" + (selectedFilter === entry.genre ? \" activeGeneric\" : \"\")}\n                                onClick={() => { setSelectedPage(entry.genre); }}>\n                                {toTitleCase(entry.genre)}\n                            </div>\n                        )\n                    })}\n                    {/* <div className={\"genericItemBox\" + (selectedFilter === 'Hip Hop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Hip Hop'); }}>Hip Hop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Bollywood' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Bollywood'); }}>Bollywood</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Pop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Pop'); }}>Pop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Rock' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Rock'); }}>Rock</div> */}\n                </div>\n                <div className=\"mainExploreBox\">\n                    <div className=\"featureBox\">\n                        <div className=\"heading\">Featured songs</div>\n                        <div className=\"songShow\">\n                            {featuredTrackTable.map((entry) => {\n                                return (\n                                    <div key={entry.id} className=\"featureSong\" >\n                                        {entry.photo ?\n                                            <img src={docServer + entry.photo.docpath} alt=\"img 1\" onClick={() => { getTheSong(entry) }} />\n                                            :\n                                            <img src={featureBox} alt=\"img 1\" onClick={() => { getTheSong(entry) }} />\n                                        }\n                                        <div className=\"detailBox\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" />\n                                            }\n\n                                            <div className=\"songName\">\n                                                {entry.name}\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n\n                            {/* <div className=\"featureSong\">\n                                <img src={featureBox} alt=\"img 1\" />\n                                <div className=\"detailBox\">\n                                    <img src={iconBox} alt=\"icon\" />\n                                    <div className=\"songName\">\n                                        Black Pink\n                                    </div>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                    <div className=\"trackSong\">\n                        <div className=\"heading\">Tracks</div>\n                        <div className=\"showSongs\">\n                            {trackTable?trackTable.map((entry) => {\n                                return (\n                                    <div key={entry.id} className=\"trackShow\" >\n                                        {/* <div className=\"imageTrack\" onClick={() => playSound(entry.track.docpath, entry.id)} >\n                                    <div className=\"songTrack\" >\n                                        <div className=\"imageTrack\" onClick={() => playSound(entry.track.docpath, entry.id)} >\n                                            {entry.photo ?\n                                                <img src={docServer + entry.photo.docpath} alt=\"trackImg\" className=\"trackImg\" />\n                                                :\n                                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                            }\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" className='upperImage' />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" className='upperImage' />\n                                            }\n\n\n                                        </div>\n                                        <div className=\"trackDetail\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            <div className=\"trackName\">{entry.name}</div>\n                                            <div className=\"trackAuthor\">{entry.composer},{entry.genre}</div>\n                                        </div>\n                                        \n                                        <Waveform url={docServer + entry.track.docpath} tracks={entry} id={entry.id} />\n                                         <img src={track} alt=\"trackShow\" className=\"trackShow\" onClick={() => playSound(entry.track.docpath, entry.id)} /> \n                                        <div className=\"buyOutButton\" onClick={() => { getTheSong(entry) }}>\n                                            Get Song\n                                        </div> */}\n\n                                        <div className=\"buyOutbutton\">\n                                            <button onClick={() => { getTheSong(entry) }} style={{ backgroundColor: \"#FFC701\", color: 'white' }}>\n                                                Get Song\n                                            </button>\n                                        </div>\n                                        <div className=\"trackDetail\" onClick={stopSound}>\n                                            <Waveform\n                                                url1 = {docServer + entry.photo.docpath}\n                                                url={docServer + entry.track.docpath}\n                                                tracks={entry} id={entry.id}\n                                                setSelectedPlayButton={setSelectedPlayButton}\n                                                selectedPlayButton={selectedPlayButton}\n                                            />\n                                        </div>\n\n                                    </div>\n                                )\n                            }):null}\n                            {/* <div className=\"songTrack\">\n                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                <div className=\"trackDetail\">\n                                    <div className=\"trackName\">Come Over</div>\n                                    <div className=\"trackAuthor\">Mike Mains</div>\n                                </div>\n                                <img src={track} alt=\"trackShow\" className=\"trackShow\" />\n                                <div className=\"buyOutButton\">\n                                    Get Song\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {openOverLay && <ExploreOverlay goback={lastpagego} changeState={closeTheSong} selectednametrack={selectednametrack} selectedTrack={selectedTrack} onlyCloseTheSong={onlyCloseTheSong} selectedPrice={selectedPrice} />}\n        </div>\n    )\n}\n\nfunction useInput({ type }, keyFunction) {\n    const [value, setValue] = useState(\"\");\n    const input = <input value={value} onChange={e => { setValue(e.target.value); keyFunction(e.target.value) }} type={type} placeholder='Search by artist, songs or genre...' />;\n    return [value, input];\n}","E:\\ui\\src\\pages\\customerExplore\\submitData.jsx",["584","585","586","587","588","589","590","591","592","593","594","595","596","597"],"import React, { useEffect } from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './submitData.scss'\nimport featureBox from \"../../assets/explore/img1.png\"\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport track from \"../../assets/explore/tracks.png\"\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\nimport Swal from 'sweetalert2';\nimport { httpUrl, docServerUrl,nodeUrl } from '../../restservice';\n\nexport default function SubmitData(props) {\n\n    const [userData, setUserData] = React.useState({})\n    const [data, setData] = React.useState({})\n    const [sendData, setSendData] = React.useState({\n        soundtrack: '',\n        customer: '',\n        licensetype: '',\n        name: '',\n        licensee: '',\n        artist: '',\n        email: ''\n    })\n\n    // For input Box\n\n    const [license, setLicense] = React.useState(\"\")\n    const [artist, setArtist] = React.useState(\"\")\n    const [emailAdded, setEmailAdded] = React.useState(\"\")\n    const [fullName, setFullName] = React.useState(\"\")\n    const [companyName, setCompanyName] = React.useState(\"\")\n    const [addressAdded, setAddressAdded] = React.useState(\"\")\n    const [cityAdded, setCityAdded] = React.useState(\"\")\n    const docServer = docServerUrl\n    // const [stateAdded, setStateAdded] = React.useState(\"\")\n    // const [countryAdded, setCountryAdded] = React.useState(\"\")\n    // const [zipAdded, setZipAdded] = React.useState(\"\")\n    // const [phoneAdded, setPhoneAdded] = React.useState(\"\")\n    // const [cardNo, setCardNo] = React.useState(\"\")\n\n\n    useEffect(() => {\n        setUserData(JSON.parse(localStorage.getItem(\"userData\")))\n        setSendData()\n        setLicense(JSON.parse(localStorage.getItem(\"userData\")).name)\n        setEmailAdded(JSON.parse(localStorage.getItem(\"userData\")).email)\n        // setPhoneAdded(JSON.parse(localStorage.getItem(\"userData\")).phone)\n        console.log(JSON.parse(localStorage.getItem(\"userData\")))\n        trackdetail()\n    }, [])\n\n    const proceedNow = _ => {\n        if (Number(props.selectedPrice) > 0) {\n            dataSubmitted()\n        } else {\n            apiCall()\n        }\n    }\n\n\n    const dataSubmitted = _ => {\n        let amount = Number(props.selectedPrice) * 100\n        let options = {\n            key: \"rzp_test_7mIk0plUYbDbst\", // Enter the Key ID generated from the Dashboard\n            amount: amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n            currency: \"INR\",\n            name: \"Choira Musictech Pvt Ltd\",\n            description: \"Test Transaction\",\n            image: \"https://choira.io/static/media/choria.02aeae5c.svg\",\n            handler: function (response) {\n                apiCall()\n            },\n            prefill: {\n                name: \"Pankaj Chaudhari\",\n                email: \"pankaj_chaudhari@example.com\",\n                contact: \"9999999999\",\n            },\n            notes: {\n                address: \"Razorpay Corporate Office\",\n            },\n            theme: {\n                color: \"#FFC701\",\n            },\n        };\n\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n\n    }\n\n    const apiCall = _ => {\n        // let sendableData = {\n        //     soundtrack: props.selectedTrackId,\n        //     customer: JSON.parse(localStorage.getItem(\"userData\")).id,\n        //     licensetype: props.selectedLicense,\n        //     name: fullName,\n        //     licensee: license,\n        //     artist: artist,\n        //     email: emailAdded\n        // }\n        let sendableData = {\n            soundtrack: props.selectedTrackId,\n            customer: JSON.parse(localStorage.getItem(\"userData\")).id,\n            licensetype: props.selectedLicense,\n            name: license,\n            licensee: license,\n            artist: artist,\n            email: emailAdded\n        }\n\n        if (sendableData.licensetype === \"FEATURED\") {\n            sendableData.licensetype = \"BUYOUT\"\n        }\n        else {\n            sendableData.licensetype = \"NON_EXCLUSIVE\"\n        }\n\n        axios.post(httpUrl + 'soundTrack/license', sendableData)\n            .then(function (response) {\n                apiCallPost()\n                sendmailapi()\n            })\n            .catch(function (error) {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Unable to purchase.',\n                    showConfirmButton: false,\n                    timer: 3500\n                })\n            });\n    }\n\n    const sendmailapi = () => {\n        let city = JSON.parse(localStorage.getItem(\"userData\")).city\n        let sendemailjson = {\n            email: emailAdded,\n            name: data.name,\n            licensetype: props.selectedLicense,\n            licensee: license,\n            artist: artist,\n            address: city,\n            price: props.selectedPrice,\n            link: docServer + data.track.docpath\n        }\n\n\n        axios.post(nodeUrl+'sendInvoice', sendemailjson)\n            .then(function (response) {\n            })\n            .catch(function (error) {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error',\n                    showConfirmButton: false,\n                    timer: 3500\n                })\n            });\n    }\n\n    const apiCallPost = _ => {\n        let sendableData = {\n            id: props.selectedTrackId,\n            status: \"SOLD\"\n        }\n\n        axios.post(httpUrl + 'soundTrack/update', sendableData)\n            .then(function (response) {\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Featured Track Bought Successfully',\n                    showConfirmButton: false,\n                    timer: 3500\n                })\n                setTimeout(() => {\n                    props.goback();\n                }, 2000);\n            })\n            .catch(function (error) {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Purchase incomplete.',\n                    showConfirmButton: false,\n                    timer: 3500\n                })\n            });\n    }\n\n    const trackdetail = () => {\n        axios.get(httpUrl + 'soundTrack/' + props.selectedTrackId)\n            .then(responce => {\n                setData({ ...responce.data })\n                console.log(responce.data)\n            });\n    }\n\n    return (\n        <div className='flexSet'>\n\n            <div className=\"content__heading upperSectionShowData\">\n\n                <div style={{ float: \"left\" }}>\n                    <h1>\n                        <svg>\n                            <use href={sprite + \"#icon-music\"}></use>\n                        </svg>\n                        Explore\n                    </h1>\n                </div>\n\n                <div style={{ float: \"right\" }}>\n                    <h3 onClick={() => { props.goback() }} style={{ textAlign: \"right\", cursor: \"pointer\" }}>\n                        Back\n                    </h3>\n                </div>\n\n\n\n\n            </div>\n\n            <div className=\"formBox\">\n                <div className=\"col-left\">\n                    {/* <div className=\"billingBox\">\n                        <div className=\"head\">Track Details</div>\n                        <input type=\"text\" placeholder=\"Track Name\" value={fullName} onChange={e => setFullName(e.target.value)} name=\"fullName\" id=\"fullName\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Company Name\" value={companyName} onChange={e => setCompanyName(e.target.value)} name=\"companyName\" id=\"companyName\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Billing Address\" value={addressAdded} onChange={e => setAddressAdded(e.target.value)} name=\"address\" id=\"address\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"City\" value={cityAdded} onChange={e => setCityAdded(e.target.value)} name=\"city\" id=\"city\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"State\" value={stateAdded} onChange={e => setStateAdded(e.target.value)} name=\"state\" id=\"state\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Country\" value={countryAdded} onChange={e => setCountryAdded(e.target.value)} name=\"country\" id=\"country\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"ZIP\" value={zipAdded} onChange={e => setZipAdded(e.target.value)} name=\"zip\" id=\"zip\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Phone\" value={phoneAdded} onChange={e => setPhoneAdded(e.target.value)} name=\"phone\" id=\"phone\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Card Number\" value={cardNo} onChange={e => setCardNo(e.target.value)} name=\"cardNo\" id=\"cardNo\" className='checkInput' />\n                    </div> */}\n                    <div className=\"licenseBox\">\n                        <div className=\"head\">Track Details</div>\n                        <input type=\"text\" placeholder=\"Track Name\" readOnly value={data.name} onChange={e => setFullName(e.target.value)} name=\"fullName\" id=\"fullName\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Composer\" readOnly value={data.composer} onChange={e => setAddressAdded(e.target.value)} name=\"address\" id=\"address\" className='checkInputHalf' />\n                        {/* <input type=\"text\" placeholder=\"Description\" defaultValue={data.description} onChange={e => setCompanyName(e.target.value)} name=\"companyName\" id=\"companyName\" className='checkInputHalf' /> */}\n                        <input type=\"text\" placeholder=\"Genre\" readOnly value={data.genre} onChange={e => setCityAdded(e.target.value)} name=\"city\" id=\"city\" className='checkInput' />\n                        {/* <input type=\"text\" placeholder=\"State\" value={stateAdded} onChange={e => setStateAdded(e.target.value)} name=\"state\" id=\"state\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Country\" value={countryAdded} onChange={e => setCountryAdded(e.target.value)} name=\"country\" id=\"country\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"ZIP\" value={zipAdded} onChange={e => setZipAdded(e.target.value)} name=\"zip\" id=\"zip\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Phone\" value={phoneAdded} onChange={e => setPhoneAdded(e.target.value)} name=\"phone\" id=\"phone\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Card Number\" value={cardNo} onChange={e => setCardNo(e.target.value)} name=\"cardNo\" id=\"cardNo\" className='checkInput' /> */}\n                    </div>\n                    <div className=\"licenseBox\">\n                        <div className=\"head\">Licensee Information</div>\n                        <input type=\"text\" readOnly placeholder='Name of License' value={license} onChange={e => setLicense(e.target.value)} name=\"license\" id=\"license\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Artist Name\" required value={artist} onChange={e => setArtist(e.target.value)} name=\"artist\" id=\"artist\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Email\" readOnly value={emailAdded} onChange={e => setEmailAdded(e.target.value)} name=\"email\" id=\"email\" className='checkInput' />\n                    </div>\n                    <button className='buttoncolor' onClick={() => { proceedNow() }}>Pay Now</button>\n                    <br />\n                    <div style={{ margin: \"12px\" }}><label style={{ padding: \"9px\" }}><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></label><label>Secure Checkout</label></div>\n\n                </div>\n\n                <div className=\"col-right\">\n                    {/* <div className=\"payNowBox\">\n                        <div className=\"head\">Order Summary</div>\n                        <div className=\"details\">\n                            Uptown - Rs. {props.selectedPrice}\n                            <br />\n                            License: Buyout\n                        </div>\n                        <div className=\"payButton\" onClick={() => { proceedNow() }}>\n                            <span>Pay Now</span>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\externalExplore\\showData.jsx",["598","599","600","601","602"],"import React, { useEffect, useRef } from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './showExploreData.scss'\nimport featureBox from \"../../assets/explore/img1.png\"\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport iconPauseBox from \"../../assets/explore/pause.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport track from \"../../assets/explore/tracks.png\"\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\n\nimport Waveform from \"./Waveform\";\nimport { httpUrl, docServerUrl } from '../../restservice'\nimport './woveStyles.scss'\n// import WaveSurfer from \"wavesurfer.js\";\n\nvar audio = null\n\n\n\nexport default function ExternalShowExploreData(props) {\n\n    const [selectedFilter, setSelectedFilter] = useState(\"All\")\n    const [genreTable, setGenreTable] = useState([])\n    const [trackTable, setTrackTable] = useState([])\n    const [trackTableAll, setTrackTableAll] = useState([])\n    const [featuredTrackTable, setFeaturedTrackTable] = useState([])\n    const [featuredTrackTableAll, setFeaturedTrackTableAll] = useState([])\n    const [openOverLay, setOpenOverLay] = useState(false)\n    const [openSoundPlay, setSoundPlay] = useState(false)\n    const [playingAudio, setPlayingAudio] = useState(0)\n\n    // For triggaring event\n    const [selectedPlayButton, setSelectedPlayButton] = useState(\"\")\n\n    const docServer = docServerUrl\n\n    const setSelectedPage = param => {\n        setSelectedFilter(param)\n        if (param === \"All\") {\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n        }\n        else {\n            setTrackTable(trackTableAll.filter(entry => entry.genre === param))\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.genre === param))\n        }\n        stopSound()\n    }\n\n    useEffect(() => {\n        console.log(\"SSSSSSSSSSSSSSSSSSSs\")\n\n        axios.get(httpUrl +  'genre')\n            .then((result) => {\n                let responseJson = result.data;\n                setGenreTable(responseJson)\n            });\n        axios.get(httpUrl +  'soundTrack?status=PUBLISHED&track=NON_FEATURED')\n            .then((result) => {\n                let responseJson = result.data;\n                console.log(\"responseJsonnnnnnnnnnnn\",responseJson)\n                setTrackTable(responseJson)\n                setTrackTableAll(responseJson)\n                setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                console.log(responseJson)\n            });\n\n        // axios.get(httpUrl +  'soundTrack?status=PUBLISHED')\n        //     .then((result) => {\n        //         let responseJson = result.data;\n        //         setTrackTable(responseJson)\n        //         setTrackTableAll(responseJson)\n        //         setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n        //         setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n        //     });\n\n    }, [])\n\n    // const wavesurferUse = (incomingPath) => {\n    //     setPlay(false);\n\n    //     if (waveformRef.current) {\n    //         wavesurfer.current = WaveSurfer.create({\n    //             container: waveformRef.current,\n    //             waveColor: \"#eee\",\n    //             progressColor: \"OrangeRed\",\n    //             cursorColor: \"OrangeRed\",\n    //             barWidth: 3,\n    //             barRadius: 3,\n    //             responsive: true,\n    //             height: 50,\n    //             normalize: true,\n    //             partialRender: true\n    //         });\n\n    //         wavesurfer.current.load(docServer + incomingPath);\n\n    //         wavesurfer.current.on(\"ready\", function () {\n    //             wavesurfer.current.play();\n    //             setPlay(true);\n\n    //         });\n    //     }\n    //     return () => wavesurfer.current.destroy();\n    // };\n\n    // function handlePlayPause(incomingPath, receivedId) {\n\n    //     setPlay(!playing);\n    //     if (waveformRef.current.play) {\n    //         wavesurfer.current.play();\n    //     } else {\n    //         wavesurferUse(incomingPath)\n    //     }\n    // };\n\n    const toTitleCase = (str) => {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    const getTheSong = () => {\n        // setOpenOverLay(true)\n        props.setIsExplorerOpen()\n        stopSound()\n    }\n\n    const closeTheSong = () => {\n        setOpenOverLay(false)\n        props.changeState(2)\n    }\n\n    const onlyCloseTheSong = () => {\n        setOpenOverLay(false)\n    }\n\n    const playSound = (incomingPath, receivedId) => {\n        console.log(incomingPath)\n        if (openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n\n        if (playingAudio !== receivedId) {\n            if (incomingPath) {\n                audio = new Audio(docServerUrl + incomingPath);\n                audio.play();\n                setSoundPlay(true)\n            }\n            setPlayingAudio(receivedId)\n        }\n        else {\n            setPlayingAudio(0)\n        }\n    }\n\n    const stopSound = _ => {\n        \n        if (audio && openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n    }\n\n    const searchBox = (value) => {\n        console.log(value)\n        if (value === \"\") {\n            console.log(\"object1\")\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n        }\n        else {\n            console.log(\"object\")\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1))\n\n            setTrackTable(trackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1 || entry.genre.toLowerCase().search(value.toLowerCase()) !== -1 ||\n                entry.composer.toLowerCase().search(value.toLowerCase()) !== -1))\n        }\n        console.log(trackTableAll)\n        console.log(\"TTTTTTTTTTTTT:\",trackTable)\n    }\n\n    const [username, userInput] = useInput({ type: \"text\" }, searchBox);\n\n\n\n    return (\n        <div className='e_flexSet'>\n            <div className=\"e_searchBox\">\n                {userInput}\n            </div>\n            <div className=\"e_exploreBox\">\n                <div className=\"genericBox\">\n                    <div\n                        className={\"genericItemBox\" + (selectedFilter === 'All' ? \" activeGeneric\" : \"\")}\n                        onClick={() => { setSelectedPage(\"All\"); }}>\n                        All\n                    </div>\n                    {genreTable.map((entry) => {\n                        return (\n                            <div\n                                className={\"genericItemBox\" + (selectedFilter === entry.genre ? \" activeGeneric\" : \"\")}\n                                onClick={() => { setSelectedPage(entry.genre); }}>\n                                {toTitleCase(entry.genre)}\n                            </div>\n                        )\n                    })}\n                    {/* <div className={\"genericItemBox\" + (selectedFilter === 'Hip Hop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Hip Hop'); }}>Hip Hop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Bollywood' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Bollywood'); }}>Bollywood</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Pop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Pop'); }}>Pop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Rock' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Rock'); }}>Rock</div> */}\n                </div>\n                <div className=\"mainExploreBox\">\n                    <div className=\"featureBox\">\n                        <div className=\"heading\">Featured songs</div>\n                        <div className=\"songShow\">\n                            {featuredTrackTable.map((entry) => {\n                                return (\n                                    <div className=\"featureSong\" >\n                                        {entry.photo ?\n                                            <img src={docServer + entry.photo.docpath} alt=\"img 1\" onClick={() => { getTheSong() }} />\n                                            :\n                                            <img src={featureBox} alt=\"img 1\" onClick={() => { getTheSong() }} />\n                                        }\n                                        <div className=\"detailBox\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" />\n                                            }\n\n                                            <div className=\"songName\">\n                                                {entry.name}\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                )\n                            })}\n\n                            {/* <div className=\"featureSong\">\n                                <img src={featureBox} alt=\"img 1\" />\n                                <div className=\"detailBox\">\n                                    <img src={iconBox} alt=\"icon\" />\n                                    <div className=\"songName\">\n                                        Black Pink\n                                    </div>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                    <div className=\"trackSong\">\n                        <div className=\"heading\">Tracks</div>\n                        <div className=\"showSongs\">\n                            {trackTable.map((entry) => {\n                                return (\n                                    <div className=\"trackShow\" onClick={stopSound}>\n                                        {/* <div className=\"imageTrack\" onClick={() => playSound(entry.track.docpath, entry.id)} >\n                                            {entry.photo ?\n                                                <img src={docServer + entry.photo.docpath} alt=\"trackImg\" className=\"trackImg\" />\n                                                :\n                                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                            }\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" className='upperImage' />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" className='upperImage' />\n                                            }\n\n                                        </div> */}\n                                        <div className=\"buyOutbutton \">\n                                            <button onClick={() => { getTheSong() }} style={{ backgroundColor: \"#FFC701\", color: 'white' }}>\n                                                Get Song\n                                            </button>\n                                        </div>\n                                        <div className=\"trackDetail\" style={{ backgroundColor: 'unset !important' }}>\n                                            <Waveform\n                                                url1={docServer + entry.photo.docpath}\n                                                url={docServer + entry.track.docpath}\n                                                tracks={entry} id={entry.id}\n                                                setSelectedPlayButton={setSelectedPlayButton}\n                                                selectedPlayButton={selectedPlayButton}\n                                            />\n                                        </div>\n                                        {/* <div className=\"trackDetail\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            <div className=\"trackName\">{entry.name}</div>\n                                            <div className=\"trackAuthor\">{entry.composer}</div>\n                                        </div> */}\n                                        {/* <div className=\"trackShow\">\n                                            <Waveform url={docServer + entry.track.docpath} />\n                                        </div> */}\n\n                                        {/* <img src={track} alt=\"trackShow\" className=\"trackShow\" onClick={() => playSound(entry.track.docpath, entry.id)} /> */}\n                                        {/* <div className=\"buyOutbutton\">\n                                            <button onClick={() => { getTheSong() }} >\n                                                Get Song\n                                            </button>\n                                        </div> */}\n                                    </div>\n                                )\n                            })}\n                            {/* <div className=\"songTrack\">\n                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                <div className=\"trackDetail\">\n                                    <div className=\"trackName\">Come Over</div>\n                                    <div className=\"trackAuthor\">Mike Mains</div>\n                                </div>\n                                <img src={track} alt=\"trackShow\" className=\"trackShow\" />\n                                <div className=\"buyOutButton\">\n                                    Get Song\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {openOverLay && <ExploreOverlay changeState={closeTheSong} onlyCloseTheSong={onlyCloseTheSong} />}\n        </div>\n    )\n}\n\n\nfunction useInput({ type }, keyFunction) {\n    const [value, setValue] = useState(\"\");\n    const input = <input value={value} onChange={e => { setValue(e.target.value); keyFunction(e.target.value) }} type={type} placeholder='Search by artist, songs or genre...' />;\n    return [value, input];\n}","E:\\ui\\src\\pages\\externalExplore\\submitData.jsx",["603","604","605","606","607","608","609","610","611"],"import React, { useEffect } from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './submitData.scss'\nimport featureBox from \"../../assets/explore/img1.png\"\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport track from \"../../assets/explore/tracks.png\"\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\nimport Swal from 'sweetalert2';\n\nexport default function ExternalSubmitData() {\n\n    const [freetrack, setFreetrack] = useState(0)\n\n    useEffect = () => {\n        let prece = <div>$2000</div>\n        // setFreetrack(prece)\n        console.log(\"freetrack\", prece);\n    }\n\n    const dataSubmitted = _ => {\n        let options = {\n            key: \"rzp_test_7mIk0plUYbDbst\", // Enter the Key ID generated from the Dashboard\n            amount: \"200000\", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n            currency: \"INR\",\n            name: \"iNouvelle Ventures Pvt. Ltd.\",\n            description: \"Test Transaction\",\n            image: \"https://choira.io/static/media/choria.02aeae5c.svg\",\n            handler: function (response) {\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Request Submitted',\n                    showConfirmButton: false,\n                    timer: 3500\n                })\n                setTimeout(() => {\n                    window.location.reload()\n                }, 4000);\n            },\n            prefill: {\n                name: \"Pankaj Chaudhari\",\n                email: \"pankaj_chaudhari@example.com\",\n                contact: \"9999999999\",\n            },\n            notes: {\n                address: \"Razorpay Corporate Office\",\n            },\n            theme: {\n                color: \"#F37254\",\n            },\n        };\n\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n\n    }\n\n\n\n\n    return (\n        <div className='e_flexSet'>\n            <div className=\"e_formBox\">\n                <div className=\"col-left\">\n                    <div className=\"licenseBox\">\n                        <div className=\"head\">Licensee Information</div>\n                        <input type=\"text\" placeholder='Name of License' name=\"license\" id=\"license\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Artist Name\" name=\"artist\" id=\"artist\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Email\" name=\"email\" id=\"email\" className='checkInput' />\n                    </div>\n                    <div className=\"billingBox\">\n                        <div className=\"head\">Billing and Payment Information</div>\n                        <input type=\"text\" placeholder=\"Full Name\" name=\"fullName\" id=\"fullName\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Company Name\" name=\"companyName\" id=\"companyName\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Billing Address\" name=\"address\" id=\"address\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"City\" name=\"city\" id=\"city\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"State\" name=\"state\" id=\"state\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Country\" name=\"country\" id=\"country\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"ZIP\" name=\"zip\" id=\"zip\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Phone\" name=\"phone\" id=\"phone\" className='checkInputHalf' />\n                        <input type=\"text\" placeholder=\"Card Number\" name=\"cardNo\" id=\"cardNo\" className='checkInput' />\n                    </div>\n                </div>\n                <div className=\"col-right\">\n                    <div className=\"payNowBox\">\n                        <div className=\"head\">Order Summary</div>\n                        {freetrack === 0 ?\n                            <div className=\"details\">\n                                Uptown - $2000\n                            </div>\n                            : null}\n                        <div className=\"details\">\n                            Uptown - $2000\n                            <br />\n                            License: Buyout\n                        </div>\n                        <div className=\"payButton\" onClick={() => { dataSubmitted() }}>\n                            <span>Pay Now</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\dashboard\\produce\\trackShow.jsx",["612","613","614","615"],"import React, { useState,useEffect } from 'react'\n// import './trackShow.scss'\n// import sprite from \"../../../assets/icons/sprite.svg\";\n// import folderIcon from \"../../../assets/material-design-folder-icon-0.jpeg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport axios from 'axios';\nimport sprite from \"../../../assets/icons/sprite.svg\";\nimport Swal from 'sweetalert2';\n// import Folder2 from \"../../../assets/folder2.jpg\"\n// import Folder3 from \"../../../assets/folder3.jpg\"\n// import Folder4 from \"../../../assets/folder4.jpg\"\nimport ShowDetails from './showDetails';\nimport { httpUrl } from '../../../restservice'\n\nexport default function TrackShow(props) {\n\n    const [trackData, setTrackData] = useState([])\n    const [featuredTrackData, setFeaturedTrackData] = useState([])\n    const [nonFeaturedTrackData, setNONFeaturedTrackData] = useState([])\n    const {trackshowdetails} = props\n   \n  \n   \n\n   \n    // const [backpagescreen,setbackpagescreen]=useState()\n\n   \n\n    useEffect(() => {\n        // alert('its work')\n        if (JSON.parse(localStorage.getItem(\"userData\"))) {\n            let userId = JSON.parse(localStorage.getItem(\"userData\")).id\n            axios.get(httpUrl +  'soundTrack/license?customer=' + userId)\n                .then(function (response) {\n                    setTrackData(response.data)\n                    setFeaturedTrackData(response.data.filter(entry => entry.licensetype === \"NON_EXCLUSIVE\"))\n                    setNONFeaturedTrackData(response.data.filter(entry => entry.licensetype !== \"NON_EXCLUSIVE\"))\n                    console.log(response)  \n                })\n                .catch(function (error) {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Unable to get data.',\n                        showConfirmButton: false,\n                        timer: 3500\n                    })\n                });\n        }\n    }, []);\n\n   \n    const changePage = (getParam)=> {\n        trackshowdetails(getParam)\n        \n        // props.setOpenDetailsBox(false)\n        // props.setStoreTracksFolderSection(getParam)\n    }\n\n    \n\n\n    return (\n        <div>\n           <div className=\"content__heading\" style={{marginLeft:\"42px\"}}>\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Tracks\n                </h1>\n            </div>\n        <div className='trackMainBox'>\n            <div className=\"showMasterFolder1\">\n                <div className=\" folderHover\" onClick={() => changePage(\"EXCLUSIVE\")}>\n                    <h4>\n                        <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                    \n                    </h4>\n                    <label>Licensed<br/>Tracks</label>\n                </div>\n                <div  className=\" folderHover1\"  onClick={() => changePage(\"NON_EXCLUSIVE\")}>\n                    <h4>\n                        {/* <img src={Folder4} alt=\"folder\" className='iconFolder' /> */}\n                        <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                        {/* Non-Exclusive<br/>Tracks */}\n                    </h4>\n                    <label>Non-Exclusive<br/>Tracks</label>\n                </div>\n            </div>\n            {/* <div className=\"content__heading\">\n                <h1>\n                    <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                    Licensed Tracks\n                </h1>\n            </div>\n            <div className=\"showFolder\">\n                {featuredTrackData.map(entry => {\n                    return <div className=\"folderBox\">\n                        <svg>\n                            <use href={sprite + \"#icon-folder\"}></use>\n                        </svg>\n                        {entry.name}\n                    </div>\n                })}\n\n            </div>\n\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Non Exclusive Tracks\n                </h1>\n            </div>\n            <div className=\"showFolder\">\n                {nonFeaturedTrackData.map(entry => {\n                    return <div className=\"folderBox\">\n                        <svg>\n                            <use href={sprite + \"#icon-folder\"}></use>\n                        </svg>\n                        {entry.name}\n                    </div>\n                })}\n\n            </div> */}\n\n            <div className=\"showDetailsOfTrack\">\n            {/* <ShowDetails /> */}\n            </div>\n        </div>\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\arm\\Edittrack.jsx",["616","617","618"],"// import React, { Component } from \"react\";\nimport  axios from 'axios';\nimport React from 'react';\n// import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport './addtrack.scss'\nimport { httpUrl, docServerUrl } from '../../restservice'\n\nlet dataid\nlet Armname=JSON.parse(localStorage.getItem(\"userData\")).name;\nclass Edittrack extends React.Component {\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            selectedFile1: null,\n            handleResponse: null,\n            imageUrl: null,\n            track:{},\n            data:{},\n            projectid:\"\",\n            projectvalue:[],\n            imageUrl1: null,\n            docServer: docServerUrl,\n            tracktypess: \"\",\n            // statustrack:\"SUBMITTED\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updatedata = this.updatedata.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handletrackstatus = this.handletrackstatus.bind(this)\n\n\n    };\n\n    // loadData = () => {\n    //     let userid=this.props.empid\n    //     const endpoint = httpUrl + 'employee/${userid}`;\n    //     fetch(endpoint)\n    //       .then(response => response.json())\n    //       .then(json => {\n    //         this.setState({\n    //           data: [{ ...json }],\n    //           scrolling: false,\n    //         });\n    //       });\n    //   };\n\n\n\n    componentDidMount(){\n        this.getdata();\n        this.getdatabyid();\n    }\n\n    // initfun = () => {\n    //     let userid = this.props.empid\n    //     // alert(userid)\n    //     // let data\n    //     axios.get(httpUrl +  'employee/' + userid)\n    //         .then(responce => {\n    //             this.setState({\n    //                 data: responce.data,\n    //                 scrolling: false,\n    //                 empStatus: responce.data.status\n    //             });\n    //             statuschange = responce.data.status;\n               \n    //            console.log('status',responce.data.status);\n\n    //         });\n    // }\n\n    getdatabyid = ()=>{\n        let getbyidtrack = this.props.trackdetailId\n        axios.get(httpUrl +  'soundTrack/'+getbyidtrack)\n                .then(responce => {\n                    this.setState({\n                        data: responce.data,\n                        scrolling: false,\n                        tracktypess:responce.data.tracktype,\n                        projectid:responce.data.genre\n                    });\n                    // dataid = responce.data[0].id\n                    console.log(responce.data)\n                });\n    }\n\n  getdata = ()=>{\n        axios.get(httpUrl +  'genre')\n                .then(responce => {\n                    this.setState({\n                        projectvalue: responce.data,\n                        scrolling: false,\n                    });\n                    // dataid = responce.data[0].id\n                    console.log(dataid)\n                    console.log(responce.data)\n                });\n    }\n    refreshdata = ()=>{\n         axios.get(httpUrl +  'soundTrack?uploadedby='+Armname)\n                .then(responce => {\n                    this.setState({\n                        data: responce.data,\n                        scrolling: false,\n                    });\n                    // dataid = responce.data[0].id\n                    console.log(responce.data)\n                });\n    }\n\n\n    \n    // axios.get(httpUrl +  'soundTrack?uploadedby='+Armname)\n\n\n\n\n\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n        console.log(this.state)\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            projectid: value\n        })\n    }\n    handletrackstatus(e) {\n        let value = e.target.value;\n        this.setState({\n            tracktypess: value\n        })\n    }\n\n    \n\n    onChangeFile1 = event => {\n        this.setState({ selectedFile1: event.target.files[0] })\n       if (event.target.files[0] !== '') {\n          var reader = new FileReader();\n          reader.onload = (eve) => {\n            this.setState({ imageUrl1: eve.target.result });\n          }\n          reader.readAsDataURL(event.target.files[0]);\n          this.setState({\n            track: {\n              docname:event.target.files[0].name,\n              doctype:'track',\n              docpath: \"soundtrack/Audio/\"+ event.target.files[0].name,\n              docdesc:\"track\"\n            }\n          })\n         \n        }\n        console.log(\"track\")\n        console.log(this.state.track)\n       \n      }\n\n\n\n    updatedata(e) {\n        e.preventDefault();\n        const armname = JSON.parse(localStorage.getItem(\"userData\")).name;\n       \n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n        console.log(this.state.statustrack)\n        console.log(this.state.projectid)\n\n\n        let projectdata = {\n            id:this.props.trackdetailId,\n            name: this.state.fields.name,\n            tracktype: this.state.tracktypess,\n            composer: this.state.fields.composer,\n            description: this.state.fields.description,\n            price: this.state.fields.price,\n            status:'SUBMITTED',\n            genre:this.state.projectid,\n            uploadedby:armname,\n            photo:{},\n            track: {\n                docname: this.state.selectedFile1.name,\n                docpath:\"soundtrack/Audio\"  + \"/\" + this.state.selectedFile1.name,\n                docdesc:\"track\",\n                doctype:\"track\"\n            }\n        }\n        console.log('projectdata')\n        console.log(this.state.projectid)\n       \n        var ext = this.state.track.docname.substr(this.state.track.docname.lastIndexOf('.') + 1);\n        if(ext ==='mp3' || ext==='mp4'){\n            projectdata.photo = this.state.photo\n                axios.post(httpUrl +  'soundTrack/update',projectdata)\n        .then(responce => {\n           \n            this.setState({\n                fields: fields\n            })  \n            console.log(responce)\n            this.phoadd()\n            this.handleUpload1()\n           \n          \n          \n        });\n       \n       \n    Swal.fire({\n        icon: 'success',\n        title: 'Submitted',\n        showConfirmButton: false,\n        timer: 1500\n    })\n    this.props.goBack()\n    let fields = {\n        name: \"\",\n        composer: \"\",\n        description: \"\",\n        price:\"\"\n    }\n    this.refreshdata()\n    \n        }\n        else{\n             Swal.fire({\n                        icon: 'error',\n                        title: 'Please Upload Mp3 Or Mp4 File',\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n        }\n    }\n   \n  \n    phoadd=() => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"soundtrack/\" + this.props.trackdetailId);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updatephoto(trackid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n  \n\n   \n\n   \n      handleUpload1 = () => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile1 } = this.state;\n        if (!selectedFile1) {\n          this.setState({\n            handleResponse: {\n              isSuccess: false,\n              message: \"Please select audio to upload.\"\n            }\n          });\n          return false;\n        }\n    \n        const formData = new FormData();\n        formData.append('doc', selectedFile1, this.state.selectedFile1.trackvalue);\n        formData.append('name', \"soundtrack/Audio\");\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updateaudio(trackid);\n          this.setState({\n            handleResponse: {\n              isSuccess: response.status === 200,\n              message: response.data.message\n            },\n            // imageUrl: BASE_URL + response.data.file.path\n          });\n        }).catch(err => {\n            alert('error')\n        //   this.opensweetalertdanger(err.message);\n        });\n      }\n  \n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'soundtrack',\n                    docpath: \"soundtrack/\" + this.props.trackdetailId + '/'+ event.target.files[0].name,\n                    docdesc: \"soundtrack\"\n                }\n            });\n        }\n    }\n     \n\n\n    \n\n\n\n    render() {\n        const { imageUrl,imageUrl1 } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                   <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Edit Sound Track</span>\n                                    </h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                                        <div className=\"row1\">\n                                            <div className=\"column1\" >\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"name\" id=\"name\" defaultValue={this.state.data.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Artist</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"composer\" id=\"composer\" defaultValue={this.state.data.composer} onChange={this.handleChange} />\n                                                </div>\n                                                \n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Select Genre</label>\n                                                   <select required  name='status' value={this.state.projectid}  onChange={this.handleStatusChange} id=\"status\"   style={{borderRadius:\"10px\",padding:\"8px\",width:\"100%\"}} >\n                                                       <option value=\"0\">Select</option>\n                                                      \n                                                       {this.state.projectvalue.map((entry) => {\n                                                        return <option value={entry.name}>{entry.genre}</option>\n                                                        })\n                                                        }\n                                                      \n                                                   </select>\n                                                </div>\n                                               {\n                                                   this.state.tracktypess === 'FEATURED'?\n                                                   <div style={{ marginTop: \"25px\" }}>\n                                                   <label style={{ float: \"left\", marginBottom: \"8px\" }}>Price</label>\n                                                   <input type=\"number\"  className='textstyle' id=\"price\" name=\"price\" defaultValue={this.state.data.price} onChange={this.handleChange} />\n                                               </div>\n                                               :null}\n                                               \n                                                \n                                            </div >\n                                            <div className=\"column1\" >\n                                           \n                                            <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Track Type</label>\n                                                   <select name='tracktype' value={this.state.tracktypess}  onChange={this.handletrackstatus} id=\"trackstatus\"   style={{borderRadius:\"10px\",padding:\"8px\",width:\"100%\"}} >\n                                                       {/* <option value=\"0\">select</option> */}\n                                                       <option value=\"NON_FEATURED\">NON_FEATURED</option>\n                                                       <option value=\"FEATURED\">FEATURED</option> \n                                                   </select>\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Description</label>\n                                                    <input type=\"text\"  className='textstyle' id=\"description\" name=\"description\" defaultValue={this.state.data.description} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Uploaded By</label>\n                                                    <input type=\"text\" readOnly  className='textstyle' id=\"uploadedby\" name=\"uploadedby\" value={Armname}  />\n                                                </div>\n                                               \n                                                \n                                                \n                                            </div>\n                                            \n                                           \n\n                                            \n                                            \n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Photo:</span></label>\n                                                    <img style={{ height:\"200px\",width:\"200px\"}}\n                                                        src={this.state.docServer + this.state.data.photo?.docpath}\n                                                        className=\"card-img-top\"\n                                                        \n                                                    />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Audio:</span></label>\n                                                <audio controls preload=\"auto\"   src={this.state.docServer + this.state.data.track?.docpath}>\n                                                 </audio>\n                                                </div>\n                                            </div>\n                                        </div>\n                                       \n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\"   onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height:\"185px\",width:\"175px\"}}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n                                                        \n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Audio File:</span></label>\n                                                    <input required type=\"file\" onChange={this.onChangeFile1} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <audio controls required accept=\"audio/*\"\n                                                    autoPlay preload=\"auto\"\n                                                    src={imageUrl1}>\n                                                    </audio>\n                                                \n                                               \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Update\n                                                    </button>\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>                                                    \n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Edittrack;\n","E:\\ui\\src\\pages\\admin\\user\\Edituser.jsx",["619","620"],"import axios from 'axios';\nimport React from 'react';\nimport './adduser.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nclass Edituser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {},\n            // setemployeescreen:0\n            data: [],\n            photo: {},\n            selectedFile: null,\n            handleResponse: null,\n            imageUrl: null,\n            docServer: docServerUrl\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n\n    }\n\n    submituserRegistrationForm(e) {\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            password: \"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n\n\n        let projectdata = {\n            id: this.props.userId,\n            name: this.state.fields.name,\n            phone: this.state.fields.phone,\n            email: this.state.fields.email,\n            city: this.state.fields.city,\n            photo: {}\n\n        }\n        projectdata.photo = this.state.photo\n        axios.post(httpUrl +  'customer/update', projectdata)\n            .then(responce => {\n                // this.state.fields = fields\n                this.setState({\n                    fields: fields\n                })\n                this.handleUpload()\n                console.log(responce.data)\n            });\n        Swal.fire({\n            icon: 'success',\n            title: 'Submitted',\n            showConfirmButton: false,\n            timer: 1500\n        })\n        this.props.goBack()\n\n\n    }\n\n    componentDidMount() {\n        this.initfun();\n    }\n\n    initfun = () => {\n        let userid = this.props.userId\n        // alert(userid)\n        // let data\n        axios.get(httpUrl +  'customer/' + userid)\n            .then(responce => {\n                this.setState({\n                    data: responce.data,\n                    scrolling: false,\n\n                });\n                console.log('Response', responce)\n            });\n    }\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'Profile',\n                    docpath: \"Customer/\" + this.props.userId + '/' + event.target.files[0].name,\n                    urllink: ''\n                }\n            });\n        }\n    }\n\n    handleUpload = () => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"Customer/\" + this.props.userId);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    // validateForm() {\n\n    //     let fields = this.state.fields;\n    //     let errors = {};\n    //     let formIsValid = true;\n\n    //     if (!fields[\"name\"]) {\n    //         formIsValid = false;\n    //         errors[\"name\"] = \"*Please enter your username.\";\n    //     }\n\n    //     if (typeof fields[\"name\"] !== \"undefined\") {\n    //         if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\n    //             formIsValid = false;\n    //             errors[\"name\"] = \"*Please enter alphabet characters only.\";\n    //         }\n    //     }\n\n    //     if (!fields[\"email\"]) {\n    //         formIsValid = false;\n    //         errors[\"email\"] = \"*Please enter your email-ID.\";\n    //     }\n\n    //     if (typeof fields[\"email\"] !== \"undefined\") {\n    //         //regular expression for email validation\n    //         var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    //         if (!pattern.test(fields[\"emailid\"])) {\n    //             formIsValid = false;\n    //             errors[\"email\"] = \"*Please enter valid email-ID.\";\n    //         }\n    //     }\n\n    //     if (!fields[\"phone\"]) {\n    //         formIsValid = false;\n    //         errors[\"phone\"] = \"*Please enter your mobile no.\";\n    //     }\n\n    //     if (typeof fields[\"phone\"] !== \"undefined\") {\n    //         if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n    //             formIsValid = false;\n    //             errors[\"phone\"] = \"*Please enter valid mobile no.\";\n    //         }\n    //     }\n\n    //     if (!fields[\"password\"]) {\n    //         formIsValid = false;\n    //         errors[\"password\"] = \"*Please enter your password.\";\n    //     }\n\n    //     if (typeof fields[\"password\"] !== \"undefined\") {\n    //         if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n    //             formIsValid = false;\n    //             errors[\"password\"] = \"*Please enter secure and strong password.\";\n    //         }\n    //     }\n\n    //     this.setState({\n    //         errors: errors\n    //     });\n    //     return formIsValid;\n\n\n    // }\n\n\n\n    render() {\n        const { imageUrl } = this.state;\n        return (\n\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n                            <div className=\"panel-heading panel-style\">\n\n                                <span>\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Edit User</span></h3>\n                                </span>\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.submituserRegistrationForm} >\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"name\" defaultValue={this.state.data.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Phone</label>\n                                                    <input type=\"number\"  className='textstyle' name=\"phone\" defaultValue={this.state.data.phone} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>City</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"city\" defaultValue={this.state.data.city} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Email</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"designation\" readOnly value={this.state.data.email} onChange={this.handleChange} />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Photo</label>\n                                                    <img style={{ height: \"175px\", width: \"175px\" }}\n                                                        src={this.state.docServer + this.state.data.photo?.docpath}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" required  onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"175px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Update\n                                                    </button>\n                                                </div>\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Edituser;\n","E:\\ui\\src\\pages\\arm\\Addtrack.jsx",["621","622"],"// import React, { Component } from \"react\";\nimport axios from 'axios';\nimport React from 'react';\n// import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport './addtrack.scss'\nimport { httpUrl, docServerUrl } from '../../restservice'\n\nlet trackidd\nlet dataid\nlet rname = Math.random().toString(36).substring(7) + new Date().getTime();\nlet Armname = JSON.parse(localStorage.getItem(\"userData\")).name;\nclass Addtrack extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            selectedFile1: null,\n            handleResponse: null,\n            imageUrl: null,\n            track: {},\n            data: {},\n            projectid: 0,\n            projectvalue: [],\n            imageUrl1: null,\n            docServer: docServerUrl,\n            tracktypess: \"NON_FEATURED\",\n            // statustrack:\"SUBMITTED\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updatedata = this.updatedata.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handletrackstatus = this.handletrackstatus.bind(this)\n\n\n    };\n\n    // loadData = () => {\n    //     let userid=this.props.empid\n    //     const endpoint = httpUrl + 'employee/${userid}`;\n    //     fetch(endpoint)\n    //       .then(response => response.json())\n    //       .then(json => {\n    //         this.setState({\n    //           data: [{ ...json }],\n    //           scrolling: false,\n    //         });\n    //       });\n    //   };\n\n\n\n    componentDidMount() {\n        this.getdata();\n    }\n\n    // initfun = () => {\n    //     let userid = this.props.empid\n    //     // alert(userid)\n    //     // let data\n    //     axios.get(httpUrl +  'employee/' + userid)\n    //         .then(responce => {\n    //             this.setState({\n    //                 data: responce.data,\n    //                 scrolling: false,\n    //                 empStatus: responce.data.status\n    //             });\n    //             statuschange = responce.data.status;\n\n    //            console.log('status',responce.data.status);\n\n    //         });\n    // }\n\n\n\n    getdata = () => {\n        axios.get(httpUrl +  'genre')\n            .then(responce => {\n                this.setState({\n                    projectvalue: responce.data,\n                    scrolling: false,\n                });\n                // dataid = responce.data[0].id\n                console.log(dataid)\n                console.log(responce.data)\n            });\n    }\n\n\n\n\n\n\n\n\n\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n        console.log(this.state)\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            projectid: value\n        })\n    }\n    handletrackstatus(e) {\n        let value = e.target.value;\n        this.setState({\n            tracktypess: value\n        })\n    }\n\n\n\n    onChangeFile1 = event => {\n        this.setState({ selectedFile1: event.target.files[0] })\n        if (event.target.files[0] !== '') {\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl1: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                track: {\n                    docname: event.target.files[0].name,\n                    doctype: 'track',\n                    docpath: \"soundtrack/Audio/\" + rname + '/' + event.target.files[0].name,\n                    docdesc: \"track\"\n                }\n            })\n\n        }\n        console.log(\"track\")\n        console.log(this.state.track.docname)\n\n    }\n\n    refreshdata = () => {\n        axios.get(httpUrl +  'soundTrack?uploadedby=' + Armname)\n            .then(responce => {\n                this.setState({\n                    data: responce.data,\n                    scrolling: false,\n                });\n                // dataid = responce.data[0].id\n                console.log(responce.data)\n            });\n    }\n\n    updatedata(e) {\n        e.preventDefault();\n    //    alert(this.state.track.docname)\n        const armname = JSON.parse(localStorage.getItem(\"userData\")).name;\n        let fields = {\n            name: \"\",\n            composer: \"\",\n            description: \"\",\n            price: \"\"\n            // uploadedby:\"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n        console.log(this.state.statustrack)\n        console.log(this.state.projectid)\n\n        \n          \n        let projectdata = {\n            name: this.state.fields.name,\n            tracktype: this.state.tracktypess,\n            composer: this.state.fields.composer,\n            description: this.state.fields.description,\n            // price: this.state.fields.price,\n            status: 'SUBMITTED',\n            genre: this.state.projectid,\n            uploadedby: armname,\n            track: {\n                docname: this.state.selectedFile1.name,\n                docpath: \"soundtrack/Audio\" + \"/\" + rname + this.state.selectedFile1.name,\n                docdesc: \"track\",\n                doctype: \"track\"\n            }\n        }\n\n        if(this.state.tracktypess === 'NON_FEATURED'){\n         projectdata.price = 0\n        }\n        else{\n            projectdata.price = this.state.fields.price\n        }\n      \n        console.log('projectdata')\n        console.log(this.state.projectid)\n\n        var ext = this.state.track.docname.substr(this.state.track.docname.lastIndexOf('.') + 1);\n            if (ext === 'mp3' || ext === 'mp4') {\n                axios.post(httpUrl +  'soundTrack', projectdata)\n                    .then(responce =>{\n\n                        this.setState({\n                            fields: fields\n                        })\n                        console.log(responce)\n                        trackidd = responce.data.id\n                        this.phoadd(responce.data.id)\n                        this.handleUpload1(responce.data.id)\n\n\n\n                        Swal.fire({\n                            icon: 'success',\n                            title: 'Submitted',\n                            showConfirmButton: false,\n                            timer: 1500\n                        })\n                        this.props.goBack()\n                        this.refreshdata();\n            \n                    }).catch(error =>{\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'SoundTrack And Genre Already Exist ',\n                            showConfirmButton: false,\n                            timer: 3500\n                        })\n                        console.log(error)\n                      });\n            }\n            else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Please Upload Mp3 Or Mp4 File',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n            }\n\n        \n    }\n    updateaudio(trackid) {\n        let updateaudiofile = {\n            id: trackid,\n            track: {\n                docname: this.state.selectedFile1.name,\n                docpath: \"soundtrack/Audio/\" + trackid + \"/\" + this.state.selectedFile1.name,\n                docdesc: \"track\",\n                doctype: \"track\"\n            }\n        }\n        axios.post(httpUrl +  'soundTrack/update', updateaudiofile)\n            .then(responce => {\n                // this.state.fields = fields \n                this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate Track\",\n                });\n\n\n            })\n    }\n\n    phoadd = (trackid) => {\n        console.log(trackid)\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"soundtrack/\" + trackidd);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.updatephoto(trackid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    updatephoto(trackid) {\n        let updateAbleData = {\n            id: trackid,\n            photo: {\n                docname: this.state.selectedFile.name,\n                doctype: 'soundtrack',\n                docpath: \"soundtrack/\" + trackid + \"/\" + this.state.selectedFile.name,\n                docdesc: 'soundtrack'\n            },\n        }\n        axios.post(httpUrl +  'soundTrack/update', updateAbleData)\n            .then(responce => {\n                // this.state.fields = fields \n                this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate User\",\n                });\n\n\n            })\n    }\n\n\n\n\n    handleUpload1 = (trackid) => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile1 } = this.state;\n        if (!selectedFile1) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select audio to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile1, rname + this.state.selectedFile1.name);\n        formData.append('name', \"soundtrack/Audio\");\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updateaudio(trackid);\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert('error')\n            //   this.opensweetalertdanger(err.message);\n        });\n    }\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'soundtrack',\n                    docpath: \"soundtrack/\" + trackidd + '/' + event.target.files[0].name,\n                    docdesc: \"soundtrack\"\n                }\n            });\n        }\n    }\n\n\n\n\n\n\n\n    render() {\n        const { imageUrl, imageUrl1 } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Add Sound Track</span>\n                                </h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                                        <div className=\"row1\">\n                                            <div className=\"column1\" >\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\" className='textstyle' name=\"name\" id=\"name\" value={this.state.fields.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Artist</label>\n                                                    <input type=\"text\" className='textstyle' name=\"composer\" id=\"composer\" value={this.state.fields.composer} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Select Genre</label>\n                                                    <select required name='status' value={this.state.projectid} onChange={this.handleStatusChange} id=\"status\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        <option value=\"0\">Select</option>\n\n                                                        {this.state.projectvalue.map((entry) => {\n                                                            return <option value={entry.name}>{entry.genre}</option>\n                                                        })\n                                                        }\n\n                                                    </select>\n                                                </div>\n                                                {\n                                                    this.state.tracktypess === 'FEATURED' ?\n                                                        <div style={{ marginTop: \"25px\" }}>\n                                                            <label style={{ float: \"left\", marginBottom: \"8px\" }}>Price</label>\n                                                            <input type=\"number\" className='textstyle' id=\"price\" name=\"price\" value={this.state.fields.price} onChange={this.handleChange} />\n                                                        </div>\n                                                        : null}\n\n\n                                            </div >\n                                            <div className=\"column1\" >\n\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Track Type</label>\n                                                    <select name='tracktype' required value={this.state.tracktypess} onChange={this.handletrackstatus} id=\"trackstatus\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        {/* <option value=\"0\">select</option> */}\n                                                        <option value=\"NON_FEATURED\">NON_FEATURED</option>\n                                                        <option value=\"FEATURED\">FEATURED</option>\n                                                    </select>\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Description</label>\n                                                    <input type=\"text\" className='textstyle' id=\"description\" name=\"description\" value={this.state.fields.description} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Uploaded By</label>\n                                                    <input type=\"text\" readOnly className='textstyle' id=\"uploadedby\" name=\"uploadedby\" value={Armname} />\n                                                </div>\n\n\n\n                                            </div>\n\n\n\n\n\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"185px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Audio File:</span></label>\n                                                    <input required type=\"file\"  onChange={this.onChangeFile1} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <audio controls required accept=\"audio/*\"\n                                                        autoPlay preload=\"auto\"\n                                                        src={imageUrl1}>\n                                                    </audio>\n\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Submit\n                                                    </button>\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Addtrack;\n","E:\\ui\\src\\pages\\admin\\user\\projectmanage.jsx",["623","624","625"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport '../../dashboard/produce/project/project.scss'\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet projectid\nlet lengthdefine\nlet random1\nclass DetailsFormProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: {},\n      url: '',\n      data: [],\n      linkdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      setmnanageproject: 1,\n      selectedFile: null,\n      handleResponse: null,\n      getbyidproject: [],\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    const endpoint = httpUrl + 'project/' + projectid;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: json,\n          linkdata: [...json.links],\n        });\n\n      });\n    console.log(this.state.projects)\n  };\n  backpagescreen(projectidd) {\n    projectid = projectidd\n    this.loadData()\n    this.setState({ setmnanageproject: 2 });\n  }\n\n\n  chnageproject() {\n    let id = this.props.userId;\n    axios.get(httpUrl + 'project?customer=' + id)\n      .then(responce => {\n        this.setState({\n          getbyidproject: responce.data,\n          scrolling: false,\n\n        });\n\n      });\n\n  };\n  componentDidMount() {\n    this.chnageproject()\n    // this.updateTable()\n    // this.loadData();\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  backpage() {\n    this.setState({ setmnanageproject: 1 })\n  }\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n\n    Swal.fire({\n      title: 'Project Is Active !',\n      text: 'Are You Sure You Want To Delete Project? You Can Not Recover Data',\n      type: 'Warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n\n        const endpoint = httpUrl + 'project/' + id;\n        fetch(endpoint, { method: 'DELETE' })\n          .then(response => response.json())\n          .then(json => {\n            Swal.fire(\n              'Deleted!',\n              'Your data has been deleted.',\n              'success'\n            );\n            this.props.goBack();\n          });\n\n\n      }\n    });\n\n\n  }\n\n\n\n\n\n\n\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects.id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n        <th style={{ width: '200px' }}>action</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='100%' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n          <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button title=\"Delete Link\" className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    if (str) {\n      let string = str.replace(/_/g, ' ');\n      return this.toTitles(string);\n    }\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  // updateTable = () => {\n  //   axios.get(httpUrl +  'project?customer=' + this.props.userId)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects.customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, random1 + '_' + this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects.customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects.id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 5000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return (\n      <tr>\n        <td>\n          <ul><span>Name:</span>{this.state.projects.name}</ul>\n          <ul><span>Customer Name:</span>{this.props.username}</ul>\n          <ul><span>Genre:</span>{this.getToTitles(this.state.projects.genre)}</ul>\n          <ul><span>Project Type:</span>{this.getToTitles(this.state.projects.projecttype)}</ul>\n          <ul><span>Needs Help With:</span>{this.getToTitles(this.state.projects.faqs)}</ul>\n          <ul><span>Price Type:</span>{this.getToTitles(this.state.projects.projectprice)}</ul>\n          <ul><span>Payment Status:</span>{this.getToTitles(this.state.projects.paymentstatus)}</ul>\n          {/* <ul><span>Manager:</span>{managername}</ul> */}\n          <ul><span>Details:</span><li>{this.state.projects.details}</li></ul>\n        </td>\n        <td className=\"text-align-center\">\n          <audio controls\n            preload=\"auto\" style={{ width: '100%' }}\n            src={this.state.docServer + this.state.projects.file?.docpath}>\n          </audio>\n        </td>\n        <td className=\"text-align-center\">\n          <button title=\"Project Update\" className=\"my-svg-edit\"\n            onClick={e => {\n              this.updateProject();\n            }}\n          >\n          </button>&nbsp;\n          <button title=\"Project Delete\" className=\"my-svg-delete\"\n            onClick={e => {\n              this.deleteProject(this.state.projects.id);\n            }}\n          >\n          </button>\n        </td>\n      </tr>\n    )\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div>\n        {this.state.setmnanageproject === 1 ?\n          <>\n            <div>\n              <div className=\"contenttype\">\n                <h3>\n                  <span style={{ float: \"left\" }} >Project List</span>\n                  <span style={{ float: \"right\", cursor: \"pointer\" }} onClick={() => { this.props.goBack() }}>Back</span>\n                </h3>\n              </div>\n              <div className='trackMainBox'>\n                <div className=\"showMasterFolder\">\n                  {this.state.getbyidproject.map(entry => (\n                    <div key={entry.id} style={{ cursor: \"pointer\" }} className=\"folderHover\" onClick={() => { this.backpagescreen(entry.id); }}>\n                      <h4>\n                        <img style={{ cursor: \"pointer\" }} src={folderIcon} alt=\"folder\" className='iconFolder' />\n                      </h4>\n                      <label style={{ cursor: \"pointer\" }}>{entry.name}</label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div></>\n          : null}\n        {\n          this.state.setmnanageproject === 2 ?\n            <div className=\"clearfix\">\n              {this.state.setScreenOpen === 0 ?\n                <div className=\"row\">\n                  <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"card\">\n                      <h3 style={{ display: \"flex\", justifyContent: \"space-between\", padding: 10 }}>\n                        <span>Project Details</span>\n                        <span onClick={() => { this.backpage() }} style={{ color: \"white\" }}>\n                          <button style={{ cursor: \"pointer\" }}>\n                            Back\n                          </button>\n                        </span>\n                      </h3>\n                      <table id='projects'>\n                        <tbody>\n                          {this.renderTableHeader()}\n                          {this.renderTableDataProject()}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                : null}\n\n              {this.state.setScreenOpen === 0 ?\n                <div className=\"row\">\n                  <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"card\">\n                      <div className=\"btn-align-down\">\n                        <button title=\"Add You Tube Urls\" className=\"my-svg-add\"\n                          onClick={e => {\n                            this.addYoutubeUrl();\n                          }}\n                        >\n                        </button>\n                      </div>\n                      <div>\n                        <h3 className=\"paddi\">Reference Links</h3>\n                        <table id='projects'>\n                          <tbody>\n                            {this.renderTableHeader()}\n                            {this.renderTableDataYoutube()}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                :\n                this.state.setScreenOpen === 1 ?\n                  <div className=\"row\">\n                    <div className=\"card-body\">\n                      <div className=\"card\">\n                        <div className=\"paddi\"><h3>Project Edit</h3></div>\n                        <hr />\n                        <form onSubmit={this.handleUpdateSubmit}>\n                          <ul>\n                            <label className=\"label\" >Details: </label><br />\n                            <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                          <div style={{ padding: '10px 20px 0px 20px', textAlign: \"left\" }}>\n                            <span>Select Audio File:</span>\n                            <span style={{ marginBottom: 10 }}>\n                              <input type=\"file\" onChange={this.onChangeFile} />\n                            </span>\n                            <div className=\"up-img\">\n                              {imageUrl &&\n                                <audio controls\n                                  autoplay preload=\"auto\"\n                                  src={imageUrl}>\n                                </audio>\n                              }\n                            </div>\n                          </div>\n\n                          <div className=\"btn-margin\">\n                            <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\" style={{ height: \"37px\" }}>\n                              <span> Submit</span>\n                            </button>\n                            <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\" style={{ height: \"37px\" }}\n                              onClick={e => {\n                                this.updateCancel();\n                              }}\n                            ><span>Cancel</span>\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  :\n                  this.state.setScreenOpen === 2 ?\n                    <div className=\"col-xs-2\">\n                      <div className=\"card-body\">\n                        <div className=\"card\">\n                          <form onSubmit={this.handleSubmit}>\n                            <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                            <hr />\n                            <ul>\n                              <label className=\"label\" >Reference Link: </label>\n                              <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                            <div className=\"btn-margin\">\n                              <button style={{ padding: \"1px 25px\" }} type=\"Submit\" className=\"btn-primary btn-small\"\n                              >\n                                Submit\n                              </button>\n                              <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\"\n                                onClick={e => {\n                                  this.updateCancel();\n                                }}\n                              >Cancel\n                              </button>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                    : null\n              }\n\n            </div>\n            : null}\n\n\n      </div>\n    );\n\n  }\n}\n\nexport default DetailsFormProject;\n","E:\\ui\\src\\pages\\admin\\user\\Adduser.jsx",["626"],"import axios from 'axios';\nimport React from 'react';\nimport './adduser.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl, nodeUrl } from '../../../restservice'\n\nlet custid = 0\nclass Adduser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            handleResponse: null,\n            imageUrl: null,\n            setemployeescreen: 0\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n\n    }\n\n\n\n    submituserRegistrationForm(e) {\n\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            password: \"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n\n\n        let projectdata = {\n            name: this.state.fields.name,\n            phone: this.state.fields.phone,\n            email: this.state.fields.email,\n            city: this.state.fields.city,\n            login: {\n                email: this.state.fields.email,\n                password: btoa(this.state.fields.password),\n                type: \"CUSTOMER\",\n                signuptype: \"EMAIL\",\n            }\n\n        }\n        projectdata.login.email = projectdata.email\n        axios.post(httpUrl + 'customer', projectdata)\n            .then(responce => {\n                // this.state.fields = fields\n                this.setState({\n                    fields: fields\n                })\n                custid = responce.data.id\n                this.handleUpload(custid);\n                this.sendwelcomemail(responce.data.name, responce.data.login.password, responce.data.email)\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                // this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate User\",\n                });\n\n\n            })\n    }\n\n\n    sendwelcomemail = (name, password, email) => {\n\n        let decript = atob(password)\n        console.log(decript)\n\n        let sendformat = {\n            \"email\": email,\n            \"name\": name,\n            \"username\": name,\n            \"password\": decript\n        }\n\n        axios.post(nodeUrl + 'welcomeMail', sendformat)\n            .then(responce => {\n                console.log(responce.data)\n            });\n\n    }\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'Profile',\n                    docpath: \"Customer/\" + event.target.files[0].name,\n                    urllink: ''\n                }\n            });\n        }\n    }\n\n    handleUpload = (custid) => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"Customer/\" + custid);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.updateCustomer(custid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    updateCustomer(customerId) {\n        let updateAbleData = {\n            id: customerId,\n            photo: {\n                docname: this.state.selectedFile.name,\n                doctype: 'Profile',\n                docpath: \"Customer/\" + customerId + \"/\" + this.state.selectedFile.name,\n                urllink: ''\n            }\n        }\n        axios.post(httpUrl + 'customer/update', updateAbleData)\n            .then(responce => {\n                // this.state.fields = fields \n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate User\",\n                });\n\n\n            })\n    }\n\n\n    validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if (!fields[\"name\"]) {\n            formIsValid = false;\n            errors[\"name\"] = \"*Please enter your username.\";\n        }\n\n        if (typeof fields[\"name\"] !== \"undefined\") {\n            if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"*Please enter alphabet characters only.\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"*Please enter your email-ID.\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(fields[\"emailid\"])) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Please enter valid email-ID.\";\n            }\n        }\n\n        if (!fields[\"phone\"]) {\n            formIsValid = false;\n            errors[\"phone\"] = \"*Please enter your mobile no.\";\n        }\n\n        if (typeof fields[\"phone\"] !== \"undefined\") {\n            if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"phone\"] = \"*Please enter valid mobile no.\";\n            }\n        }\n\n        if (!fields[\"password\"]) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"password\"] !== \"undefined\") {\n            if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return formIsValid;\n\n\n    }\n\n\n\n    render() {\n        const { imageUrl } = this.state;\n        return (\n\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n                            <div className=\"panel-heading panel-style\">\n\n                                <span>\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Add User</span></h3>\n                                </span>\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.submituserRegistrationForm} >\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Name</p>\n                                                    <input type=\"text\" name=\"name\" className='textstyle' required value={this.state.fields.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Phone</p>\n                                                    <input type=\"number\" className='textstyle' name=\"phone\" required value={this.state.fields.phone} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>City</p>\n                                                    <input type=\"text\" className='textstyle' name=\"city\" required value={this.state.fields.city} onChange={this.handleChange} />\n                                                </div>\n                                                {/* <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Designation</label>\n                                                    <input type=\"text\" name=\"designation\" value={this.state.fields.designation} onChange={this.handleChange} />\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                        {/* <h3><span >Login Details</span></h3> */}\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Email</p>\n                                                    <input type=\"text\" className='textstyle' name=\"email\" required value={this.state.fields.Email} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Password</p>\n                                                    <input type=\"password\" className='textstyle' name=\"password\" required value={this.state.fields.password} onChange={this.handleChange} />\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" required onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"180px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Submit\n                                                    </button>\n                                                </div>\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Adduser;\n","E:\\ui\\src\\pages\\admin\\user\\manageUser.jsx",["627","628","629","630","631","632"],"import React, { useEffect, useState } from \"react\";\nimport \"./userstyle.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { httpUrl } from '../../../restservice'\n\nlet managerid = 0\nlet dateData = {};\n\nexport default function ManageUser(props) {\n\n    const [data, setData] = useState([]);\n    const [list, setList] = useState([]);\n    const [projectlist, setproject] = useState([]);\n    const [projectid, setprojectid] = useState(\"0\");\n    const [searchterm, setsearchterm] = useState('');\n    const [pageSelection, setPageSelection] = useState(1)\n\n    const { showDetailsPage } = props\n    const { showpage } = props\n    const { showaddpage } = props\n    const { showuseredit } = props\n\n    const [datatype, setDatatype] = useState('ALL_USER');\n\n\n    useEffect(() => {\n        loadData()\n        getartistlist()\n\n    }, [])\n\n\n\n    const showDetails = sendableId => {\n        showDetailsPage(sendableId)\n    }\n\n    const showadddpage = () => {\n        showaddpage();\n    }\n\n    const showeditpage = sendableId => {\n        showuseredit(sendableId);\n    }\n\n    const showproject = (sendableId, name) => {\n        showpage(sendableId, name)\n    }\n\n    const backpage = () => {\n        setPageSelection(1)\n    }\n    const assignartist = (cusid) => {\n        // setPageSelection(2)\n        getpage1(cusid)\n    }\n\n    const getpage1 = (cusid) => {\n        axios.get(httpUrl + 'customer/' + cusid)\n            .then(response => {\n                if (response.data) {\n\n                    setPageSelection(2)\n                    setproject({ ...response.data })\n                    managerid = response.data.id\n                    setprojectid(response.data.manager)\n                    console.log(managerid)\n                    console.log(response.data)\n                }\n                else {\n                    Swal.fire({\n                        icon: 'warning',\n                        title: \"Project Not Added\",\n                    });\n                }\n\n            });\n\n    }\n\n    const loadData = () => {\n\n        axios.get(httpUrl + 'customer')\n            .then(response => {\n                setData([...response.data])\n                console.log(response.data)\n                setDatatype('ALL_USER')\n            });\n\n\n    }\n\n    const getartistlist = () => {\n        axios.get(httpUrl + 'employee')\n            .then(response => {\n                setList([...response.data])\n                console.log('ye data hai')\n                console.log(response.data)\n            });\n    }\n\n\n    const changeemployee = () => {\n        console.log(managerid)\n        console.log(\"ye aa raha hai\")\n        console.log(projectid)\n\n        let employeech = {\n            id: managerid,\n            manager: projectid\n        }\n        axios.post(httpUrl + 'customer/update', employeech)\n            .then(responce => {\n                // this.state.fields = fields\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Artist Manager Updated Successfully',\n                })\n                backpage()\n                console.log(responce.data)\n            })\n    }\n    //    alert(managerid)\n    function deleteemployee(id) {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this customer data!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n\n                axios.delete(httpUrl + 'customer/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        console.log(responce)\n                        loadData()\n                    });\n\n\n            }\n        });\n    }\n\n    function unixTimeConverter(unixTime) {\n        const date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(unixTime);\n        return date;\n    }\n\n    const handleChange = (e) => {\n        dateData[e.target.name] = e.target.value;\n    }\n\n    function getToTitles(str) {\n        let string = str.replace(/_/g, ' ');\n        return toTitles(string);\n    }\n\n    function toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n    function fistWeek() {\n\n        axios.get(httpUrl + 'customer?type=THISWEEK')\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('THISWEEK')\n                console.log(responce.data)\n            });\n    }\n    function lastMonth() {\n\n        axios.get(httpUrl + 'customer?type=LASTMONTH')\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('LASTMONTH')\n                console.log(responce.data)\n            });\n    }\n    function currentMonth() {\n\n        axios.get(httpUrl + 'customer?type=THISMONTH')\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('THISMONTH')\n                console.log(responce.data)\n            });\n    }\n\n    function customDate() {\n        setDatatype('CUSTOM_DATE')\n    }\n\n    function submitDate() {\n        let startdate = dateData.startdate;\n        let enddate = dateData.enddate;\n        axios.get(httpUrl + 'customer?startdate=' + startdate + '&enddate=' + enddate)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('CUSTOM_DATE')\n                console.log(responce.data)\n            });\n    }\n\n    return (\n        <div>\n            {pageSelection === 1 ?\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Manage User</span>\n                                        <span style={{ float: \"right\", cursor: \"pointer\" }} title=\"Add User\" onClick={() => { showadddpage() }} >\n                                            <i className=\"fa fa-plus\"></i></span>\n\n                                    </h3>\n                                </div>\n\n                                <div className=\"panel-body\">\n                                    <div className=\"table-responsive table-style\">\n                                        <table id=\"projects\">\n                                            <thead>\n                                                <tr>\n                                                    <th >Name</th>\n                                                    <th >Phone</th>\n                                                    <th >Email</th>\n                                                    <th >City</th>\n                                                    <th >Since</th>\n                                                    <th >Action</th>\n                                                </tr>\n\n                                                <tr>\n                                                    <th colSpan=\"12\">\n                                                        <div className=\"row\">\n                                                            <div style={{\n                                                                float: \"left\",\n                                                                width: \"30%\",\n                                                                padding: \"8px 0\",\n                                                                height: \"50px\"\n                                                            }} >\n                                                                <div style={{ display: 'flex' }}>\n                                                                    <input type=\"text\" className=\"inputetype\"\n\n                                                                        onChange={(e) => {\n                                                                            setsearchterm(e.target.value);\n                                                                        }}\n                                                                        placeholder=\"Search By Name,City,Email\" name=\"search\" />\n                                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\", padding: \"9px 7px\", backgroundColor: \"transparent\" }}>\n                                                                        <i className=\"fa fa-search\"></i>\n\n                                                                    </button>\n                                                                </div>\n                                                            </div>\n\n                                                            <div style={{ float: \"left\", margin: \"12px\", display: \"flex\" }}>\n                                                                <button onClick={() => { loadData() }} className='btn-primary' style={{ color: \"White\", margin: \"0 12px\", padding: \"6px 20px\", fontSize: \"15px\" }} className={datatype === 'ALL_USER' ? \"active-link\" : \"\"}>ALL</button>\n                                                                <button onClick={() => { fistWeek() }} className='btn-primary' style={{ color: \"White\", margin: \"0 12px\", padding: \"6px 20px\", fontSize: \"15px\" }} className={datatype === 'THISWEEK' ? \"active-link\" : \"\"}>THIS WEEK</button>\n                                                                <button onClick={() => { currentMonth() }} className='btn-primary' style={{ color: \"White\", margin: \"0 12px\", padding: \"6px 20px\", fontSize: \"15px\" }} className={datatype === 'THISMONTH' ? \"active-link\" : \"\"}>THIS MONTH</button>\n                                                                <button onClick={() => { lastMonth() }} className='btn-primary' style={{ color: \"White\", margin: \"0 12px\", padding: \"6px 20px\", fontSize: \"15px\" }} className={datatype === 'LASTMONTH' ? \"active-link\" : \"\"}>LAST MONTH</button>\n                                                                <button onClick={() => { customDate() }} className='btn-primary' style={{ color: \"White\", margin: \"0 12px\", padding: \"6px 20px\", fontSize: \"15px\" }} className={datatype === 'CUSTOM_DATE' ? \"active-link\" : \"\"}>CUSTOM DATE</button>\n                                                            </div>\n                                                            <br />\n                                                            {datatype === 'CUSTOM_DATE' ?\n                                                                <div className=\"row\">\n                                                                    <div style={{\n                                                                        float: \"left\",\n                                                                        width: \"33%\",\n                                                                        padding: \"8px 0px\",\n                                                                        height: \"50px\"\n                                                                    }}></div>\n                                                                    <div style={{\n                                                                        float: \"left\",\n                                                                        width: \"32%\",\n                                                                        padding: \"10px 0\",\n                                                                        height: \"60px\", display: \"flex\"\n                                                                    }} >\n\n                                                                        <span style={{ padding: \"10px 6px\", fontSize: \"16px\", width: \"33%\" }}>Start Date</span>\n                                                                        <input type=\"date\" name=\"startdate\" style={{ width: \"70%\" }} required onChange={(e) => { handleChange(e) }} />\n\n                                                                    </div >\n                                                                    <div style={{\n                                                                        float: \"left\",\n                                                                        width: \"32%\",\n                                                                        padding: \"10px 0\",\n                                                                        height: \"60px\", display: \"flex\"\n                                                                    }} >\n\n                                                                        <span style={{ padding: \"10px 6px\", fontSize: \"16px\", width: \"33%\" }}>End Date</span>\n                                                                        <input type=\"date\" style={{ width: \"70%\" }} name=\"enddate\" required onChange={(e) => { handleChange(e) }} />\n                                                                        <button onClick={() => { submitDate() }} type=\"submit\" className='btn-primary' style={{ color: \"White\", padding: \"9px 7px\", backgroundColor: \"transparent\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n                                                                        </button>\n                                                                    </div>\n                                                                </div>\n                                                                : null}\n                                                        </div>\n                                                    </th>\n                                                </tr>\n\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    data.filter((val) => {\n                                                        if (searchterm === '') {\n                                                            return true;\n\n                                                        }\n                                                        else if (\n                                                            val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                            val.city.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                            val.email.toLowerCase().includes(searchterm.toLowerCase())\n\n\n                                                        ) {\n                                                            return true;\n\n                                                        }\n                                                        else return false\n\n\n                                                    }).map(((entry) => (\n                                                        <tr key={entry.id}>\n\n                                                            <td>{entry.name}</td>\n                                                            <td>{entry.phone}</td>\n                                                            <td>{entry.email}</td>\n                                                            <td>{getToTitles(entry.city)}</td>\n                                                            <td>{unixTimeConverter(entry.addedon)}</td>\n                                                            <td>\n\n\n                                                                <span onClick={() => { showproject(entry.id, entry.name) }} title=\"User Project\" style={{ color: \"white\" }}>\n                                                                    <button>\n                                                                        <i className=\"fa fa-tasks\"></i>\n                                                                    </button>\n                                                                </span>\n\n                                                                &nbsp;\n                                                                &nbsp;\n                                                                <span onClick={() => { showeditpage(entry.id) }} title=\"User Update\" style={{ color: \"white\" }}>\n                                                                    <button>\n                                                                        <i className=\"fa fa-edit\"></i>\n                                                                    </button>\n                                                                </span>\n                                                                &nbsp;\n                                                                &nbsp;\n\n                                                                <span onClick={() => { showDetails(entry.id) }} title=\"User Detail\" style={{ color: \"white\" }}>\n                                                                    <button>\n                                                                        <i className=\"fa fa-info-circle\"></i>\n\n                                                                    </button>\n                                                                </span>\n                                                                &nbsp;\n                                                                &nbsp;\n                                                                <span onClick={() => { assignartist(entry.id) }} title=\"Assign Artist Manager\" style={{ color: \"white\" }}>\n                                                                    <button>\n                                                                        <i className=\"fa fa-th\"></i>\n\n                                                                    </button>\n                                                                </span>\n                                                                &nbsp;\n                                                                &nbsp;\n                                                                <span onClick={() => { deleteemployee(entry.id) }} title=\"User Delete\" style={{ color: \"white\" }}>\n                                                                    <button>\n                                                                        <i class=\"fa fa-trash\"></i>\n\n                                                                    </button>\n                                                                </span>\n\n\n                                                            </td>\n\n                                                        </tr>\n                                                    )))\n                                                }\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div >\n                </div >\n\n                : null}\n\n            {\n                pageSelection === 2 ?\n                    <div className=\"card\">\n                        <div className=\"card-body \">\n                            <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                                <div className=\"panel panel-default cart-border\">\n                                    <div className=\"panel-heading panel-style\">\n                                        <h3 style={{ color: \"#ffc701\" }}>\n                                            <span style={{ float: \"left\" }}>Artist Assign</span>\n\n\n                                        </h3>\n                                    </div>\n\n                                    <div className=\"panel-body\">\n                                        <div className=\"table-responsive table-style\">\n                                            <div style={{ margin: \"41px\" }}>\n                                                <p style={{ fontSize: \"19px\", marginBottom: \"9px\", textAlign: \"left\" }}>Select Artist</p>\n                                                <select id=\"dropdown\" name=\"id\" value={projectid} onChange={e => { setprojectid(e.target.value) }} style={{ width: \"100%\", padding: \"14px\", borderRadius: \"12px\" }}>\n                                                    <option value=\"0\">Select Artist</option>\n                                                    {list.map((e) => {\n\n                                                        return <option value={e.id}>{e.name}</option>\n                                                    })}\n                                                </select>\n\n\n                                            </div>\n                                            <div style={{ margin: \"41px\" }}>\n                                                <div>\n                                                    <button type=\"submit\" onClick={() => { changeemployee() }} className='btn-primary' style={{ color: \"White\", float: \"left\", marginRight: \"12px\" }}>\n                                                        Submit\n                                                    </button>\n                                                    &nbsp;\n                                                    &nbsp;\n                                                    <button type=\"cancel\" onClick={() => { backpage() }} className='btn-primary' style={{ color: \"White\", float: \"left\" }}>\n                                                        Cancel\n                                                    </button>\n\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div >\n                    </div >\n\n\n                    : null\n            }\n\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\admin\\user\\detailsUser.jsx",["633"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./user.scss\";\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nexport default function DetailsUser(props) {\n    const { userId, goBack } = props\n    const [data, setData] = useState({});\n    const docServer = docServerUrl\n\n    useEffect(() => {\n        axios.get(httpUrl +  'customer/' + userId)\n            .then(responce => {\n                setData(responce.data)\n                console.log(responce.data)\n            });\n    }, [userId])\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\" }}>\n                                <span style={{float:\"left\"}}>User Details</span>\n                                <span onClick={() => {goBack()}} style={{ color: \"white\", float:\"right\",cursor:\"pointer\" }}>\n                                Back\n                            </span>\n                                </h3>\n                          \n                            {/* <h1 onClick={() => {goBack()}} >This is details page == {userId}</h1> */}\n                        </div>\n\n                        <div className=\"panel-body\">\n                        <div style={{padding:\"20px\"}}>\n                              <span style={{fontSize:\"19px\",float:\"left\"}}>\n                              Personal Details :\n                              </span>\n                          </div>\n\n                            <div className=\"grid-container\">\n\n                                <div className=\"grid-item\">\n                                    Name: <label>{data.name}</label>\n                                </div>\n\n                                <div className=\"grid-item\">\n                                    Email: <label>{data.email}</label>\n                                </div>\n\n                                <div className=\"grid-item\">\n                                    Phone: <label>{data.phone}</label>\n                                </div>\n\n                                <div className=\"grid-item\">\n                                    City: <label>{data.city}</label>\n                                </div>\n                                {\n                                data.login ?\n                                    (\n                                        \n                                            <div className=\"grid-item\">\n                                                Signup Type: <label>{data.login.signuptype}</label>\n                                            </div>\n                                           \n                                    \n                                    )\n                                    : null\n                            }\n                             <div className=\"grid-item\">\n                                    Assign Manager: <label>{data.managername}</label>\n                                </div>\n                            </div>\n\n                            <div className=\"grid-container\">\n                          {\n                                data.photo ?\n                                    (\n                                            <div className=\"grid-item\">\n                                             <img style={{ height:\"100px\",width:\"100px\"}} src={docServer + data.photo?.docpath} />\n                                            </div>\n                                    )\n                                    : null\n                            }\n                          </div>\n                          \n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n}\n","E:\\ui\\src\\pages\\admin\\projects\\detailsProject.jsx",["634","635"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport '../../dashboard/produce/project/project.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet lengthdefine\nlet random1\nclass DetailsFormProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: {},\n      userName: {},\n      url: '',\n      data: [],\n      linkdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    let id = this.props.projectId\n    // const id = localStorage.getItem(\"selectedCustomerID\");\n    const url = httpUrl + 'project/' + id;\n    fetch(url, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: json,\n          linkdata: [...json.links],\n        });\n      });\n\n  };\n\n  loadCustomer() {\n    const headers = { 'Content-Type': 'application/json' }\n    const id = localStorage.getItem(\"selectedCustomerID\");\n    const url = httpUrl + 'customer/' + id;\n    fetch(url, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          userName: json,\n        });\n      });\n\n  };\n  componentDidMount() {\n    this.loadData();\n    this.loadCustomer();\n    // this.updateTable()\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const url = httpUrl + 'project/link/add';\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n    const url = httpUrl + 'project/' + id;\n    fetch(url, { method: 'DELETE' })\n      // const endpoint = httpUrl + 'project/${id}`;\n      // fetch(endpoint, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects[0].id, ids: [id] })\n    };\n\n    const url = httpUrl + 'project/link/delete';\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '500px' }}>Details</th>\n        <th style={{ width: '350px' }}>video/Audio</th>\n        {/* <th style={{ width: '225px' }}>action</th> */}\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='100%' height='100px' className=\"youtube\"\n              url={link}>\n            </ReactPlayer>\n          </td>\n          {/* <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button title=\"Delete Link\" className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td> */}\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    if (str) {\n      let string = str.replace(/_/g, ' ');\n      return this.toTitles(string);\n    }\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  // updateTable = () => {\n  //   let userId = localStorage.getItem('selectedCustomerID') \n  //   axios.get(httpUrl +  'project?customer=' + userId)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects[0].customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects[0].customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects[0].id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n    const url = httpUrl + 'project/update';\n    fetch(url, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 5000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return (\n      <tr>\n        <td>\n          <ul><span>Project Name:</span>{this.state.projects.name}</ul>\n          {this.state.userName ?\n            <ul><span>Customer Name:</span>{this.state.userName.name}</ul>\n            : null}\n          {this.state.userName ?\n            <ul><span>Customer Email:</span>{this.state.userName.email}</ul>\n            : null}\n          <ul><span>Genre:</span>{this.getToTitles(this.state.projects.genre)}</ul>\n          <ul><span>Project Type:</span>{this.getToTitles(this.state.projects.projecttype)}</ul>\n          <ul><span>Needs Help With:</span>{this.getToTitles(this.state.projects.faqs)}</ul>\n          <ul><span>Price Type:</span>{this.getToTitles(this.state.projects.projectprice)}</ul>\n          <ul><span>Payment Status:</span>{this.getToTitles(this.state.projects.paymentstatus)}</ul>\n          {/* <ul><span>Manager:</span>{managername}</ul> */}\n          <ul><span>Details:</span><li>{this.state.projects.details}</li></ul>\n        </td>\n        <td className=\"text-align-center\">\n          <audio controls style={{ width: '100%' }}\n            preload=\"auto\"\n            src={this.state.docServer + this.state.projects.file?.docpath}>\n          </audio>\n        </td>\n        {/* <td className=\"text-align-center\">\n          <button title=\"Project Update\" className=\"my-svg-edit\"\n            onClick={e => {\n              this.updateProject();\n            }}\n          >\n          </button>&nbsp;\n          <button title=\"Project Delete\" className=\"my-svg-delete\"\n            onClick={e => {\n              this.deleteProject(this.props.projectId);\n            }}\n          >\n          </button>\n        </td> */}\n      </tr>\n    )\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            <div className=\"col-md-4 animated fadeIn\" >\n              <div className=\"card\">\n                <h3 style={{ display: \"flex\", justifyContent: \"space-between\", padding: 10 }}>\n                  <span>Project Details</span>\n                  <span onClick={() => { this.props.Back() }} style={{ color: \"white\", cursor: \"pointer\" }}>\n                    <button>\n                      Back\n                    </button>\n                  </span>\n\n                </h3>\n                <table id='projects'>\n                  <tbody>\n                    {this.renderTableHeader()}\n                    {this.renderTableDataProject()}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          : null}\n\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            <div className=\"col-md-4 animated fadeIn\">\n              <div className=\"card\">\n                {/* <div className=\"btn-align-down\">\n                  <button title=\"Add You Tube Urls\" className=\"my-svg-add\"\n                    onClick={e => {\n                      this.addYoutubeUrl();\n                    }}\n                  >\n                  </button>\n                </div> */}\n                <div>\n                  <h3 className=\"paddi\">Reference Links</h3>\n                  <table id='projects'>\n                    <tbody>\n                      {this.renderTableHeader()}\n                      {this.renderTableDataYoutube()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          this.state.setScreenOpen === 1 ?\n            <div className=\"row\">\n              <div className=\"card-body\">\n                <div className=\"card\">\n                  <div className=\"paddi\"><h3>Project Update</h3></div>\n                  <hr />\n                  <form onSubmit={this.handleUpdateSubmit}>\n                    <ul>\n                      <label className=\"label\" >Details: </label><br />\n                      <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                    <div style={{ padding: '10px 20px 0px 20px' }}>\n                      <span>Select Audio File:</span>\n                      <span style={{ marginBottom: 10 }}>\n                        <input type=\"file\" onChange={this.onChangeFile} />\n                      </span>\n                      <div className=\"up-img\">\n                        {imageUrl &&\n                          <audio controls\n                            autoplay preload=\"auto\"\n                            src={imageUrl}>\n                          </audio>\n                        }\n                      </div>\n                    </div>\n\n                    <div className=\"btn-margin\">\n                      <button className=\"btn-primary btn-small\">\n                        Submit\n                      </button>\n                      <button className=\"btn-primary btn-small\"\n                        onClick={e => {\n                          this.updateCancel();\n                        }}\n                      >Cancel\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            :\n            this.state.setScreenOpen === 2 ?\n              <div className=\"col-xs-2\">\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <form onSubmit={this.handleSubmit}>\n                      <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                      <hr />\n                      <ul>\n                        <label className=\"label\" >Reference Link: </label>\n                        <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                      <div className=\"btn-margin\">\n                        <button type=\"Submit\" className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                        >\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }} onClick={e => { this.updateCancel(); }} >\n                          Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              : null\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default DetailsFormProject;\n","E:\\ui\\src\\pages\\admin\\projects\\Editpage.jsx",["636","637","638"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport './project.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet cname;\nlet lengthdefine\nlet random1\nclass Editpage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: [],\n      url: '',\n      data: [],\n      linkdata: [],\n      custdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(() => {\n      // window.location.reload();\n      this.loadData();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      // window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    let receivedid = this.props.projectId\n    const url = httpUrl + 'project/' + receivedid;\n    fetch(url, { headers })\n    // const endpoint = httpUrl + 'project/` + receivedid;\n    // fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: [json],\n          linkdata: [...json.links],\n        });\n      });\n\n  };\n  customerid() {\n    const url = httpUrl + 'customer/' + this.props.username;\n        axios.get(url)\n    // axios.get(httpUrl +  'customer/' + this.props.username)\n      .then(responce => {\n        this.state.custdata = responce.data\n        cname = responce.data.name\n        console.log(responce.data)\n      });\n  }\n \n  componentDidMount() {\n    this.loadData();\n    this.customerid();\n    // this.updateTable();\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const url = httpUrl + 'project/link/add';\n    fetch(url, requestOptions)\n\n    // const endpoint = httpUrl + 'project/link/add`;\n    // fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n        this.loadData();\n      });\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this data!',\n      type: 'Warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n\n        const url = httpUrl + 'project/' + id;\n        fetch(url, { method: 'DELETE' })\n        // const endpoint = httpUrl + 'project/${id}`;\n        // fetch(endpoint, { method: 'DELETE' })\n          .then(response => response.json())\n          .then(json => {\n            this.opensweetalert(json.Status);\n          });\n        this.loadData();\n        setTimeout(() => {\n          this.loadData();\n        }, 1000);\n        this.setState({ setScreenOpen: 0 });\n      }\n    });\n  }\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects[0].id, ids: [id] })\n    };\n\n    const url = httpUrl + 'project/link/delete';\n    fetch(url, requestOptions)\n\n    // const endpoint = httpUrl + 'project/link/delete`;\n    // fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 1000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '500px' }}>Details</th>\n        <th style={{ width: '350px' }}>video/Audio</th>\n        <th style={{ width: '200px' }}>action</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='100%' height='100px' className=\"youtube\"\n              url={link}>\n            </ReactPlayer>\n          </td>\n          <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    let string = str.replace(/_/g, ' ');\n    return this.toTitles(string);;\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  // updateTable = () => {\n  //   let userId = localStorage.getItem('selectedCustomerID') \n  //   axios.get(httpUrl +  'project?customer=' + userId)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects[0].customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, random1 + '_' + this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects[0].customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects[0].id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const url = httpUrl + 'project/update';\n    fetch(url, requestOptions)\n\n    // const endpoint = httpUrl + 'project/update`;\n    // fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 1000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return this.state.projects.map((project, index) => {\n      const { id, name, projecttype, details, faqs, file, managername, projectprice, paymentstatus, genre } = project\n      return (\n        <tr>\n          <td>\n            <ul><span>Name:</span>{name}</ul>\n            <ul><span>Customer Name:</span>{cname}</ul>\n            <ul><span>Genre:</span>{this.getToTitles(genre)}</ul>\n            <ul><span>Project Type:</span>{this.getToTitles(projecttype)}</ul>\n            <ul><span>Needs Help With:</span>{this.getToTitles(faqs)}</ul>\n            <ul><span>Price Type:</span>{this.getToTitles(projectprice)}</ul>\n            <ul><span>Payment Status:</span>{this.getToTitles(paymentstatus)}</ul>\n            {/* <ul><span>Manager:</span>{managername}</ul> */}\n            <ul><span>Details:</span><li>{this.getToTitles(details)}</li></ul>\n          </td>\n          <td className=\"text-align-center\">\n            <audio controls style={{ width: '100%' }}\n              preload=\"auto\"\n              src={this.state.docServer + file?.docpath}>\n            </audio>\n          </td>\n          <td className=\"text-align-center\">\n            <button title=\"Project Update\" className=\"my-svg-edit\"\n              onClick={e => {\n                this.updateProject();\n              }}\n            >\n            </button>&nbsp;\n            <button title=\"Project Delete\" className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteProject(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            {this.state.projects.map(data => (\n              <div className=\"col-md-4 animated fadeIn\">\n                <div className=\"card\">\n                  <div className=\"btn-align-down\">\n                    <button className=\"btn-small\"\n                      onClick={() => { this.props.Back() }} style={{ color: \"white\" }}\n                    >Back\n                    </button>\n                  </div>\n\n                  <h3 className=\"paddi\">Project Details</h3>\n\n                  <table id='projects'>\n                    <tbody>\n                      {this.renderTableHeader()}\n                      {this.renderTableDataProject()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            ))}\n          </div>\n          : null}\n\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            {this.state.projects.map(data => (\n              <div className=\"col-md-4 animated fadeIn\">\n                <div className=\"card\">\n                  <div className=\"btn-align-down\">\n                    <button className=\"my-svg-add\"\n                      onClick={e => {\n                        this.addYoutubeUrl();\n                      }}\n                    >\n                    </button>\n                  </div>\n                  <div>\n                    <h3 className=\"paddi\">Reference Links</h3>\n                    <table id='projects'>\n                      <tbody>\n                        {this.renderTableHeader()}\n                        {this.renderTableDataYoutube()}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          :\n          this.state.setScreenOpen === 1 ?\n            <div className=\"row\">\n              {this.state.projects.map(data => (\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <div className=\"paddi\"><h3>Project Edit</h3></div>\n                    <hr />\n                    <form onSubmit={this.handleUpdateSubmit}>\n                      <ul>\n                        <label className=\"label\" >Details: </label><br />\n                        <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                      <div style={{ padding: '10px 20px 0px 20px' }}>\n                        <span style={{ float: 'left' }}>Select Audio File:</span>\n                        <span style={{ marginBottom: 10 }}>\n                          <input type=\"file\" onChange={this.onChangeFile} />\n                        </span>\n                        <div className=\"up-img\">\n                          {imageUrl &&\n                            <audio controls\n                              autoplay preload=\"auto\"\n                              src={imageUrl}>\n                            </audio>\n                          }\n                        </div>\n                      </div>\n\n                      <div className=\"btn-margin\">\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}>\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              ))}\n            </div>\n            :\n            this.state.setScreenOpen === 2 ?\n              <div className=\"col-xs-2\">\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <form onSubmit={this.handleSubmit}>\n                      <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                      <hr />\n                      <ul>\n                        <label className=\"label\" >Reference Link: </label>\n                        <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                      <div className=\"btn-margin\">\n                        <button type=\"Submit\" className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </form>\n                    <div className=\"btn-bottom-margin\">\n                      <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                        onClick={e => {\n                          this.updateCancel();\n                        }}\n                      >Cancel\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              : null\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default Editpage;\n","E:\\ui\\src\\pages\\admin\\projects\\project.jsx",["639","640","641"],"import React, { useEffect, useState } from \"react\";\nimport \"./project.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet custname\nexport default function ManageProjects(props) {\n\n    // const [check, setCheck] = useState('');\n    const [data, setData] = useState([]);\n    const [searchterm, setsearchterm] = useState('');\n    // const [pageSelection, setPageSelection] = useState(checked)\n    const { showeditpage, showDetails } = props\n\n\n\n\n\n    const updateTable = () => {\n   \n        axios.get(httpUrl + 'project')\n            .then(responce => {\n                \n                const sorted = responce.data.sort(function(x, y){\n                    return y.addedon - x.addedon;\n                })\n                // setData([...responce.data])\n                setData([...sorted])\n                console.log(\"sorted :\",sorted)\n                if (responce.data[0]) {\n                    custname = responce.data[0].customer;\n                }\n                // alert(responce.data[0].name);\n                // alert('ssss',checked)\n\n\n            });\n    }\n\n\n\n    const showId = (senidd, cusname) => {\n        showeditpage(senidd, cusname)\n    }\n\n    useEffect(() => {\n        updateTable()\n    }, [])\n\n\n\n    function statuschange(id, status) {\n\n        let updateproject = {\n            id: id\n        }\n\n        if (status === \"ACTIVE\") {\n            updateproject.status = \"IN_ACTIVE\"\n            // setPageSelection(2)\n        } else if (status === \"IN_ACTIVE\") {\n            updateproject.status = \"ACTIVE\"\n        } else if (status === \"COMPLETED\") {\n            updateproject.paymentstatus = \"NOT_COMPLETED\"\n        } else if (status = \"NOT_COMPLETED\") {\n            updateproject.paymentstatus = \"COMPLETED\"\n        }\n\n        console.log(\"updateproject\")\n        console.log(updateproject)\n\n\n        axios.post(httpUrl + 'project/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                updateTable()\n            });\n\n\n    }\n\n    function getToTitles(str) {\n        let string = str.replace(/_/g, ' ');\n        return toTitles(string);\n    }\n\n    function toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n    function deleteemployee(id) {\n\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this data!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n                axios.delete(httpUrl + 'project/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        updateTable();\n                        console.log(responce)\n                    });\n\n\n            }\n        });\n    }\n\n    function selectCustomer(id, projectid) {\n        localStorage.setItem(\"selectedCustomerID\", id)\n        showDetails(projectid);\n    }\n\n    function toTitleCase(str) {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\" }} className=\"headerproper\">\n                                <span style={{ float: \"left\" }}>Manage Projects</span></h3>\n                        </div>\n\n                        <div className=\"panel-body\">\n                            <div className=\"table-responsive table-style\">\n                                <table id='projects'>\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Customer</th>\n                                            <th>Project Type</th>\n                                            <th>Genre</th>\n                                            <th>Faqs</th>\n                                            <th>Payment <br />Status</th>\n                                            <th>Project <br />Status</th>\n                                            <th>Action</th>\n                                        </tr>\n\n                                        <tr>\n                                            <th colSpan=\"12\">\n                                                <div className='Search'>\n\n                                                    <input type=\"text\" className=\"inputetype\"\n\n                                                        onChange={(e) => {\n                                                            setsearchterm(e.target.value);\n                                                        }}\n                                                        placeholder=\"Search By Name,Project Type,Genre,Faqs,Customer\" name=\"search\" />\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        <i class=\"fa fa-search\"></i>\n\n                                                    </button>\n\n                                                </div>\n                                            </th>\n                                        </tr>\n\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.filter((val) => {\n                                                if (searchterm === '') {\n                                                    return true;\n\n                                                }\n                                                else if (\n                                                    val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.projecttype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.genre.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.custname.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.faqs.toLowerCase().includes(searchterm.toLowerCase())\n\n\n                                                ) {\n                                                    return true;\n\n                                                }\n                                                else return false\n\n\n                                            }).map(((entry) => (\n                                                <tr key={entry.id}>\n\n                                                    <td>{entry.name}</td>\n                                                    <td>{entry.custname}</td>\n                                                    <td>{getToTitles(entry.projecttype)}</td>\n                                                    <td>{toTitleCase(entry.genre)}</td>\n                                                    <td>{toTitleCase(entry.faqs)}</td>\n                                                    <td>{getToTitles(entry.paymentstatus)}</td>\n                                                    <td>{getToTitles(entry.status)}</td>\n                                                    <td>\n\n\n                                                        {/* <span onClick={() => {showId(entry.id)}} style={{color:\"white\"}}>\n                                                   <button>\n                                                   <i className =\"fa fa-edit\"></i>\n                                                    </button>\n                                                        </span> */}\n\n                                                        {entry.status === \"IN_ACTIVE\" ?\n                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Project Inactive\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-thumbs-down\"></i>\n                                                                </button>\n                                                            </span>\n                                                            :\n                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"project Active\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-thumbs-up\"></i>\n                                                                </button>\n                                                            </span>\n                                                        }\n                                                        &nbsp;\n\n                                                        <span onClick={() => { showId(entry.id, entry.customer) }} title=\"Project Update\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-edit\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n\n                                                        <span onClick={() => { selectCustomer(entry.customer, entry.id) }} title=\"Project Detail\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-info-circle\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n\n                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-times-circle\"></i>\n                                                            </button>\n                                                        </span> */}\n\n                                                        <span onClick={() => { deleteemployee(entry.id) }} title=\"Project Delete\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i class=\"fa fa-trash\"></i>\n                                                            </button>\n                                                        </span>\n\n\n                                                        &nbsp;\n                                                        {entry.paymentstatus === \"NOT_COMPLETED\" ?\n                                                            <span onClick={() => { statuschange(entry.id, entry.paymentstatus) }} title=\"Payment Not Completed\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-money-bill-alt\"></i>\n                                                                </button>\n                                                            </span>\n                                                            :null\n                                                            // <span onClick={() => { statuschange(entry.id, entry.paymentstatus) }} title=\"Project completed\" style={{ color: \"white\" }}>\n                                                            //     <button>\n                                                            //         <i class=\"fa fa-thumbs-up\"></i>\n                                                            //     </button>\n                                                            // </span>\n                                                        }\n\n\n                                                    </td>\n\n                                                </tr>\n                                            )))\n                                        }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            </div >\n        </div>\n\n    )\n}\n","E:\\ui\\src\\pages\\admin\\employee\\Adetails.jsx",["642"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n// import \"./adetails.scss\";\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nexport default function Adetails(props) {\n    const { empid, goBack } = props\n    const [data, setData] = useState({});\n    const docServer = docServerUrl;\n\n    useEffect(() => {\n        const url = httpUrl + 'employee/' + empid;\n        axios.get(url)\n            .then(responce => {\n                setData(responce.data)\n                console.log(responce.data)\n            });\n    }, [empid])\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\" }}>\n                                <span style={{ float: \"left\" }}>Artist Details</span>\n                                <span onClick={() => { goBack() }} style={{ color: \"white\", float: \"right\" }}>\n                                    <button>\n                                        Back\n                                    </button>\n                                </span>\n\n\n\n                            </h3>\n\n\n                        </div>\n\n                        <div className=\"panel-body\">\n                            <div style={{ padding: \"24px\" }}>\n                                <span style={{ fontSize: \"19px\", float: \"left\" }}>\n                                    Personal Details :\n                                </span>\n                            </div>\n\n                            <div className=\"grid-container\">\n\n                                <div className=\"grid-item\">\n                                    Name: <label>{data.name}</label>\n                                </div>\n\n                                <div className=\"grid-item\">\n                                    Email: <label>{data.email}</label>\n                                </div>\n\n                                <div className=\"grid-item\">\n                                    Phone: <label>{data.phone}</label>\n                                </div>\n\n                                <div className=\"grid-item\">\n                                    City: <label>{data.city}</label>\n                                </div>\n                                {\n                                    data.login ?\n                                        (\n                                            <div className=\"grid-item\">\n                                                Signup Type: <label>{data.login.signuptype}</label>\n                                            </div>\n                                        )\n                                        : null\n                                }\n                                <div className=\"grid-item\">\n                                    Status: <label>{data.status}</label>\n                                </div>\n                            </div>\n\n                            <div className=\"grid-container\">\n                                {\n                                    data.photo ?\n                                        (\n                                            <div className=\"grid-item\">\n                                                <img style={{ height: \"100px\", width: \"100px\" }} src={docServer + data.photo?.docpath} />\n                                            </div>\n                                        )\n                                        : null\n                                }\n                            </div>\n\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n}\n","E:\\ui\\src\\pages\\admin\\employee\\Editemp.jsx",["643","644","645","646","647"],"import axios from 'axios';\nimport React from 'react';\n// import React, { useState } from \"react\";\nimport './addemployee.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet photo\nlet statuschange;\nclass Editemp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            handleResponse: null,\n            imageUrl: null,\n            docServer: docServerUrl,\n            data: [],\n            empStatus: \"\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updatedata = this.updatedata.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n\n\n    };\n\n    // loadData = () => {\n    //     let userid=this.props.empid\n    //     const endpoint = httpUrl + 'employee/${userid}`;\n    //     fetch(endpoint)\n    //       .then(response => response.json())\n    //       .then(json => {\n    //         this.setState({\n    //           data: [{ ...json }],\n    //           scrolling: false,\n    //         });\n    //       });\n    //   };\n\n\n\n    componentDidMount() {\n        this.initfun();\n    }\n\n    initfun = () => {\n        let userid = this.props.empid\n        const url = httpUrl + 'employee/' + userid;\n        axios.get(url)\n            .then(responce => {\n                this.setState({\n                    data: responce.data,\n                    scrolling: false,\n                    empStatus: responce.data.status\n                });\n                statuschange = responce.data.status;\n\n                console.log('status', responce.data.status);\n\n            });\n    }\n\n\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n        console.log(this.state)\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            empStatus: value\n        })\n        this.state.fields.status = value\n    }\n\n\n\n    updatedata(e) {\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            status: \"\",\n            password: \"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n\n\n        let projectdata = {\n            id: this.props.empid,\n            name: this.state.fields.name,\n            phone: this.state.fields.phone,\n            designation: \"Manager\",\n            email: this.state.fields.email,\n            city: this.state.fields.city,\n            status: this.state.fields.status,\n            photo: {}\n\n        }\n        projectdata.photo = this.state.photo\n        axios.post(httpUrl + 'employee/update', projectdata)\n            .then(responce => {\n                // this.state.fields = fields\n                this.setState({\n                    fields: fields\n                })\n                this.handleUpload()\n                console.log(responce.data)\n            });\n        Swal.fire({\n            icon: 'success',\n            title: 'Updated',\n            showConfirmButton: false,\n            timer: 1500\n        })\n        this.props.goBack()\n\n\n    }\n\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'Profile',\n                    docpath: \"Employee/\" + this.props.empid + '/' + event.target.files[0].name,\n                    urllink: ''\n                }\n            });\n        }\n    }\n    handleUpload = () => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"Employee/\" + this.props.empid);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n\n    validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if (!fields[\"name\"]) {\n            formIsValid = false;\n            errors[\"name\"] = \"*Please enter your username.\";\n        }\n\n        if (typeof fields[\"name\"] !== \"undefined\") {\n            if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"*Please enter alphabet characters only.\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"*Please enter your email-ID.\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(fields[\"emailid\"])) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Please enter valid email-ID.\";\n            }\n        }\n\n        if (!fields[\"phone\"]) {\n            formIsValid = false;\n            errors[\"phone\"] = \"*Please enter your mobile no.\";\n        }\n\n        if (typeof fields[\"phone\"] !== \"undefined\") {\n            if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"phone\"] = \"*Please enter valid mobile no.\";\n            }\n        }\n\n        if (!fields[\"password\"]) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"password\"] !== \"undefined\") {\n            if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return formIsValid;\n\n\n    }\n\n\n\n    render() {\n        const { imageUrl } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Edit Artist Manager</span>\n                                </h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\" className='textstyle' name=\"name\" id=\"name\" defaultValue={this.state.data.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Phone</label>\n                                                    <input type=\"number\" className='textstyle' id=\"phone\" name=\"phone\" defaultValue={this.state.data.phone} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>City</label>\n                                                    <input type=\"text\" className='textstyle' name=\"city\" id=\"city\" defaultValue={this.state.data.city} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Email</label>\n                                                    <input type=\"text\" className='textstyle' name=\"email\" id=\"email\" readOnly value={this.state.data.email} onChange={this.handleChange} />\n                                                </div>\n                                            </div>\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"-41px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Status</label>\n                                                    <select name='status' value={this.state.empStatus} onChange={this.handleStatusChange} id=\"status\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        {/* <option value=\"0\">select</option> */}\n                                                        <option value=\"ACTIVE\">ACTIVE</option>\n                                                        <option value=\"IN_ACTIVE\">INACTIVE</option>\n                                                    </select>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Photo</label>\n                                                    <img style={{ height: \"200px\", width: \"200px\" }}\n                                                        src={this.state.docServer + this.state.data.photo?.docpath}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"185px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Update\n                                                    </button>\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Editemp;\n","E:\\ui\\src\\pages\\admin\\employee\\Addemployee.jsx",["648","649"],"import axios from 'axios';\nimport React from 'react';\nimport './addemployee.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl } from '../../../restservice'\n\nlet custid = 0;\nclass Addemployee extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            handleResponse: null,\n            imageUrl: null,\n            setemployeescreen: 0\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n\n    }\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'Profile',\n                    docpath: \"Employee/\" + event.target.files[0].name,\n                    urllink: ''\n                }\n            });\n        }\n    }\n\n\n\n\n    submituserRegistrationForm(e) {\n\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            password: \"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n\n\n        let projectdata = {\n            name: this.state.fields.name,\n            phone: this.state.fields.phone,\n            designation: \"Manager\",\n            email: this.state.fields.email,\n            city: this.state.fields.city,\n            status: 'ACTIVE',\n            login: {\n                email: this.state.fields.email,\n                password: this.state.fields.password,\n                type: \"ARTIST_MANAGER\",\n                signuptype: \"EMAIL\",\n            }\n\n\n        }\n        projectdata.login.email = projectdata.email\n        projectdata.login.password = btoa(projectdata.login.password)\n\n        axios.post(httpUrl + 'employee', projectdata)\n            .then(responce => {\n                // this.state.fields = fields\n                this.setState({\n                    fields: fields\n\n                })\n                custid = responce.data.id\n                console.log('idd')\n                console.log(custid)\n                this.handleUpload(custid)\n                console.log(responce.data)\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.props.goBack()\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate Employee\",\n                });\n            })\n\n\n\n    }\n\n\n    handleUpload = (custid) => {\n        console.log('custid')\n        console.log(custid)\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"Employee/\" + custid);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.updateEmployee(custid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    updateEmployee(empId) {\n        let updateAbleData = {\n            id: empId,\n            photo: {\n                docname: this.state.selectedFile.name,\n                doctype: 'Profile',\n                docpath: \"Employee/\" + empId + \"/\" + this.state.selectedFile.name,\n                urllink: ''\n            }\n        }\n\n        axios.post(httpUrl + 'employee/update', updateAbleData)\n            .then(responce => {\n                // this.state.fields = fields \n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate User\",\n                });\n\n\n            })\n    }\n\n    validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if (!fields[\"name\"]) {\n            formIsValid = false;\n            errors[\"name\"] = \"*Please enter your username.\";\n        }\n\n        if (typeof fields[\"name\"] !== \"undefined\") {\n            if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"*Please enter alphabet characters only.\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"*Please enter your email-ID.\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(fields[\"emailid\"])) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Please enter valid email-ID.\";\n            }\n        }\n\n        if (!fields[\"phone\"]) {\n            formIsValid = false;\n            errors[\"phone\"] = \"*Please enter your mobile no.\";\n        }\n\n        if (typeof fields[\"phone\"] !== \"undefined\") {\n            if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"phone\"] = \"*Please enter valid mobile no.\";\n            }\n        }\n\n        if (!fields[\"password\"]) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"password\"] !== \"undefined\") {\n            if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return formIsValid;\n\n\n    }\n\n\n\n    render() {\n        const { imageUrl } = this.state;\n        return (\n\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Add Artist Manager</span></h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.submituserRegistrationForm} >\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Name</p>\n                                                    <input type=\"text\" name=\"name\" className='textstyle' required value={this.state.fields.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Phone</p>\n                                                    <input type=\"number\" className='textstyle' required name=\"phone\" value={this.state.fields.phone} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>City</p>\n                                                    <input type=\"text\" className='textstyle' required name=\"city\" value={this.state.fields.city} onChange={this.handleChange} />\n                                                </div>\n                                                {/* <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Designation</label>\n                                                    <input type=\"text\" name=\"designation\" value={this.state.fields.designation} onChange={this.handleChange} />\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                        {/* <h3>Login Details</h3> */}\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Email</p>\n                                                    <input type=\"text\" className='textstyle' required name=\"email\" value={this.state.fields.Email} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <p style={{ textAlign: \"left\", marginBottom: \"8px\" }}>Password</p>\n                                                    <input type=\"password\" className='textstyle' required name=\"password\" value={this.state.fields.password} onChange={this.handleChange} />\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" className='textstyle' required required onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"185px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Submit\n                                                    </button>\n                                                </div>\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Addemployee;\n","E:\\ui\\src\\pages\\admin\\employee\\employee.jsx",[],"E:\\ui\\src\\pages\\admin\\dashboard\\dashboard.jsx",["650","651","652"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./dashboard.scss\"\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, LineElement, ArcElement } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Doughnut } from 'react-chartjs-2';\nimport { httpUrl } from '../../../restservice'\n\nexport default function AdminDashboard() {\n\n    const [totalData, setTotalData] = useState([]);\n    const [monthData, setMonthData] = useState([]);\n    const [userData, setUseData] = useState([]);\n    const [projectType, setProjectType] = useState([]);\n    const [projectGenre, setProjectGenre] = useState([]);\n    const [projectFaqs, setProjectFaqs] = useState([]);\n\n    const [totalTracks, setTracks] = useState([]);\n    const [monthTracks, setMonthTracks] = useState([]);\n    const [statusTrack, setStatusTrack] = useState([]);\n    const [armTrack, setArmTrack] = useState([]);\n    const [typeTrack, setTypeTrack] = useState([]);\n    const [genreTrack, setGenreTrack] = useState([]);\n\n\n    ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        BarElement,\n        LineElement,\n        ArcElement,\n        Title,\n        Tooltip,\n        Legend\n    );\n\n    useEffect(() => {\n\n        axios.get(httpUrl + 'stats/summery')\n            .then(responce => {\n                setTotalData([{ ...responce?.data }])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/project/monthly')\n            .then(responce => {\n                setMonthData([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/customer/monthly')\n            .then(responce => {\n                setUseData([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/chart?type=PROJECTTYPE')\n            .then(responce => {\n                setProjectType([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/chart?type=PROJECTGENRE')\n            .then(responce => {\n                setProjectGenre([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/chart?type=PROJECTFAQS')\n            .then(responce => {\n                setProjectFaqs([...responce?.data])\n                console.log(responce.data)\n            });\n        //sales\n\n        axios.get(httpUrl + 'stats/track/summery')\n            .then(responce => {\n                setTracks([{ ...responce?.data }])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/track/monthly')\n            .then(responce => {\n                setMonthTracks([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/track/chart?type=STATUS')\n            .then(responce => {\n                setStatusTrack([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/track/chart?type=ARM')\n            .then(responce => {\n                setArmTrack([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/track/chart?type=TRACK')\n            .then(responce => {\n                setTypeTrack([...responce?.data])\n                console.log(responce.data)\n            });\n\n        axios.get(httpUrl + 'stats/track/chart?type=GENRE')\n            .then(responce => {\n                setGenreTrack([...responce?.data])\n                console.log(responce.data)\n            });\n    }, [])\n\n    function getToTitles(str) {\n        let string = str.replace(/_/g, ' ');\n        return toTitles(string);;\n    }\n\n    function toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n    function subString(s) {\n        var Str = s.substr(0, 3);\n        return Str;\n    }\n\n    function renderTableHeader() {\n        return (\n            <tr>\n                <th style={{ width: '50%' }}>Details</th>\n                <th style={{ width: '50%' }}>video/Audio</th>\n            </tr>\n        )\n    };\n\n    function renderTableDataProject() {\n        return totalData.map((project, index) => {\n            const { totalProject, totalActive, totalInactive, totalUser, totalAM, todayProject, currentmonthProject, lastmonthProject } = project\n            return (\n                <tr key={index}>\n                    <td>\n                        <ul><span>Total Project:</span></ul>\n                        <ul><span>Active Project:</span></ul>\n                        <ul><span>Inactive Project:</span></ul>\n                        <ul><span>Total User:</span></ul>\n                        <ul><span>Total Artist Manager:</span></ul>\n                        <ul><span>Today's Project:</span></ul>\n                        <ul><span>Current Month Project:</span></ul>\n                        <ul><span>Last Month Project:</span></ul>\n                    </td>\n                    <td className=\"text-align-center\">\n                        <ul>{totalProject}</ul>\n                        <ul>{totalActive}</ul>\n                        <ul>{totalInactive}</ul>\n                        <ul>{totalUser}</ul>\n                        <ul>{totalAM}</ul>\n                        <ul>{todayProject}</ul>\n                        <ul>{currentmonthProject}</ul>\n                        <ul>{lastmonthProject}</ul>\n                    </td>\n                </tr>\n            )\n        })\n    };\n\n    function renderTableDataTotalTracks() {\n        return totalTracks.map((tracks, index) => {\n            const { totalTracks, totalSold, totalPublished, totalSubmitted, todays, currentmonth, lastmonth, lastmonthGST } = tracks\n            return (\n                <tr key={index}>\n                    <td>\n                        <ul><span>Total Tracks:</span></ul>\n                        <ul><span>Total Sold:</span></ul>\n                        <ul><span>Total Published:</span></ul>\n                        <ul><span>Total Submitted:</span></ul>\n                        <ul><span>Todays:</span></ul>\n                        <ul><span>Current Month:</span></ul>\n                        <ul><span>Last Month:</span></ul>\n                        <ul><span>Last Month GST:</span></ul>\n                    </td>\n                    <td className=\"text-align-center\">\n                        <ul>{totalTracks}</ul>\n                        <ul>{totalSold}</ul>\n                        <ul>{totalPublished}</ul>\n                        <ul>{totalSubmitted}</ul>\n                        <ul>{todays}</ul>\n                        <ul>{currentmonth}</ul>\n                        <ul>{lastmonth}</ul>\n                        <ul>{lastmonthGST}</ul>\n                    </td>\n                </tr>\n            )\n        })\n    };\n\n    function renderTableDataProjectType() {\n        const label2 = projectType.map(point => getToTitles(point.name))\n        const projdata = projectType.map(point => point.count)\n        const colordata = [\"#0B1354\", \"#165BAA\", \"#A155B9\", \"#F765A3\", \"#FFA4B6\", \"#F9D1D1\"]\n        return (\n\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label2,\n                        datasets: [{\n                            label: \"Total Type\",\n                            data: projdata,\n                            backgroundColor: colordata,\n                            borderColor: [\"#fff\"],\n                            fill: false,\n                            lineTension: 0.4\n                        }]\n                    }} />\n            </div>\n\n        )\n    };\n\n    function renderTableDataProjectGenre() {\n        const label3 = projectGenre.map(point => getToTitles(point.name))\n        const gendata = projectGenre.map(point => point.count)\n        const colordata = [\"#F9D1D1\", \"#FFA4B6\", \"#F765A3\", \"#A155B9\", \"#165BAA\", \"#OB1354\"]\n        return (\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label3,\n                        datasets: [{\n                            label: \"Total Genre\",\n                            data: gendata,\n                            backgroundColor: colordata,\n                            borderColor: [\"#fff\"],\n                            fill: false,\n                            lineTension: 0.4\n                        }]\n                    }} />\n            </div>\n        )\n        // })\n    };\n\n    function renderTableDataProjectFaqs() {\n        const label1 = projectFaqs.map(point => getToTitles(point.name))\n        const faqsdata = projectFaqs.map(point => point.count)\n        const colordata = [\"#F9D1D1\", \"#FFA4B6\", \"#F765A3\", \"#A155B9\", \"#165BAA\", \"#OB1354\"]\n        return (\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label1,\n                        datasets: [\n                            {\n                                label: \"Total Help\",\n                                data: faqsdata,\n                                backgroundColor: colordata,\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n    };\n\n    function renderTableDataMonth() {\n        const label4 = monthData.map(point => subString(point.month) + '-' + point.year)\n        const monthdata = monthData.map(point => point.count);\n        const options = {\n            title: {\n                display: true,\n                text: 'Chart.js Bar Chart',\n                color: '#9de219'\n            },\n        }\n        return (\n            // <tr>\n            //     <td>\n            //         <ul><span>Total count:</span>{count}</ul>\n            //         <ul><span>Total month:</span>{month}</ul>\n            //         <ul><span>Total monthNo:</span>{monthNo}</ul>\n            //         <ul><span>Total qvalue:</span>{qvalue}</ul>\n            //         <ul><span>Total year:</span>{year}</ul>\n            //     </td>\n            // </tr>\n\n            <div style={{ maxWidth: \"650px\" }}>\n                <Bar\n                    data={{\n                        labels: label4,\n                        datasets: [\n                            {\n                                label: \"Total Projects \",\n                                data: monthdata,\n                                backgroundColor: [\"#F765A3\"],\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n        // })\n    };\n\n    function renderTableDataINMonthUser() {\n        const label4 = userData.map(point => subString(point.month) + '-' + point.year)\n        const monthdata = userData.map(point => point.count);\n        return (\n            <div style={{ maxWidth: \"650px\" }}>\n                <Bar\n                    data={{\n                        labels: label4,\n                        datasets: [\n                            {\n                                label: \"Total Users\",\n                                data: monthdata,\n                                backgroundColor: [\"#165BAA\"],\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n    }\n\n    function renderTableDataMonthTracks() {\n        const label4 = monthTracks.map(point => subString(point.month) + '-' + point.year)\n        const monthdata = monthData.map(point => point.count);\n        const options = {\n            title: {\n                display: true,\n                text: 'Chart.js Bar Chart',\n                color: '#9de219'\n            },\n        }\n        return (\n\n            <div style={{ maxWidth: \"650px\" }}>\n                <Bar\n                    data={{\n                        labels: label4,\n                        datasets: [\n                            {\n                                label: \"Total Projects \",\n                                data: monthdata,\n                                backgroundColor: [\"#F765A3\"],\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n        // })\n    };\n\n    function renderTableDataTrackStatus() {\n        const label1 = statusTrack.map(point => getToTitles(point.name))\n        const faqsdata = statusTrack.map(point => point.count)\n        const colordata = [\"#F9D1D1\", \"#FFA4B6\", \"#F765A3\", \"#A155B9\", \"#165BAA\", \"#OB1354\"]\n        return (\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label1,\n                        datasets: [\n                            {\n                                label: \"Total Help\",\n                                data: faqsdata,\n                                backgroundColor: colordata,\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n    }\n\n    function renderTableDataTracks() {\n        const label1 = typeTrack.map(point => getToTitles(point.name))\n        const faqsdata = typeTrack.map(point => point.count)\n        const colordata = [\"#F9D1D1\", \"#FFA4B6\", \"#F765A3\", \"#A155B9\", \"#165BAA\", \"#OB1354\"]\n        return (\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label1,\n                        datasets: [\n                            {\n                                label: \"Total Help\",\n                                data: faqsdata,\n                                backgroundColor: colordata,\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n    };\n\n    function renderTableDataTracksArm() {\n        const label1 = armTrack.map(point => getToTitles(point.name))\n        const faqsdata = armTrack.map(point => point.count)\n        const colordata = [\"#F9D1D1\", \"#FFA4B6\", \"#F765A3\", \"#A155B9\", \"#165BAA\", \"#OB1354\"]\n        return (\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label1,\n                        datasets: [\n                            {\n                                label: \"Total Help\",\n                                data: faqsdata,\n                                backgroundColor: colordata,\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n    }\n\n    function renderTableDataTracksGenre() {\n        const label1 = genreTrack.map(point => getToTitles(point.name))\n        const faqsdata = genreTrack.map(point => point.count)\n        const colordata = [\"#F9D1D1\", \"#FFA4B6\", \"#F765A3\", \"#A155B9\", \"#165BAA\", \"#OB1354\"]\n        return (\n            <div style={{ maxWidth: \"300px\" }}>\n                <Doughnut\n                    data={{\n                        labels: label1,\n                        datasets: [\n                            {\n                                label: \"Total Help\",\n                                data: faqsdata,\n                                backgroundColor: colordata,\n                                borderColor: [\"#fff\"],\n                                borderWidth: 0.5,\n                            },\n                        ]\n                    }}\n\n                />\n            </div>\n        )\n    };\n\n    return (\n        <div className=\"dashboardPage\">\n            <h1>Dashboard</h1>\n            <div className=\"row\">\n                <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"col-md-5 dashpadding\">\n                        <div className=\"dashcard\">\n                            <h3 className=\"padding\">Choira Summary</h3>\n                            <table id='dashboardPage'>\n                                <tbody>\n                                    {renderTableDataProject()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"col-md-5 dashpadding\">\n                        <div className=\"dashcard\">\n                            <h3 className=\"padding\">Project Faqs Summary</h3>\n                            <table id='dashboardPage'>\n                                <tbody>\n                                    {renderTableDataProjectFaqs()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"col-md-5 dashpadding\">\n                        <div className=\"dashcard\">\n                            <h3 className=\"padding\">Project Type Summary</h3>\n                            <table id='dashboardPage'>\n                                <tbody>\n                                    {renderTableDataProjectType()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"col-md-5 dashpadding\">\n                        <div className=\"dashcard\">\n                            <h3 className=\"padding\">Project Genre Summary</h3>\n                            <table id='dashboardPage'>\n                                <tbody>\n                                    {renderTableDataProjectGenre()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Per Month Projects Count</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataMonth()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Per Month User Count</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataINMonthUser()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            {/* sales */}\n            <div className=\"row\">\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Choira Tracks Summary</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataTotalTracks()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Status Type Tracks Summary</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataTrackStatus()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Tracks ARM Summary</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataTracksArm()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Tracks Summary</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataTracks()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Tracks Genre Summary</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataTracksGenre()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"col-md-5 dashpadding\">\n                    <div className=\"dashcard\">\n                        <h3 className=\"padding\">Per Month Tracks Count</h3>\n                        <table id='dashboardPage'>\n                            <tbody>\n                                {renderTableDataMonthTracks()}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n        </div >\n\n    )\n}","E:\\ui\\src\\pages\\admin\\genre\\managegenre.jsx",["653"],"import React, { useEffect, useState } from \"react\";\nimport \"./genre.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { httpUrl } from '../../../restservice'\n\n\nexport default function Managegenre(props) {\n\n    const [data, setData] = useState([]);\n    const [searchterm, setsearchterm] = useState('');\n    const [pageSelection, setPageSelection] = useState(1)\n    const { showaddgenre } = props\n    const { showEditgenre } = props\n\n    useEffect(() => {\n        loadData()\n\n\n    }, [])\n\n    const Addgen = () => {\n        showaddgenre()\n    }\n\n    const editgenre = (sendableid) => {\n        showEditgenre(sendableid)\n    }\n\n\n\n    const loadData = () => {\n        axios.get(httpUrl + 'genre')\n            .then(response => {\n                setData([...response.data])\n                console.log(response.data[0])\n\n            });\n    }\n\n\n\n    //    alert(managerid)\n    function deleteemployee(id) {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this Genre data!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n                axios.delete(httpUrl + 'genre/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        console.log(responce)\n                        loadData()\n                    });\n\n\n            }\n        });\n    }\n\n\n\n    function getToTitles(str) {\n        if (str) {\n            let string = str.replace(/_/g, ' ');\n            return toTitles(string);\n        }\n    }\n\n    function toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n\n    return (\n        <div>\n            {pageSelection === 1 ?\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Manage Genre</span>\n                                        <span style={{ float: \"right\", cursor: \"pointer\" }} title=\"Add Genre\" onClick={() => { Addgen() }} >\n                                            <i className=\"fa fa-plus\"></i></span>\n\n                                    </h3>\n                                </div>\n\n                                <div className=\"panel-body\">\n                                    <div className=\"table-responsive table-style\">\n                                        <table id=\"projects\">\n                                            <thead>\n                                                <tr>\n                                                    <th >Name</th>\n\n                                                    <th >Action</th>\n                                                </tr>\n\n                                                <tr>\n                                                    <th colSpan=\"12\">\n                                                        <div className='Search'>\n\n                                                            <input type=\"text\" className=\"inputetype\"\n\n                                                                onChange={(e) => {\n                                                                    setsearchterm(e.target.value);\n                                                                }}\n                                                                placeholder=\"Search\" name=\"search\" />\n                                                            <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                <i className=\"fa fa-search\"></i>\n\n                                                            </button>\n\n                                                        </div>\n                                                    </th>\n                                                </tr>\n\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    data.filter((val) => {\n                                                        if (searchterm === '') {\n                                                            return true;\n\n                                                        }\n                                                        else if (\n                                                            val.genre.toLowerCase().includes(searchterm.toLowerCase())\n                                                        ) {\n                                                            return true;\n\n                                                        }\n                                                        else return false\n\n\n                                                    }).map(((entry) => (\n                                                        <tr key={entry.id}>\n\n                                                            <td>{getToTitles(entry.genre)}</td>\n                                                            <td style={{ textAlign: \"right\" }}>\n\n\n\n                                                                <span title=\"Genre Update\" style={{ color: \"white\" }} onClick={() => { editgenre(entry.id) }}>\n                                                                    <button>\n                                                                        <i className=\"fa fa-edit\"></i>\n                                                                    </button>\n                                                                </span>\n                                                                &nbsp;\n                                                                &nbsp;\n\n\n\n                                                                <span onClick={() => { deleteemployee(entry.id) }} title=\"Genre Delete\" style={{ color: \"white\" }}>\n                                                                    <button>\n                                                                        <i className=\"fa fa-trash\"></i>\n\n                                                                    </button>\n                                                                </span>\n\n\n                                                            </td>\n\n                                                        </tr>\n                                                    )))\n                                                }\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div >\n                </div >\n\n                : null}\n\n\n\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\admin\\genre\\Editgenre.jsx",["654","655"],"import axios from 'axios';\nimport React from 'react';\nimport './genre.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nclass Editgenre extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            photo: {},\n            selectedFile: null,\n            handleResponse: null,\n            imageUrl: null,\n            genrestatus: \"\",\n            docServer: docServerUrl,\n            data: []\n\n        }\n\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    componentDidMount() {\n        this.initfun();\n    }\n\n    initfun = () => {\n        let genreid = this.props.genreid\n        axios.get(httpUrl + 'genre/' + genreid)\n            .then(responce => {\n                this.setState({\n                    data: responce.data,\n                    scrolling: false,\n                    genrestatus: responce.data.genre\n                });\n\n                console.log('status', responce.data.status);\n\n            });\n    }\n\n\n\n\n\n\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'genre',\n                    docpath: \"genre/\" + this.props.genreid + '/' + event.target.files[0].name,\n                    docdesc: \"genre photo\"\n                }\n            });\n        }\n    }\n\n    handleUpload = () => {\n        let genreid = this.props.genreid\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"genre/\" + genreid);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    submituserRegistrationForm(e) {\n        e.preventDefault();\n        let genreid = this.props.genreid\n        let updateAbleData = {\n            id: genreid,\n            genre: this.state.genrestatus,\n            photo: {}\n        }\n        updateAbleData.photo = this.state.photo\n        axios.post(httpUrl + 'genre/update', updateAbleData)\n            .then(responce => {\n                // this.state.fields = fields \n                Swal.fire({\n                    icon: 'success',\n                    title: 'Updated',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.handleUpload()\n                this.props.Backgenre()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate Genre\",\n                });\n\n\n            })\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            genrestatus: value\n        })\n    }\n\n    render() {\n        const { imageUrl } = this.state;\n        return (\n            <div>\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n\n                                    <span>\n                                        <h3 style={{ color: \"#ffc701\" }}>\n                                            <span style={{ float: \"left\" }}>Edit Genre</span></h3>\n                                    </span>\n                                </div>\n\n\n                                <div className=\"panel-body\">\n                                    <div className=\"table-responsive table-style\">\n                                        <form method=\"post\" name=\"genredit\" onSubmit={this.submituserRegistrationForm}>\n                                            <div>\n                                                <div >\n                                                    <div style={{ marginTop: \"8px\" }} className='genestyle'>\n                                                        <p style={{ fontSize: \"19px\", marginBottom: \"9px\", textAlign: \"left\" }}>Select</p>\n                                                        <select id=\"dropdown\" name=\"id\" value={this.state.genrestatus} onChange={this.handleStatusChange} style={{ width: \"100%\", padding: \"14px\", borderRadius: \"12px\" }}>\n                                                            <option value=\"HIP_HOP\">HIP HOP</option>\n                                                            <option value=\"BOLLYWOOD\">BOLLYWOOD</option>\n                                                            <option value=\"POP\">POP</option>\n                                                            <option value=\"HIP_POP\">HIP POP</option>\n                                                            <option value=\"BOLLYWOOD_POP\">BOLLYWOOD POP</option>\n                                                            <option value=\"INDIE_POP\">INDIE POP</option>\n                                                            <option value=\"ROCK\">ROCK</option>\n                                                            <option value=\"SUFI\">SUFI</option>\n                                                            <option value=\"LOFI\">LOFI</option>\n                                                            <option value=\"COUNTRY\">COUNTRY</option>\n                                                            <option value=\"EDM\">EDM</option>\n                                                            <option value=\"INDIAN_CLASSICAL\">INDIAN CLASSICAL</option>\n                                                        </select>\n                                                    </div>\n                                                </div >\n\n                                            </div>\n\n                                            <div className=\"row\">\n\n                                                <div className=\"column\" >\n                                                    <div style={{ marginTop: \"8px\" }}>\n                                                        <label style={{ float: \"left\", marginBottom: \"8px\" }}>Photo</label>\n                                                        <img style={{ height: \"200px\", width: \"200px\" }}\n                                                            src={this.state.docServer + this.state.data.photo?.docpath}\n                                                            className=\"card-img-top\"\n\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"column\" >\n                                                    <div style={{ marginTop: \"8px\" }}>\n                                                        <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                        <input type=\"file\" className='textstyle' onChange={this.onChangeFile} />\n                                                    </div>\n\n                                                </div >\n\n                                                <div className=\"column\" >\n                                                    <div style={{ marginTop: \"8px\" }}>\n                                                        <img style={{ height: \"185px\", width: \"175px\" }}\n                                                            src={imageUrl}\n                                                            className=\"card-img-top\"\n\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div style={{ margin: \"15px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Update\n                                                    </button>\n                                                </div>\n\n                                                <div style={{ margin: \"15px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.Backgenre() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Editgenre;\n","E:\\ui\\src\\pages\\admin\\genre\\Addgenre.jsx",["656"],"import axios from 'axios';\nimport React from 'react';\nimport './genre.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl } from '../../../restservice'\n\nlet genreid\nclass Addgenre extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            photo: {},\n            selectedFile: null,\n            handleResponse: null,\n            imageUrl: null,\n            setemployeescreen: 0,\n            genrestatus: \"\"\n\n        }\n\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n\n\n\n\n    submituserRegistrationForm(e) {\n\n        e.preventDefault();\n\n        console.log(\"this.state.genrestatus\")\n        console.log(this.state.genrestatus)\n\n\n        let projectdata = {\n            genre: this.state.genrestatus\n\n        }\n\n        axios.post(httpUrl + 'genre', projectdata)\n            .then(responce => {\n                // this.state.fields = fields\n                genreid = responce.data.id\n                this.handleUpload(genreid);\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.props.Backgenre()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate Genre\",\n                });\n\n\n            })\n    }\n\n\n\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'genre',\n                    docpath: \"genre/\" + event.target.files[0].name,\n                    docdesc: \"genre photo\"\n                }\n            });\n        }\n    }\n\n    handleUpload = (genreid) => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"genre/\" + genreid);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.updateCustomer(genreid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    updateCustomer(genreid) {\n        let updateAbleData = {\n            id: genreid,\n            photo: {\n                docname: this.state.selectedFile.name,\n                doctype: 'genre',\n                docpath: \"genre/\" + genreid + \"/\" + this.state.selectedFile.name,\n                docdesc: \"genre photo\",\n            }\n        }\n\n        axios.post(httpUrl + 'genre/update', updateAbleData)\n            .then(responce => {\n                // this.state.fields = fields \n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.props.Backgenre()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate User\",\n                });\n\n\n            })\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            genrestatus: value\n        })\n    }\n\n    render() {\n        const { imageUrl } = this.state;\n        return (\n            <div>\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n\n                                    <span>\n                                        <h3 style={{ color: \"#ffc701\" }}>\n                                            <span style={{ float: \"left\" }}>Add Genre</span></h3>\n                                    </span>\n                                </div>\n\n\n                                <div className=\"panel-body\">\n                                    <div className=\"table-responsive table-style\">\n                                        <form method=\"post\" name=\"genreadd\" onSubmit={this.submituserRegistrationForm}>\n                                            <div>\n                                                <div>\n                                                    <div style={{ marginTop: \"8px\" }} className='genestyle'>\n                                                        <p style={{ fontSize: \"19px\", marginBottom: \"9px\", textAlign: \"left\" }}>Select Genre Type</p>\n                                                        <select id=\"dropdown\" name=\"id\" value={this.state.genrestatus} onChange={this.handleStatusChange} style={{ width: \"100%\", padding: \"14px\", borderRadius: \"12px\" }}>\n                                                            <option value=\"0\">Select Genre</option>\n                                                            <option value=\"HIP_HOP\">HIP HOP</option>\n                                                            <option value=\"BOLLYWOOD\">BOLLYWOOD</option>\n                                                            <option value=\"POP\">POP</option>\n                                                            <option value=\"HIP_POP\">HIP POP</option>\n                                                            <option value=\"BOLLYWOOD_POP\">BOLLYWOOD POP</option>\n                                                            <option value=\"INDIE_POP\">INDIE POP</option>\n                                                            <option value=\"ROCK\">ROCK</option>\n                                                            <option value=\"SUFI\">SUFI</option>\n                                                            <option value=\"LOFI\">LOFI</option>\n                                                            <option value=\"COUNTRY\">COUNTRY</option>\n                                                            <option value=\"EDM\">EDM</option>\n                                                            <option value=\"INDIAN_CLASSICAL\">INDIAN CLASSICAL</option>\n                                                        </select>\n                                                    </div>\n                                                </div >\n\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"column\" >\n                                                    <div style={{ marginTop: \"8px\" }}>\n                                                        <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                        <input type=\"file\" className='textstyle' onChange={this.onChangeFile} />\n                                                    </div>\n\n                                                </div >\n\n                                                <div className=\"column\" >\n                                                    <div style={{ marginTop: \"8px\" }}>\n                                                        <img style={{ height: \"185px\", width: \"175px\" }}\n                                                            src={imageUrl}\n                                                            className=\"card-img-top\"\n\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div style={{ margin: \"15px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Submit\n                                                    </button>\n                                                </div>\n\n                                                <div style={{ margin: \"15px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.Backgenre() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Addgenre;\n","E:\\ui\\src\\pages\\admin\\tracks\\Editpage.jsx",["657","658"],"import axios from 'axios';\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport './addtrack.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\n// let trackid\nlet uploadedby = JSON.parse(localStorage.getItem(\"userData\")).name;\nlet rname = Math.random().toString(36).substring(7) + new Date().getTime();\nclass Edittrack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fields: {},\n      photo: {},\n      selectedImage: null,\n      selectedAudio: null,\n      handleResponse: null,\n      imageUrl: null,\n      track: {},\n      data: {},\n      projectid: \"\",\n      projectvalue: [],\n      imageUrl1: null,\n      docServer: docServerUrl,\n      tracktypess: \"\",\n      // statustrack:\"SUBMITTED\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.updatedata = this.updatedata.bind(this);\n    this.handleStatusChange = this.handleStatusChange.bind(this)\n    this.handletrackstatus = this.handletrackstatus.bind(this)\n\n\n  };\n\n  componentDidMount() {\n    this.getdata();\n    this.getdatabyid();\n  }\n\n  getdatabyid = () => {\n    let getbyidtrack = this.props.trackId\n    axios.get(httpUrl +  'soundTrack/' + getbyidtrack)\n      .then(responce => {\n        this.setState({\n          data: responce.data,\n          scrolling: false,\n          tracktypess: responce.data.tracktype,\n          projectid: responce.data.genre\n        });\n        // dataid = responce.data[0].id\n        console.log(responce.data)\n      });\n  }\n\n  getdata = () => {\n    axios.get(httpUrl +  'genre')\n      .then(responce => {\n        this.setState({\n          projectvalue: responce.data,\n          scrolling: false,\n        });\n        // dataid = responce.data[0].id\n        // console.log(dataid)\n        console.log(responce.data)\n      });\n  }\n\n\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n    console.log(this.state)\n  }\n\n  handleStatusChange(e) {\n    let value = e.target.value;\n    this.setState({\n      projectid: value\n    })\n  }\n  handletrackstatus(e) {\n    let value = e.target.value;\n    this.setState({\n      tracktypess: value\n    })\n  }\n\n\n\n  onChangeFile1 = event => {\n    this.setState({ selectedAudio: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl1: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        track: {\n          docname: event.target.files[0].name1,\n          doctype: 'track',\n          docpath: \"Soundtrack/\" + rname + event.target.files[0].name1,\n          docdesc: \"track\"\n        }\n      })\n    }\n\n  }\n\n\n\n  updatedata(e) {\n    e.preventDefault();\n    const uploadedby = JSON.parse(localStorage.getItem(\"userData\")).name;\n    let fields = {\n      name: \"\",\n      composer: \"\",\n      description: \"\",\n      price: \"\"\n      // uploadedby:\"\"\n    }\n    this.photoUpload()\n    this.audioUpload()\n    console.log(\"this.state.fields\")\n    console.log(this.state.fields)\n    console.log(this.state.statustrack)\n    console.log(this.state.projectid)\n\n\n    let projectdata = {\n      id: this.props.trackdetailId,\n      name: this.state.fields.name,\n      tracktype: this.state.tracktypess,\n      composer: this.state.fields.composer,\n      description: this.state.fields.description,\n      price: this.state.fields.price,\n      status: 'SUBMITTED',\n      genre: this.state.projectid,\n      uploadedby: uploadedby,\n      photo: {\n        docname: this.state.selectedImage.name,\n        doctype: 'soundtrack',\n        docpath: \"soundtrack/Photo/\" + rname + this.state.selectedImage.name,\n        docdesc: 'soundtrack'\n      },\n      track: {\n        docname: this.state.selectedAudio.name,\n        docpath: \"soundtrack/Audio/\" + rname + this.state.selectedAudio.name,\n        docdesc: \"track\",\n        doctype: \"track\"\n      }\n    }\n\n    console.log('projectdata')\n    console.log(this.state.projectid)\n\n    // var ext = this.state.track.docname.substr(this.state.track.docname.lastIndexOf('.') + 1);\n    // if (ext === 'mp3' || ext === 'mp4') {\n    // projectdata.photo = this.state.photo\n    axios.post(httpUrl +  'soundTrack/update', projectdata)\n      .then(responce => {\n\n        this.setState({\n          fields: fields\n        })\n        console.log(responce)\n        // this.phoadd()\n        // this.handleUpload1()\n\n      });\n\n\n    Swal.fire({\n      icon: 'success',\n      title: 'Submitted',\n      showConfirmButton: false,\n      timer: 1500\n    })\n    this.props.goBack()\n    // this.refreshdata()\n\n  }\n  // else {\n  //   Swal.fire({\n  //     icon: 'error',\n  //     title: 'Please Upload Mp3 Or Mp4 File',\n  //     showConfirmButton: false,\n  //     timer: 1500\n  //   })\n  // }\n  // }\n\n\n  photoUpload = () => {\n    // console.log(trackid)\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedImage } = this.state;\n    if (!selectedImage) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select image to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedImage, rname + this.state.selectedImage.name);\n    formData.append('name', \"soundtrack/Photo\");\n    formData.append('width', '400')\n    formData.append('height', '400')\n    axios.post(BASE_URL, formData).then(response => {\n      // this.updatephoto()\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      alert(err.message);\n    });\n  }\n\n  audioUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedAudio } = this.state;\n    if (!selectedAudio) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedAudio, rname + this.state.selectedAudio.name);\n    formData.append('name', \"Soundtrack/Audio\");\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      // this.updateaudio();\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      // this.opensweetalertdanger(err.message);\n    });\n  }\n\n  onChangeFile = event => {\n    this.setState({ selectedImage: event.target.files[0] })\n\n    if (event.target.files[0] !== '') {\n      // this.file = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  render() {\n    const { imageUrl, imageUrl1 } = this.state;\n    return (\n      <div className=\"card\">\n        <div className=\"card-body \">\n          <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n            <div className=\"panel panel-default cart-border\">\n\n              <div className=\"panel-heading panel-style\">\n\n\n                <h3 style={{ color: \"#ffc701\" }} >\n                  <span style={{ float: \"left\" }}>Edit Sound Track</span>\n                </h3>\n\n              </div>\n\n\n              <div className=\"panel-body\">\n                <div className=\"table-responsive table-style\">\n                  <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                    <div className=\"row1\">\n                      <div className=\"column1\" >\n                        <div style={{ marginTop: \"19px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                          <input type=\"text\" className='textstyle' name=\"name\" id=\"name\" defaultValue={this.state.data.name} onChange={this.handleChange} />\n                        </div>\n                        <div style={{ marginTop: \"25px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}>Artist</label>\n                          <input type=\"text\" className='textstyle' name=\"composer\" id=\"composer\" defaultValue={this.state.data.composer} onChange={this.handleChange} />\n                        </div>\n\n                        <div style={{ marginTop: \"25px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}>Select Genre</label>\n                          <select required name='status' value={this.state.projectid} onChange={this.handleStatusChange} id=\"status\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                            <option value=\"0\">Select</option>\n\n                            {this.state.projectvalue.map((entry) => {\n                              return <option value={entry.name}>{entry.genre}</option>\n                            })\n                            }\n\n                          </select>\n                        </div>\n                        {\n                          this.state.tracktypess === 'FEATURED' ?\n                            <div style={{ marginTop: \"25px\" }}>\n                              <label style={{ float: \"left\", marginBottom: \"8px\" }}>Price</label>\n                              <input type=\"number\" className='textstyle' id=\"price\" name=\"price\" defaultValue={this.state.data.price} onChange={this.handleChange} />\n                            </div>\n                            : null}\n\n\n                      </div >\n                      <div className=\"column1\" >\n\n                        <div style={{ marginTop: \"19px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}>Track Type</label>\n                          <select name='tracktype' value={this.state.tracktypess} onChange={this.handletrackstatus} id=\"trackstatus\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                            {/* <option value=\"0\">select</option> */}\n                            <option value=\"NON_FEATURED\">NON_FEATURED</option>\n                            <option value=\"FEATURED\">FEATURED</option>\n                          </select>\n                        </div>\n                        <div style={{ marginTop: \"25px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}>Description</label>\n                          <input type=\"text\" className='textstyle' id=\"description\" name=\"description\" defaultValue={this.state.data.description} onChange={this.handleChange} />\n                        </div>\n\n                        <div style={{ marginTop: \"25px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}>Uploaded By</label>\n                          <input type=\"text\" readOnly className='textstyle' id=\"uploadedby\" name=\"uploadedby\" value={uploadedby} />\n                        </div>\n\n\n\n                      </div>\n\n\n\n\n\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"column\" >\n                        <div style={{ marginTop: \"8px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Photo:</span></label>\n                          <img style={{ height: \"200px\", width: \"200px\" }}\n                            src={this.state.docServer + this.state.data.photo?.docpath}\n                            className=\"card-img-top\"\n\n                          />\n                        </div>\n\n                      </div >\n\n                      <div className=\"column\" >\n                        <div style={{ marginTop: \"8px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Audio:</span></label>\n                          <audio controls preload=\"auto\" src={this.state.docServer + this.state.data.track?.docpath}>\n                          </audio>\n                        </div>\n                      </div>\n                    </div>\n\n\n                    <div className=\"row\">\n                      <div className=\"column\" >\n                        <div style={{ marginTop: \"8px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                          <input type=\"file\" onChange={this.onChangeFile} />\n                        </div>\n\n                      </div >\n\n                      <div className=\"column\" >\n                        <div style={{ marginTop: \"8px\" }}>\n                          <img style={{ height: \"185px\", width: \"175px\" }}\n                            src={imageUrl}\n                            className=\"card-img-top\"\n\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"column\" >\n                        <div style={{ marginTop: \"8px\" }}>\n                          <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Audio File:</span></label>\n                          <input required type=\"file\" onChange={this.onChangeFile1} />\n                        </div>\n\n                      </div >\n\n                      <div className=\"column\" >\n                        <div style={{ marginTop: \"8px\" }}>\n                          <audio controls required accept=\"audio/*\"\n                            autoPlay preload=\"auto\"\n                            src={imageUrl1}>\n                          </audio>\n\n\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n\n                      <div style={{ margin: \"15px\", float: \"left\" }}>\n                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                          Update\n                        </button>\n                      </div>\n\n\n\n                      <div style={{ margin: \"15px\", float: \"right\" }}>\n                        <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                          Cancel\n                        </button>\n                      </div>\n\n\n\n\n                    </div>\n\n                  </form>\n\n                </div>\n              </div>\n\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n\n\n}\n\n\nexport default Edittrack;\n","E:\\ui\\src\\pages\\admin\\tracks\\Addtrack.jsx",["659","660"],"import axios from 'axios';\nimport React from 'react';\n// import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport './addtrack.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet trackid\n// let userName;\nlet rname = Math.random().toString(36).substring(7) + new Date().getTime();\nclass Addtrack extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            fields: {},\n            photo: {},\n            selectedImage: null,\n            selectedAudio: null,\n            handleResponse: null,\n            imageUrl: null,\n            track: {},\n            imageUrl1: null,\n            projectvalue: [],\n            docServer: docServerUrl,\n            tracktypess: \"NON_FEATURED\",\n            statustrack: \"PUBLISHED\",\n            genre: 'HIP_HOP',\n            trackid: '',\n            uploadedby: JSON.parse(localStorage.getItem('userData')).name\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updatedata = this.updatedata.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handletrackstatus = this.handletrackstatus.bind(this)\n        this.handleGenrestatus = this.handleGenrestatus.bind(this)\n    };\n\n\n\n    componentDidMount() {\n        this.getdata();\n    }\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n        console.log(this.state)\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            statustrack: value\n        })\n    }\n    handletrackstatus(e) {\n        let value = e.target.value;\n        this.setState({\n            tracktypess: value\n        })\n    }\n\n    handleGenrestatus(e) {\n        let value = e.target.value;\n        this.setState({\n            genre: value\n        })\n    }\n\n\n\n\n    updatedata(e) {\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            composer: \"\",\n            description: \"\",\n            price: \"\",\n        }\n\n        if (this.state.tracktypess === 'NON_FEATURED') {\n            this.state.fields.price = '0'\n        }\n\n        this.photoUpload()\n        this.audioUpload()\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n        console.log(this.state.statustrack)\n        console.log(this.state.tracktypes)\n\n        let projectdata = {\n            name: this.state.fields.name,\n            tracktype: this.state.tracktypess,\n            composer: this.state.fields.composer,\n            description: this.state.fields.description,\n            price: this.state.fields.price,\n            status: this.state.statustrack,\n            uploadedby: this.state.uploadedby,\n            genre: this.state.genre,\n            photo: {\n                docname: this.state.selectedImage.name,\n                doctype: 'soundtrack',\n                docpath: \"soundtrack/Photo/\" + rname + this.state.selectedImage.name,\n                docdesc: 'soundtrack'\n            },\n            track: {\n                docname: this.state.selectedAudio.name,\n                docpath: \"soundtrack/Audio/\" + rname + this.state.selectedAudio.name,\n                docdesc: \"track\",\n                doctype: \"track\"\n            }\n        }\n\n        axios.post(httpUrl +  'soundTrack', projectdata)\n            .then(responce =>{\n                // this.state.fields = fields\n                this.setState({\n                    fields: fields,\n                    trackid: responce.data.id\n                })\n                console.log(\"soundTrack\", responce)\n                console.log(\"trackid\", this.state.trackid)\n                trackid = responce.data.id\n\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Submitted',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n                this.props.goBack()\n            }).catch(error =>{\n                Swal.fire({\n                    icon: 'error',\n                    title: 'SoundTrack And Genre Already Exist ',\n                    showConfirmButton: false,\n                    timer: 3500\n                })\n                console.log(error)\n              });\n\n        // this.photoUpload(trackid)\n        // this.audioUpload(trackid)\n        // alert(trackid)\n       \n\n    }\n\n    photoUpload = () => {\n        console.log(trackid)\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedImage } = this.state;\n        if (!selectedImage) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedImage, rname + this.state.selectedImage.name);\n        formData.append('name', \"soundtrack/Photo\");\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updatephoto()\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    getdata = () => {\n        axios.get(httpUrl +  'genre')\n            .then(responce => {\n                this.setState({\n                    projectvalue: responce.data,\n                    scrolling: false,\n                });\n                // dataid = responce.data[0].id\n                // console.log(dataid)\n                console.log(responce.data)\n            });\n    }\n\n    onChangeFile1 = event => {\n        this.setState({ selectedAudio: event.target.files[0] })\n        if (event.target.files[0] !== '') {\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl1: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                track: {\n                    docname: event.target.files[0].name1,\n                    doctype: 'track',\n                    docpath: \"soundtrack/\" + rname + event.target.files[0].name1,\n                    docdesc: \"track\"\n                }\n            })\n        }\n    }\n\n    audioUpload = () => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedAudio } = this.state;\n        if (!selectedAudio) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select audio to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedAudio, rname + this.state.selectedAudio.name);\n        formData.append('name', \"soundtrack/Audio\");\n        formData.append('width', '')\n        formData.append('height', '')\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updateaudio();\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            // this.opensweetalertdanger(err.message);\n        });\n    }\n\n    onChangeFile = event => {\n        this.setState({ selectedImage: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'soundtrack1',\n                    docpath: \"soundtrack/\" + rname + event.target.files[0].name,\n                    urllink: ''\n                }\n            });\n        }\n    }\n\n\n\n\n\n\n\n    render() {\n        const { imageUrl, imageUrl1 } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Add Sound Track</span>\n                                </h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                                        <div className=\"row1\">\n                                            <div className=\"column1\" >\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\" className='textstyle' name=\"name\" id=\"name\" value={this.state.fields.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Artist</label>\n                                                    <input type=\"text\" className='textstyle' name=\"composer\" id=\"composer\" value={this.state.fields.composer} onChange={this.handleChange} />\n                                                </div>\n\n                                                {/* <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Status</label>\n                                                    <select name='status' value={this.state.statustrack} onChange={this.handleStatusChange} id=\"status\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        <option value=\"0\">select</option>\n                                                        <option value=\"SUBMITTED\">SUBMITTED</option>\n                                                        <option value=\"PUBLISHED\">PUBLISHED</option>\n                                                        <option value=\"SOLD\">SOLD</option>\n                                                        <option value=\"REJECT\">REJECT</option>\n                                                    </select>\n                                                </div> */}\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Uploaded By</label>\n                                                    <input type=\"text\" disabled className='textstyle' id=\"uploadedby\" name=\"uploadedby\" value={this.state.uploadedby} onChange={this.handleChange} />\n                                                </div>\n                                            </div >\n                                            <div className=\"column1\" >\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Track Type</label>\n                                                    <select name='tracktype' value={this.state.tracktypess} onChange={this.handletrackstatus} id=\"trackstatus\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        {/* <option value=\"0\">select</option> */}\n                                                        <option value=\"NON_FEATURED\">NON_FEATURED</option>\n                                                        <option value=\"FEATURED\">FEATURED</option>\n                                                    </select>\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Description</label>\n                                                    <input type=\"text\" className='textstyle' id=\"description\" name=\"description\" value={this.state.fields.description} onChange={this.handleChange} />\n                                                </div>\n\n                                                {this.state.tracktypess === 'FEATURED' ?\n                                                    <div style={{ marginTop: \"25px\" }} >\n                                                        <label style={{ float: \"left\", marginBottom: \"8px\" }}>Price</label>\n                                                        <input type=\"number\" className='textstyle' id=\"price\" name=\"price\" value={this.state.fields.price} onChange={this.handleChange} />\n\n                                                    </div>\n                                                    : null}\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Genre Type</label>\n                                                    <select name='genre' value={this.state.genretypes} onChange={this.handleGenrestatus} id=\"genrestatus\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        <option value=\"0\">Select</option>\n\n                                                        {this.state.projectvalue.map((entry) => {\n                                                            return <option value={entry.name}>{entry.genre}</option>\n                                                        })\n                                                        }\n                                                    </select>\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" required onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"185px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Audio File:</span></label>\n                                                    <input type=\"file\" required onChange={this.onChangeFile1} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n\n                                                    {imageUrl1 &&\n                                                        <audio controls\n                                                            autoPlay preload=\"auto\"\n                                                            src={imageUrl1}>\n                                                        </audio>\n                                                    }\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n\n                                            <div style={{ margin: \"15px\", float: \"left\" }}>\n                                                <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                    Submit\n                                                </button>\n                                            </div>\n\n\n                                            <div style={{ margin: \"15px\", float: \"right\" }}>\n                                                <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                    Cancel\n                                                </button>\n                                            </div>\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div >\n            </div >\n\n        );\n    }\n\n\n}\n\n\nexport default Addtrack;\n","E:\\ui\\src\\pages\\dashboard\\produce\\project\\FormProject.jsx",[],"E:\\ui\\src\\pages\\dashboard\\produce\\manageProject.jsx",["661","662","663","664","665","666"],"import React, { useEffect, useState } from \"react\";\nimport sprite from \"../../../assets/icons/sprite.svg\";\nimport Swal from \"sweetalert2\";\n// import FormProject from \"../produce/project/FormProject\";\n// import InstagramIcon from \"../../../assets/foldericon.jpg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\n// import folderIcon from \"../../../assets/material-design-folder-icon-0.jpeg\";\n// import image25 from \"../../../assets/image25.png\";\n// import vector from \"../../../assets/Vector.png\";\nimport image25 from \"../../../assets/musicicon3.png\";\nimport arrow from \"../../../assets/arrow.png\";\nimport searchbar from \"../../../assets/searchbar.png\";\nimport { httpUrl } from '../../../restservice'\nimport axios from 'axios';\nimport \"./manageProject.scss\"\n\nimport { ChoiraLoader } from \"../../../components/loader/ChoiraLoader\";\n// import TrackShow from \"./trackShow\";\nexport default function ManageProject(props) {\n\n    const { closeModelfunction } = props\n    const [searchterm, setsearchterm] = useState('');\n    const [data, setData] = useState([]);\n    const [seardata, setsearchdata] = useState([]);\n    const { backmanagepage } = props\n    // const [username, userInput] = useInput({ type: \"text\" }, searchBox);\n\n    const submitStyle = {\n        marginBottom: '30px'\n    };\n\n    // const showAlert = () => {\n    //     Swal.fire({\n    //         icon: 'warning',\n    //         title: \"Not Allowed!\",\n    //         text: \"You have already created a project. And currently, we only allow one project\",\n    //         showConfirmButton: false,\n    //         timer: 5500\n    //     });\n    // }\n\n    useEffect(() => {\n        loadData1()\n    }, []);\n\n\n\n    const loadData1 = () => {\n        let userid = JSON.parse(localStorage.getItem(\"userData\")).id;\n        const url = httpUrl + 'project?customer=' + userid;\n        axios.get(url)\n            .then(response => {\n                setData([...response.data])\n                setsearchdata([...response.data])\n            });\n    }\n\n    const chnageproject = (id) => {\n        backmanagepage(id)\n        console.log(\"okk\", id)\n    }\n\n    return (\n        <>\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Produce\n                </h1>\n            </div>\n\n            <p style={{ textAlign: \"left\" }}>\n                Get a team of the world’s best mixing &amp; mastering engineers,\n                singers, songwriters, producers and studio musicians for your\n                project\n            </p>\n\n            <button onClick={closeModelfunction} className=\"btn-primary\" style={submitStyle}>\n                <svg>\n                    <use href={sprite + \"#icon-folder-plus\"}></use>\n                </svg>\n                New Project\n            </button>\n\n{/* test */}\n\n            <div style={{ marginTop: \"43px\" }}>\n                <div className=\"bigdata2\">\n                    <input className=\"inputbox\" type=\"text\" onChange={(e) => { setsearchterm(e.target.value); }} />\n\n                    <img src={arrow} width=\"15px\" height=\"15px\" alt=\"arrow\" />&nbsp;&nbsp;\n                    <img src={searchbar} width=\"15px\" height=\"15px\" alt=\"search\" />\n\n                </div>\n                \n                {\n                    \n                    data.filter((val) => {\n                        if (searchterm === '') {\n                            return true;\n\n                        }\n                        else if (\n                            val.name.toLowerCase().includes(searchterm.toLowerCase())\n                        ) {\n                            return true;\n                        }\n\n                        else return false\n\n                    }).map(((entry) => (\n\n                        <div key={entry.id} className=\"rowshow\" style={{ cursor: \"pointer\" }} onClick={() => { chnageproject(entry.id) }}>\n                            <div className=\"columnshow\">\n                                <div className=\"textstyle\">\n                                    <div className=\"textcontext\">\n                                        <img src={image25} alt=\"image\" />\n\n                                        <label style={{ cursor: \"pointer\" }}>{entry.name}</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"linecontent\"> </div>\n                            <div className=\"columnshow\">\n                                <div className=\"textstyle\">\n                                    <div className=\"textcontext1\">\n                                        {\n                                            entry.details?\n                                            (entry.details.length < 20 ?\n                                                <label style={{ cursor: \"pointer\" }}>{entry.details}</label>\n                                                :\n                                                <label style={{ cursor: \"pointer\" }}>{entry.details.substring(0, 20)}...<a style={{ color: \"#9e9ea5\" }}>Read More</a></label>)\n                                                :\n                                                <label style={{ cursor: \"pointer\" }}>- - -</label>\n\n                                        }\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    )))}\n            </div>\n\n            {/* <div className=\"linecontent\"> </div>\n          <div>\n          {data.map(entry => (\n            <div className=\"contentheading\">\n            <img src={vector} alt=\"image\" className=\"contentimage\"/>\n            <img src={image25} alt=\"image\" className=\"contentimage1\"/>\n            {entry.name}\n            </div>\n\n          ))} \n          </div> */}\n\n\n\n\n\n            {/* <div className='trackMainBox'>\n                <div className=\"showMasterFolder\">\n                    {data.map(entry => (\n                        <div key={entry.id} className=\"folderHover\" onClick={() => { chnageproject(entry.id) }}>\n                            <h4>\n                                <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                            </h4>\n                            <label>{entry.name}</label>\n                        </div>\n                    ))}\n                </div>\n            </div> */}\n\n            {/* <FormProject /> */}\n\n            {/* <TrackShow setOpenDetailsBox={props.setOpenDetailsBox} setStoreTracksFolderSection={props.setStoreTracksFolderSection} /> */}\n\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n//for checkin\n","E:\\ui\\src\\pages\\dashboard\\produce\\showDetails.jsx",["667","668"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport sprite from \"../../../assets/icons/sprite.svg\";\nimport featureBox from \"../../../assets/explore/img1.png\"\nimport iconPauseBox from \"../../../assets/explore/pause.png\"\nimport iconBox from \"../../../assets/explore/playButton.png\"\nimport iconDown from \"../../../assets/down-arrow.png\"\nimport './trackShow.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nvar audio = null\n\nexport default function ShowDetails(props) {\n\n    const [trackData, setTrackData] = useState([])\n    const [openSoundPlay, setSoundPlay] = useState(false)\n    const [playingAudio, setPlayingAudio] = useState(0)\n  \n    // const [checkdata,setcheckdata]=useState(false)\n   \n    const docServer = docServerUrl\n\n    useEffect(() => {\n        if (JSON.parse(localStorage.getItem(\"userData\"))) {\n            let userId = JSON.parse(localStorage.getItem(\"userData\")).id\n            axios.get(httpUrl +  'soundTrack/license?customer=' + userId)\n                .then(function (response) {\n                    if (props.param === \"NON_EXCLUSIVE\") {\n                        console.log(\"NON_EXCLUSIVE\")\n                        setTrackData(response.data.filter(entry => entry.licensetype === \"NON_EXCLUSIVE\"))\n                    } else {\n                        console.log(\"EXCLUSIVE\")\n                        setTrackData(response.data.filter(entry => entry.licensetype !== \"NON_EXCLUSIVE\"))\n                    }\n                    console.log(response)\n                    \n                   \n                   \n                })\n                .catch(function (error) {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Unable to get data.',\n                        showConfirmButton: false,\n                        timer: 3500\n                    })\n                });\n        }\n        stopSound();\n    }, []);\n\n    //     componentDidMount() {\n    //     audio.addEventListener('ended', () => this.setState({ play: false }));\n    //   }\n    // componentWillUnmount() {\n    //     audio.removeEventListener('ended', () => this.setState({ play: false }));  \n    //   }\n    const playSound = (incomingPath, receivedId) => {\n        console.log(incomingPath)\n        if (openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n        if (playingAudio !== receivedId) {\n            if (incomingPath) {\n                audio = new Audio(docServerUrl + incomingPath);\n                audio.play();\n                setSoundPlay(true)\n            }\n            setPlayingAudio(receivedId)\n        }\n        else {\n            setPlayingAudio(0)\n        }\n    }\n\n    const stopSound = _ => {\n        if (audio && openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n    }\n\n    return (\n\n        <div>\n            <div className='content' style={{ height: 'auto', overflowX: 'auto' }}>\n                <h2 style={{ textAlign: \"right\", padding: \"10px\", cursor: \"pointer\" }} onClick={() => { props.goback(); stopSound() }}>Back</h2>\n                <div className=\"content__heading\">\n                    <h1>\n                        <svg>\n                            <use href={sprite + \"#icon-folder\"}></use>\n                        </svg>\n                        {props.param === \"NON_EXCLUSIVE\" ? `Non Exclusive Tracks` : `Licensed Tracks`}\n                    </h1>\n                </div>\n                <div className=\"showFolder\">\n                    {trackData.map(entry => {\n                        return <div className=\"featureSong\" key={entry.id}>\n                            {entry.data.photo ?\n                                <img src={docServer + entry.data.photo.docpath} alt=\"img 1\" />\n                                :\n                                <img src={featureBox} alt=\"img 1\" />\n                            }\n                            <div className=\"detailBox\">\n                                {playingAudio === entry.id ?\n                                    <img src={iconPauseBox} alt=\"icon\" onClick={() => playSound(entry.data.track.docpath, entry.id)} />\n                                    :\n                                    <img src={iconBox} alt=\"icon\" onClick={() => playSound(entry.data.track.docpath, entry.id)} />\n                                }\n\n                                <div className=\"songName\" style={{ marginBottom: '-30px' }} >\n                                    {entry.data.name}\n                                </div>\n\n                                <div style={{ textAlign: 'right' }} >\n                                    <a href={docServer + entry.data.track.docpath} target=\"_blank\" className=\"download\">\n                                        <img src={iconDown} alt=\"icon\" />\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    })}\n\n                </div>\n            </div>\n\n\n        </div>\n\n    )\n}\n","E:\\ui\\src\\pages\\admin\\tracks\\managetracks.jsx",["669","670","671","672","673","674","675","676"],"import React, { useEffect, useState } from \"react\";\nimport \"./addtrack.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// import { computeHeadingLevel } from \"@testing-library/react\";\nimport { httpUrl, docServerUrl } from '../../../restservice'\nlet idtrack\nlet statustrack\n\nexport default function Managetracks(props) {\n\n    const [data, setData] = useState([]);\n    const [datafill, setDatafill] = useState([]);\n    const [searchterm, setsearchterm] = useState('');\n    const [pagestatus, setpagestatus] = useState('ALL');\n    const [trackstatus, settrackstatus] = useState('ALL_TRACK');\n    const { showaddtrack, showeditpage } = props\n    const [changepage, setchangepage] = useState(0);\n    const [changerejectstatus, setchangerejectstatus] = useState(false);\n    const [trackdata, settrackdata] = useState([]);\n\n    const [totaltrack, settotaltrack] = useState([]);\n    const [totalsold, setotalsold] = useState(0);\n\n    const docServer = docServerUrl;\n    // let apiCallInit = true;\n\n    useEffect(() => {\n        // setpagezero()\n        setpagefour()\n        setpagetwo()\n    }, [])\n\n\n    function getToTitles(str) {\n        if (str) {\n            let string = str.replace(/_/g, ' ');\n            return toTitles(string);\n        }\n    }\n    function toTitles(s) {\n        return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); });\n    }\n\n\n    const chnagepageitem = (id) => {\n        setchangerejectstatus(true)\n        idtrack = id\n\n    }\n\n    const statussubmit = (e) => {\n        // e.preventDefault();\n\n        //  console.log(idstore)\n        // const { rejectreason } = values\n\n        let statusupdate = {\n            id: idtrack,\n            rejectreason: e,\n            status: \"REJECT\"\n        }\n\n        axios.post(httpUrl + 'soundTrack/update', statusupdate)\n            .then(responce => {\n                console.log(responce.data)\n                statustrack = pagestatus;\n                setpagezeroall()\n            });\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Rejected',\n            showConfirmButton: false,\n            timer: 1500\n        })\n        // values.rejectreason = \"\"\n        // setchangerejectstatus(false)\n\n    }\n\n\n    const showedit = (senidd) => {\n        showeditpage(senidd)\n    }\n\n\n    function trackdetails(id) {\n\n        setchangepage(1)\n        axios.get(httpUrl + 'soundTrack/' + id)\n            .then(responce => {\n                settrackdata(responce.data)\n                // setidstore(responce.data.id)\n                console.log(responce.data)\n            });\n\n    }\n\n\n\n    function checkstatus(e) {\n        let val = e.target.value;\n        statustrack = val\n        if (val === 'SUBMITTED') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'PUBLISHED') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'SOLD') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'APPROVED') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else if (val === 'REJECT') {\n            setpagestatus(val)\n            setpagezeroall()\n            // filterItems(val)\n        }\n        else {\n            setpagestatus(val)\n            setpagefour()\n            setpagetwo();\n            // filterItems(val)\n        }\n\n    }\n\n\n\n    function setpagezeroall() {\n\n        if (trackstatus !== 'ALL_TRACK') {\n            let strdata = '?status=' + statustrack + '&track=' + trackstatus\n            axios.get(httpUrl + 'soundTrack' + strdata)\n                .then(responce => {\n                    setData([...responce.data])\n                    setDatafill([...responce.data])\n                    console.log(responce.data)\n                });\n\n        } else if (statustrack === 'ALL') {\n            setpagefour();\n            setpagetwo();\n        } else {\n            let strdata = '?status=' + statustrack\n\n            axios.get(httpUrl + 'soundTrack' + strdata)\n                .then(responce => {\n                    setData([...responce.data])\n                    setDatafill([...responce.data])\n                    console.log(responce.data)\n                });\n        }\n    }\n\n    function setpagetwo() {\n        axios.get(httpUrl + 'soundTrack?status=SOLD')\n            .then(responce => {\n                let jsonData = [...responce.data]\n                setotalsold(jsonData.length)\n                console.log(responce.data)\n            });\n\n    }\n\n    function nonfeatured() {\n\n        axios.get(httpUrl + 'soundTrack?track=NON_FEATURED')\n            .then(responce => {\n                setData([...responce.data])\n                settrackstatus('NON_FEATURED')\n                console.log(responce.data)\n            });\n    }\n\n    function featured() {\n\n        axios.get(httpUrl + 'soundTrack?track=FEATURED')\n            .then(responce => {\n                setData([...responce.data])\n                settrackstatus('FEATURED')\n                console.log(responce.data)\n            });\n    }\n\n    function setpagefour() {\n\n        axios.get(httpUrl + 'soundTrack')\n            .then(responce => {\n                let jsonData = [...responce.data]\n                setData([...responce.data])\n                setDatafill([...responce.data])\n                settotaltrack(jsonData.length)\n                settrackstatus('ALL_TRACK')\n                // console.log(responce.data)\n            });\n\n    }\n\n    function deleteemployee(id) {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this Sound Track!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n\n                axios.delete(httpUrl + 'soundTrack/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        console.log(responce)\n                        statustrack = pagestatus;\n                        setpagezeroall()\n                    });\n\n\n            }\n        });\n    }\n\n\n    function statuschange(id, status) {\n\n        let updateproject = {\n            id: id,\n            status: \"PUBLISHED\"\n        }\n\n        console.log(\"updateproject\", updateproject)\n\n        axios.post(httpUrl + 'soundTrack/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                setpagefour()\n            });\n    }\n\n    function rejectedChange(id, status) {\n\n        Swal.fire({\n            title: 'Reject Reason',\n            input: 'text',\n            inputPlaceholder: 'Enter your Reject Reason',\n            confirmButtonText: 'Submit',\n            cancelButtonText: 'Cancel'\n        }).then((result) => {\n            if (result.value) {\n                console.log(\"rejectedChange:\", result.value)\n                statustrack = pagestatus;\n                statussubmit(result.value)\n            }\n        });\n\n        // setchangerejectstatus(true)\n        idtrack = id\n    }\n\n\n\n    return (\n        <div>\n            {changepage === 0 ?\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n                                    <span>\n                                        <h3 style={{ color: \"#ffc701\" }} >\n                                            <span style={{ float: \"left\" }}>Total Track = {totaltrack} &nbsp;  Total Sold = {totalsold} </span>\n                                        </h3>\n                                    </span>\n                                    <span onClick={() => { showaddtrack() }} title=\"Add Track\" style={{ float: \"right\", cursor: \"pointer\" }}>\n                                        <i className=\"fa fa-plus\"></i>\n                                    </span>\n                                </div>\n                                <div style={{ float: \"left\", margin: \"12px\" }}>\n                                    <button onClick={() => { featured() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 32px\", fontSize: \"15px\" }} className={trackstatus === 'FEATURED' ? \"active-link\" : \"\"}>FEATURED</button>\n                                    <button onClick={() => { nonfeatured() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 32px\", fontSize: \"15px\" }} className={trackstatus === 'NON_FEATURED' ? \"active-link\" : \"\"}>NON FEATURED</button>\n                                    <button onClick={() => { setpagefour() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 32px\", fontSize: \"15px\" }} className={trackstatus === 'ALL_TRACK' ? \"active-link\" : \"\"}>ALL TRACK</button>\n\n                                </div>\n                                <div className=\"dropdownstyle\">\n                                    <select name=\"pagestatus\" onChange={checkstatus} id=\"status\">\n                                        <option value=\"ALL\">All</option>\n                                        <option value=\"SUBMITTED\" >SUBMITTED</option>\n                                        <option value=\"PUBLISHED\">PUBLISHED</option>\n                                        <option value=\"SOLD\">SOLD</option>\n                                        <option value=\"REJECT\">REJECT</option>\n                                    </select>\n                                </div>\n                                <div>\n                                    {\n\n                                        pagestatus === 'ALL' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th>Uploaded By</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{getToTitles(entry.tracktype)}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.uploadedby}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {\n                                                                            entry.status !== 'SOLD' ?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-trash\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                : null}\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {entry.status === 'SUBMITTED' ?\n                                                                            <span>\n                                                                                <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Approved\" style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-thumbs-up\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                &nbsp;\n                                                                                &nbsp;\n                                                                                <span onClick={() => { rejectedChange(entry.id, entry.status) }} title=\"Rejected\" style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-thumbs-down\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                            </span>\n                                                                            : null}\n\n                                                                        {/* {entry.status === 'SOLD' ?\n                                                                            <span onClick={() => { deleteemployee(entry.id) }} title=\"Delete\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null}\n\n                                                                        {entry.status === 'APPROVED' || entry.status === 'PUBLISHED' ?\n                                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submitted\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-check\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null\n                                                                        }\n\n                                                                        {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} */}\n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n\n                                        pagestatus === 'SUBMITTED' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th>Uploaded By</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{getToTitles(entry.tracktype)}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.uploadedby}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {\n                                                                            entry.tracktype === 'FEATURED' ?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-trash\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                : null}\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp; */}\n\n                                                                        <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Approved\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-thumbs-up\"></i>\n                                                                            </button>\n                                                                        </span>\n\n\n                                                                        <span onClick={() => { rejectedChange(entry.id, entry.status) }} title=\"Rejected\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-thumbs-down\"></i>\n                                                                            </button>\n                                                                        </span>\n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n                                        pagestatus === 'PUBLISHED' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th>Uploaded By</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{getToTitles(entry.tracktype)}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.uploadedby}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {\n                                                                            entry.tracktype === 'FEATURED' ?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-trash\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                : null}\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n                                        pagestatus === 'APPROVED' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th>Uploaded By</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{getToTitles(entry.tracktype)}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.uploadedby}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {\n                                                                            entry.tracktype === 'FEATURED' ?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-trash\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                : null}\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submited\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-check\"></i>\n                                                                            </button>\n                                                                        </span>\n\n\n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null}\n\n                                    {\n                                        pagestatus === 'SOLD' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th>Uploaded By</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{getToTitles(entry.tracktype)}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.uploadedby}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n                                                                        {/* <span onClick={() => {showedit(entry.id) }} title=\"Artist Update\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-edit\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        &nbsp; */}\n                                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span> */}\n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                    {\n                                        pagestatus === 'REJECT' ?\n                                            <div className=\"panel-body\">\n                                                <div className=\"table-responsive table-style\">\n                                                    <table id=\"projects\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th >Name</th>\n                                                                <th >Track Type</th>\n                                                                <th>Genre</th>\n                                                                <th >Composer</th>\n                                                                <th>Uploaded By</th>\n                                                                <th >Status</th>\n                                                                <th >Price</th>\n                                                                <th >Action</th>\n                                                            </tr>\n\n                                                            <tr>\n                                                                <th colSpan=\"12\">\n                                                                    <div className='Search'>\n\n                                                                        <input type=\"text\" className=\"inputetype\"\n\n                                                                            onChange={(e) => {\n                                                                                setsearchterm(e.target.value);\n                                                                            }}\n                                                                            placeholder=\"Search By Name,Composer,Status,Track\" name=\"search\" />\n                                                                        <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                                            <i className=\"fa fa-search\"></i>\n\n                                                                        </button>\n\n                                                                    </div>\n                                                                </th>\n                                                            </tr>\n\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.filter((val) => {\n                                                                if (searchterm === '') {\n                                                                    return true;\n\n                                                                }\n                                                                else if (val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.tracktype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.composer.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                                    val.status.toLowerCase().includes(searchterm.toLowerCase())) {\n                                                                    return true;\n\n                                                                }\n                                                                else return false\n\n                                                            }).map(((entry, _index) => (\n                                                                <tr key={entry.id}>\n\n                                                                    <td>{entry.name}</td>\n                                                                    <td>{getToTitles(entry.tracktype)}</td>\n                                                                    <td>{getToTitles(entry.genre)}</td>\n                                                                    <td>{entry.composer}</td>\n                                                                    <td>{entry.uploadedby}</td>\n                                                                    <td>{entry.status}</td>\n                                                                    <td>{entry.price}</td>\n                                                                    <td>\n\n\n                                                                        <span onClick={() => { trackdetails(entry.id) }} title=\"Track Detail\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n\n                                                                        {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submited\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-check\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp; */}\n\n                                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n\n                                                                        {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} */}\n                                                                        {\n                                                                            entry.tracktype === 'FEATURED' ?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-trash\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                : null}\n\n\n                                                                    </td>\n\n                                                                </tr>\n                                                            )))}\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                : null\n            }\n            {changepage === 1 ?\n                <div className=\"card\">\n                    <div className=\"card-body \">\n                        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                            <div className=\"panel panel-default cart-border\">\n                                <div className=\"panel-heading panel-style\">\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Track Details</span>\n                                        <span onClick={() => { setchangepage(0) }} style={{ color: \"white\", float: \"right\", cursor: \"pointer\" }}>\n                                            Back\n                                        </span>\n                                    </h3>\n\n                                    {/* <h1 onClick={() => {goBack()}} >This is details page == {userId}</h1> */}\n                                </div>\n\n                                <div className=\"panel-body\">\n                                    <div style={{ padding: \"24px\" }}>\n                                        <span style={{ fontSize: \"19px\", float: \"left\" }}>\n                                            Details :\n                                        </span>\n                                    </div>\n\n\n                                    <div className=\"grid-container\">\n\n                                        <div className=\"grid-item\">\n                                            Name: <label>{trackdata.name}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Track Type: <label>{getToTitles(trackdata.tracktype)}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Artist: <label>{trackdata.composer}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Status: <label>{trackdata.status}</label>\n                                        </div>\n\n                                        <div className=\"grid-item\">\n                                            Price: <label>{trackdata.price}</label>\n                                        </div>\n                                        <div className=\"grid-item\">\n                                            Uploaded By: <label>{trackdata.uploadedby}</label>\n                                        </div>\n                                        <div className=\"grid-item\">\n                                            Description: <label>{trackdata.description}</label>\n                                        </div>\n                                        {\n                                            trackdata.status === 'REJECT' ?\n                                                <div className=\"grid-item\">\n                                                    Reject Reason: <label>{trackdata.rejectreason}</label>\n                                                </div>\n                                                : null}\n                                    </div>\n\n                                    <div className=\"grid-container\">\n                                        {\n                                            trackdata.photo ?\n                                                (\n                                                    <div className=\"grid-item\">\n                                                        <img style={{ height: \"100px\", width: \"100px\" }} src={docServer + trackdata.photo?.docpath} />\n                                                    </div>\n                                                )\n                                                : null\n                                        }\n\n                                        {\n                                            trackdata.track ?\n                                                (\n                                                    <div className=\"grid-item\">\n                                                        <audio controls preload=\"auto\" style={{ width: '100%' }} src={docServer + trackdata.track?.docpath} >\n                                                        </audio>\n                                                    </div>\n                                                )\n                                                : null\n                                        }\n\n\n                                    </div>\n                                    {/* <div className=\"btn-margin\">\n                                        {trackdata.status === 'REJECT' ?\n                                            <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                                                onClick={() => { showedit(trackdata.id) }} >Edit\n                                            </button>\n                                            : null}\n                                    </div> */}\n\n\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                : null}\n\n        </div>\n    )\n}\n","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormF.jsx",[],"E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormE.jsx",["677"],"import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst FormE = (props) => {\n  const { handleSubmit, additionalData, previousPage } = props;\n\n  const detectSubmit = (inputElement) => {\n    let otpBox = document.getElementById(\"otp2\")\n    switch (inputElement) {\n      case 1:\n        otpBox = document.getElementById(\"otp2\")\n        otpBox.focus();\n        break;\n      case 2:\n        otpBox = document.getElementById(\"otp3\")\n        otpBox.focus();\n        break;\n      case 3:\n        otpBox = document.getElementById(\"otp4\")\n        otpBox.focus();\n        break;\n\n      default : console.log(\"Something Happened\")\n    }\n\n  }\n\n  let phoneNumber = additionalData()\n\n  console.log(phoneNumber)\n  return (\n    <form onSubmit={handleSubmit}>\n      <div class=\"popup__header\">\n        <h3>You are almost done!</h3>\n\n        <div class=\"popup__steps\">\n          <ul>\n            <li class=\"step-active\">1</li>\n            <li class=\"step-active\">2</li>\n            <li class=\"step-active\">3</li>\n            <li class=\"step-active\">4</li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"popup__content\">\n\n        <div class=\"otp\">\n          <div class=\"verifybox__heading form-E\">\n            <h2>Enter OTP</h2>\n            <p>We have share a 4 digit OTP on ******{String(phoneNumber).substring(6)}</p>\n            <span className=\"formNameLink\" style={{textAlign: \"center\",cursor:\"pointer\", paddingLeft: 0}} onClick={()=> {previousPage()}}>\n              Change mobile number\n            </span>\n          </div>\n\n          <div class=\"otp__number\">\n            <Field name=\"otp1\" id=\"otp1\" component=\"input\" type=\"text\" maxlength=\"1\" onChange={() => { detectSubmit(1) }} />\n            <Field name=\"otp2\" id=\"otp2\" component=\"input\" type=\"text\" maxlength=\"1\" onChange={() => { detectSubmit(2) }} />\n            <Field name=\"otp3\" id=\"otp3\" component=\"input\" type=\"text\" maxlength=\"1\" onChange={() => { detectSubmit(3) }} />\n            <Field name=\"otp4\" id=\"otp4\" component=\"input\" type=\"text\" maxlength=\"1\" />\n          </div>\n          <div class=\"otp__norec\">\n            Didn’t receive code? <a onClick={()=> {previousPage()}}>Request again</a>\n          </div>\n        </div>\n        <div class=\"input-submit input-center\">\n          <div class=\"Finished\">\n            <button class=\"btn-primary\" type=\"submit\">\n              Verify\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\nexport default reduxForm({\n  form: \"projectForm\", //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n})(FormE);\n","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormD.jsx",[],"E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormC.jsx",[],"E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormB.jsx",[],"E:\\ui\\src\\components\\testimonial\\Testimonial.jsx",[],"E:\\ui\\src\\pages\\arm\\projects\\detailsProject.jsx",["678","679","680","681"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport '../../dashboard/produce/project/project.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet lengthdefine\nlet random1\nclass DetailsFormProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: [],\n      url: '',\n      data: [],\n      custdata: [],\n      linkdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      cname: '',\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    const endpoint = httpUrl + 'project/' + this.props.selectProject;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        if (json.links) {\n          this.setState({\n            projects: json,\n            linkdata: [...json.links],\n          });\n        } else {\n          this.setState({\n            projects: json\n          });\n        }\n\n      });\n\n  };\n\n  customerid() {\n    axios.get(httpUrl + 'customer/' + this.props.username)\n      .then(responce => {\n        this.state.custdata = responce.data\n        this.state.cname = responce.data.name\n        console.log(this.state.cname)\n        console.log(responce.data)\n      });\n  }\n  componentDidMount() {\n    this.loadData();\n    this.customerid();\n    // this.updateTable()\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects.id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n    const endpoint = httpUrl + 'project/' + id;\n    fetch(endpoint, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects.id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='300px' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    if (str !== undefined) {\n      let string = str.replace(/_/g, ' ');\n      return this.toTitles(string);;\n    }\n    else {\n      return \"\"\n    }\n\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n  // updateTable = () => {\n  //   axios.get(httpUrl +  'project?customer=' + this.props.username)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects.customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, random1 + '_' + this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects.customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects.id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 5000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            <div className=\"col-md-4 animated fadeIn\" key={this.state.projects.id}>\n              <div className=\"card\">\n                <h3 style={{ display: \"flex\", justifyContent: \"space-between\", padding: 20 }}>\n                  <span>Project Details</span>\n                  <span onClick={() => { this.props.Back() }} style={{ color: \"white\" }}>\n                    <button>\n                      Back\n                    </button>\n                  </span>\n\n                </h3>\n                <table id='projects'>\n                  <tbody>\n                    {this.renderTableHeader()}\n                    <tr>\n                      <td>\n                        <ul><span>Name:</span>{this.state.projects.name}</ul>\n                        <ul><span>Customer Name:</span>{this.state.cname}</ul>\n                        <ul><span>Genre:</span>{this.getToTitles(this.state.projects.genre)}</ul>\n                        <ul><span>Project Type:</span>{this.getToTitles(this.state.projects.projecttype)}</ul>\n                        <ul><span>Needs Help With:</span>{this.getToTitles(this.state.projects.faqs)}</ul>\n                        <ul><span>Price Type:</span>{this.getToTitles(this.state.projects.projectprice)}</ul>\n                        <ul><span>Payment Status:</span>{this.getToTitles(this.state.projects.paymentstatus)}</ul>\n                        {/* <ul><span>Manager:</span>{managername}</ul> */}\n                        <ul><span>Details:</span><li>{this.getToTitles(this.state.projects.details)}</li></ul>\n                      </td>\n                      <td className=\"text-align-center\">\n                        <audio controls\n                          preload=\"auto\"\n                          src={this.state.docServer + this.state.projects.file?.docpath}>\n                        </audio>\n                      </td>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          : null}\n\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            <div className=\"col-md-4 animated fadeIn\">\n              <div className=\"card\">\n                <div>\n                  <h3 className=\"paddi\">Reference Links</h3>\n                  <table id='projects'>\n                    <tbody>\n                      {this.renderTableHeader()}\n                      {this.renderTableDataYoutube()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          this.state.setScreenOpen === 1 ?\n            <div className=\"row\">\n              <div className=\"card-body\">\n                <div className=\"card\">\n                  <div className=\"paddi\"><h3>Project Update</h3></div>\n                  <hr />\n                  <form onSubmit={this.handleUpdateSubmit}>\n                    <ul>\n                      <label className=\"label\" >Details: </label><br />\n                      <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                    <div style={{ padding: '10px 20px 0px 20px' }}>\n                      <span>Select Audio File:</span>\n                      <span style={{ marginBottom: 10 }}>\n                        <input type=\"file\" onChange={this.onChangeFile} />\n                      </span>\n                      <div className=\"up-img\">\n                        {imageUrl &&\n                          <audio controls\n                            autoplay preload=\"auto\"\n                            src={imageUrl}>\n                          </audio>\n                        }\n                      </div>\n                    </div>\n\n                    <div className=\"btn-margin\">\n                      <button className=\"btn-primary btn-small\">\n                        Submit\n                      </button>\n                      <button className=\"btn-primary btn-small\"\n                        onClick={e => {\n                          this.updateCancel();\n                        }}\n                      >Cancel\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            :\n            this.state.setScreenOpen === 2 ?\n              <div className=\"col-xs-2\">\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <form onSubmit={this.handleSubmit}>\n                      <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                      <hr />\n                      <ul>\n                        <label className=\"label\" >Reference Link: </label>\n                        <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                      <div className=\"btn-margin\">\n                        <button type=\"Submit\" className=\"btn-primary btn-small\"\n                        >\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\"\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              : null\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default DetailsFormProject;\n","E:\\ui\\src\\pages\\arm\\projects\\project.jsx",["682"],"import React, { useEffect, useState } from \"react\";\nimport \"./project.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { httpUrl } from '../../../restservice'\n\nexport default function ManageProjects(props) {\n\n    const [data, setData] = useState([]);\n    const [searchterm, setsearchterm] = useState('');\n    const { showDetails } = props\n\n\n\n\n    const updateTable = () => {\n        if (localStorage.getItem(\"userData\") !== null) {\n\n            let userID = JSON.parse(localStorage.getItem(\"userData\")).id\n            axios.get(httpUrl +  'project?manager='+userID)\n                .then(responce => {\n                    let armProject = responce.data.filter(entry => entry.manager === userID)\n                    setData([...armProject])\n                    setData([...responce.data])\n                    \n                    // alert('ssss',checked)\n\n\n                });\n        }\n    }\n\n\n    useEffect(() => {\n        updateTable()\n    }, [])\n\n\n\n    function statuschange(id, status) {\n\n        let updateproject = {\n            id: id,\n            status: \"ACTIVE\"\n        }\n\n        if (status === \"ACTIVE\") {\n            updateproject.status = \"IN_ACTIVE\"\n            // setPageSelection(2)\n            //  Swal.fire({\n            //     icon: 'success',\n            //     title: \"Project Is In Active\",\n            //     type: 'success',\n            //   })\n\n        }\n\n        console.log(\"updateproject\")\n        console.log(updateproject)\n\n\n\n        axios.post(httpUrl +  'project/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                updateTable()\n            });\n\n\n    }\n\n    function changePayment(id) {\n\n        let updateproject = {\n            id: id,\n            paymentstatus: \"COMPLETED\"\n        }\n\n        axios.post(httpUrl +  'project/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                updateTable()\n            });\n\n\n    }\n\n    function getToTitles(str) {\n        let string = str.replace(/_/g, ' ');\n        return toTitles(string);\n    }\n\n    function toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n    function deleteemployee(id) {\n\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this data!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n\n                axios.delete(httpUrl +  'project/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        console.log(responce)\n                    });\n\n\n            }\n        });\n    }\n\n    function selectCustomer(id, projectId) {\n        localStorage.setItem(\"selectedProjectID\", id)\n        showDetails(id, projectId);\n    }\n\n    function toTitleCase(str) {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\", textAlign: \"left\" }} className=\"headerproper\">\n                                <span>Manage Projects</span></h3>\n                        </div>\n\n                        <div className=\"panel-body\">\n                            <div className=\"table-responsive table-style\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Name</th>\n                                            <th>Customer</th>\n                                            <th scope=\"col\">Project Type</th>\n                                            <th scope=\"col\">Genre</th>\n                                            <th scope=\"col\">Faqs</th>\n                                            <th scope=\"col\">Payment <br />Status</th>\n                                            <th scope=\"col\">Project <br />Status</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n\n                                        <tr>\n                                            <th colSpan=\"12\">\n                                                <div className='Search'>\n\n                                                    <input type=\"text\" className=\"inputetype\"\n\n                                                        onChange={(e) => {\n                                                            setsearchterm(e.target.value);\n                                                        }}\n                                                        placeholder=\"Search By Name,Project Type,Genre,Faqs,Customer\" name=\"search\" />\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        <i class=\"fa fa-search\"></i>\n\n                                                    </button>\n\n                                                </div>\n                                            </th>\n                                        </tr>\n\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.filter((val) => {\n                                                if (searchterm === '') {\n                                                    return true;\n\n                                                }\n                                                else if (\n                                                    val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.projecttype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.genre.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.custname.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.faqs.toLowerCase().includes(searchterm.toLowerCase())\n\n\n                                                ) {\n                                                    return true;\n\n                                                }\n\n                                                else return false\n\n                                            }).map(((entry) => (\n                                                <tr key={entry.id}>\n\n                                                    <td >{entry.name}</td>\n                                                    <td >{entry.custname}</td>\n                                                    <td>{getToTitles(entry.projecttype)}</td>\n                                                    <td>{toTitleCase(entry.genre)}</td>\n                                                    <td>{toTitleCase(entry.faqs)}</td>\n                                                    <td>{getToTitles(entry.paymentstatus)}</td>\n                                                    <td>{getToTitles(entry.status)}</td>\n                                                    <td>\n\n\n\n\n                                                        {entry.status === \"IN_ACTIVE\" ?\n                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Project Inactive\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-thumbs-down\"></i>\n                                                                </button>\n                                                            </span>\n                                                            :\n                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Project Active\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-thumbs-up\"></i>\n                                                                </button>\n                                                            </span>\n                                                        }\n                                                        &nbsp;\n                                                        &nbsp;\n                                                        <span onClick={() => { selectCustomer(entry.customer, entry.id) }} title=\"Project Detail\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-info-circle\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        &nbsp;\n                                                        {entry.paymentstatus === \"NOT_COMPLETED\" ? (\n                                                            <span onClick={() => { changePayment(entry.id) }} title=\"Payment Not Completed\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i className=\"fa fa-money-bill-alt\"></i>\n                                                                </button>\n                                                            </span>\n                                                        ) : null}\n                                                        &nbsp;\n                                                        &nbsp;\n                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i class=\"fa fa-trash\"></i>\n                                                            </button>\n                                                        </span> */}\n\n                                                        {/* <span onClick={() => {showId(entry.id)}} style={{color:\"white\"}}>\n                                                   <button>\n                                                   <i className =\"fa fa-edit\"></i>\n                                                    </button>\n                                                        </span> */}\n                                                        \n\n                                                    </td>\n\n                                                </tr>\n                                            )))\n                                        }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            </div >\n        </div>\n\n    )\n}\n","E:\\ui\\src\\pages\\arm\\projects\\Editpage.jsx",["683","684"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport './project.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet cname;\nlet lengthdefine\nlet random1\nclass Editpage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: [],\n      url: '',\n      data: [],\n      linkdata: [],\n      photo: {},\n      custdata: [],\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(() => {\n      // window.location.reload();\n      this.loadData();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      // window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    let receivedid = this.props.projectId\n    const endpoint = httpUrl + 'project/' + receivedid;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: [json],\n          linkdata: [...json.links],\n        });\n      });\n\n  };\n\n  customerid() {\n    axios.get(httpUrl + 'customer/' + this.props.username)\n      .then(responce => {\n        this.state.custdata = responce.data\n        cname = responce.data.name\n        console.log(responce.data)\n      });\n  }\n\n  componentDidMount() {\n    this.loadData();\n    this.customerid();\n    // this.updateTable();\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n        this.loadData();\n      });\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this data!',\n      type: 'Warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        const endpoint = httpUrl + 'project/' + id;\n        fetch(endpoint, { method: 'DELETE' })\n          .then(response => response.json())\n          .then(json => {\n            this.opensweetalert(json.Status);\n          });\n        this.loadData();\n        setTimeout(() => {\n          this.loadData();\n        }, 1000);\n        this.setState({ setScreenOpen: 0 });\n      }\n    });\n  }\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects[0].id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 1000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n        <th style={{ width: '200px' }}>action</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='300px' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n          <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    let string = str.replace(/_/g, ' ');\n    return this.toTitles(string);;\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  // updateTable = () => {\n  //   axios.get(httpUrl +  'project?customer=' + this.props.username)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects[0].customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, random1 + '_' + this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects[0].customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects[0].id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 1000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return this.state.projects.map((project, index) => {\n      const { id, name, projecttype, details, faqs, file, managername, projectprice, paymentstatus, genre } = project\n      return (\n        <tr>\n          <td>\n            <ul><span>Name:</span>{name}</ul>\n            <ul><span>Customer Name:</span>{cname}</ul>\n            <ul><span>Genre:</span>{this.getToTitles(genre)}</ul>\n            <ul><span>Project Type:</span>{this.getToTitles(projecttype)}</ul>\n            <ul><span>Needs Help With:</span>{this.getToTitles(faqs)}</ul>\n            <ul><span>Price Type:</span>{this.getToTitles(projectprice)}</ul>\n            <ul><span>Payment Status:</span>{this.getToTitles(paymentstatus)}</ul>\n            <ul><span>Manager:</span>{managername}</ul>\n            <ul><span>Details:</span><li>{this.getToTitles(details)}</li></ul>\n          </td>\n          <td className=\"text-align-center\">\n            <audio controls\n              preload=\"auto\"\n              src={this.state.docServer + file?.docpath}>\n            </audio>\n          </td>\n          <td className=\"text-align-center\">\n            <button className=\"my-svg-edit\"\n              onClick={e => {\n                this.updateProject();\n              }}\n            >\n            </button>&nbsp;\n            <button className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteProject(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            {this.state.projects.map(data => (\n              <div className=\"col-md-4 animated fadeIn\" key={data.id.value}>\n                <div className=\"card\">\n\n                  <div className=\"btn-align-down\">\n                    <button className=\"btn-small\"\n                      onClick={() => { this.props.Back() }} style={{ color: \"white\" }}\n                    >Back\n                    </button>\n                  </div>\n\n                  <h3 className=\"paddi\">Project Details</h3>\n\n                  <table id='projects'>\n                    <tbody>\n                      {this.renderTableHeader()}\n                      {this.renderTableDataProject()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            ))}\n          </div>\n          : null}\n\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            {this.state.projects.map(data => (\n              <div className=\"col-md-4 animated fadeIn\">\n                <div className=\"card\">\n                  <div className=\"btn-align-down\">\n                    {/* <button className=\"my-svg-add\"\n                      onClick={e => {\n                        this.addYoutubeUrl();\n                      }}\n                    >\n                    </button> */}\n                  </div>\n                  <div>\n                    <h3 className=\"paddi\">Reference Links</h3>\n                    <table id='projects'>\n                      <tbody>\n                        {this.renderTableHeader()}\n                        {this.renderTableDataYoutube()}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          :\n          this.state.setScreenOpen === 1 ?\n            <div className=\"row\">\n              {this.state.projects.map(data => (\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <div className=\"paddi\"><h3>Project Edit</h3></div>\n                    <hr />\n                    <form onSubmit={this.handleUpdateSubmit}>\n                      <ul>\n                        <label className=\"label\" >Details: </label><br />\n                        <textarea ref={(ref) => { this.Details = ref }} type=\"text\" name=\"details\" /></ul>\n\n                      <div style={{ padding: '10px 20px 0px 20px' }}>\n                        <span style={{ float: 'left' }}>Select Audio File:</span>\n                        <span style={{ marginBottom: 10 }}>\n                          <input type=\"file\" onChange={this.onChangeFile} />\n                        </span>\n                        <div className=\"up-img\">\n                          {imageUrl &&\n                            <audio controls\n                              autoplay preload=\"auto\"\n                              src={imageUrl}>\n                            </audio>\n                          }\n                        </div>\n                      </div>\n\n                      <div className=\"btn-margin\">\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}>\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              ))}\n            </div>\n            :\n            this.state.setScreenOpen === 2 ?\n              <div className=\"col-xs-2\">\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <form onSubmit={this.handleSubmit}>\n                      <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                      <hr />\n                      <ul>\n                        <label className=\"label\" >Reference Link: </label>\n                        <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                      <div className=\"btn-margin\">\n                        <button type=\"Submit\" className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                        >\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              : null\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default Editpage;\n","E:\\ui\\src\\pages\\arm\\user\\Edituser.jsx",[],"E:\\ui\\src\\pages\\arm\\user\\Adduser.jsx",[],"E:\\ui\\src\\pages\\arm\\user\\projectmanage.jsx",["685","686"],"import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport '../../dashboard/produce/project/project.scss'\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\nimport \"./project.scss\"\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet projectid\nlet lengthdefine\nlet random1\nclass Projectmanage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: {},\n      url: '',\n      data: [],\n      linkdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      setmnanageproject: 1,\n      selectedFile: null,\n      handleResponse: null,\n      getbyidproject: [],\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    const endpoint = httpUrl + 'project/' + projectid;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: json,\n          linkdata: [...json.links],\n        });\n\n      });\n\n    console.log(this.state.projects)\n  };\n  backpagescreen(projectidd) {\n    projectid = projectidd\n    this.loadData()\n    this.setState({ setmnanageproject: 2 });\n  }\n\n\n  chnageproject() {\n    let id = this.props.userId;\n    axios.get(httpUrl + 'project?customer=' + id)\n      .then(responce => {\n        this.setState({\n          getbyidproject: responce.data,\n          scrolling: false,\n\n        });\n\n      });\n\n  };\n  componentDidMount() {\n    this.chnageproject()\n    // this.loadData();\n    // this.updateTable()\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  backpage() {\n    this.setState({ setmnanageproject: 1 })\n  }\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n\n    Swal.fire({\n      title: 'Project Is Active !',\n      text: 'Are You Sure You Want To Delete Project? You Can Not Recover Data',\n      type: 'Warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n\n        const endpoint = httpUrl + 'project/' + id;\n        fetch(endpoint, { method: 'DELETE' })\n          .then(response => response.json())\n          .then(json => {\n            Swal.fire(\n              'Deleted!',\n              'Your data has been deleted.',\n              'success'\n            );\n            this.props.goBack();\n          });\n\n\n      }\n    });\n\n\n  }\n\n\n\n\n\n\n\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects.id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n        <th style={{ width: '200px' }}>action</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='100%' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n          <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button title=\"Delete Link\" className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    if (str) {\n      let string;\n      if (str !== ' ') {\n        string = str.replace(/_/g, ' ');\n      } else {\n        string = str;\n      }\n      return this.toTitles(string);\n    }\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  updateTable = () => {\n    axios.get(httpUrl + 'project?customer=' + this.props.userId)\n      .then(responce => {\n        lengthdefine = responce.data.length\n        console.log(responce.data)\n        console.log(lengthdefine)\n      });\n  }\n\n  // randommno = () => {\n\n  //   var digits = '0123456789';\n  //    random1 = '';\n  //   for (let i = 0; i < 2; i++) {\n  //     random1 += digits[Math.floor(Math.random() * 2)];\n  //   }\n  //   console.log(random1)\n  // }\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    // let text = lengthdefine + 1\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects.customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects.customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects.id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 5000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return (\n      <tr>\n        <td>\n          <ul><span>Name:</span>{this.state.projects.name}</ul>\n          <ul><span>Customer Name:</span>{this.props.username}</ul>\n          <ul><span>Genre:</span>{this.getToTitles(this.state.projects.genre)}</ul>\n          <ul><span>Project Type:</span>{this.getToTitles(this.state.projects.projecttype)}</ul>\n          <ul><span>Needs Help With:</span>{this.getToTitles(this.state.projects.faqs)}</ul>\n          <ul><span>Price Type:</span>{this.getToTitles(this.state.projects.projectprice)}</ul>\n          <ul><span>Payment Status:</span>{this.getToTitles(this.state.projects.paymentstatus)}</ul>\n          {/* <ul><span>Manager:</span>{managername}</ul> */}\n          <ul><span>Details:</span><li>{this.state.projects.details}</li></ul>\n        </td>\n        <td className=\"text-align-center\">\n          <audio controls\n            preload=\"auto\" style={{ width: '100%' }}\n            src={this.state.docServer + this.state.projects.file?.docpath}>\n          </audio>\n        </td>\n        <td className=\"text-align-center\">\n          <button title=\"Project Update\" className=\"my-svg-edit\"\n            onClick={e => {\n              this.updateProject();\n            }}\n          >\n          </button>&nbsp;\n          <button title=\"Project Delete\" className=\"my-svg-delete\"\n            onClick={e => {\n              this.deleteProject(this.state.projects.id);\n            }}\n          >\n          </button>\n        </td>\n      </tr>\n    )\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div>\n        {this.state.setmnanageproject === 1 ?\n          <div>\n            <div className=\"contenttype\">\n              <h2>\n                <span style={{ float: \"left\" }} >Project List</span>\n                <span style={{ float: \"right\", cursor: \"pointer\" }} onClick={() => { this.props.goBack() }}>Back</span>\n              </h2>\n            </div>\n            {/* <h2 style={{ textAlign: \"right\" }} onClick={() => { this.props.goBack() }}>Back</h2> */}\n            <div className='trackMainBox'>\n              <div className=\"showMasterFolder\">\n                {this.state.getbyidproject.map(entry => (\n                  <div key={entry.id} style={{ cursor: \"pointer\" }} className=\"folderHover\" onClick={() => { this.backpagescreen(entry.id) }}>\n                    <h4 >\n                      <img src={folderIcon} style={{ cursor: \"pointer\" }} alt=\"folder\" className='iconFolder' />\n                    </h4>\n                    <label style={{ cursor: \"pointer\" }}>{entry.name}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          : null}\n        {\n          this.state.setmnanageproject === 2 ?\n            <div className=\"clearfix\">\n              {this.state.setScreenOpen === 0 ?\n                <div className=\"row\">\n                  <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"card\">\n                      <h3 style={{ display: \"flex\", justifyContent: \"space-between\", padding: 10 }}>\n                        <span>Project Details</span>\n                        <span onClick={() => { this.backpage() }} style={{ color: \"white\" }}>\n                          <button>\n                            Back\n                          </button>\n                        </span>\n                      </h3>\n                      <table id='projects'>\n                        <tbody>\n                          {this.renderTableHeader()}\n                          {this.renderTableDataProject()}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                : null}\n\n              {this.state.setScreenOpen === 0 ?\n                <div className=\"row\">\n                  <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"card\">\n                      <div className=\"btn-align-down\">\n                        <button title=\"Add You Tube Urls\" className=\"my-svg-add\"\n                          onClick={e => {\n                            this.addYoutubeUrl();\n                          }}\n                        >\n                        </button>\n                      </div>\n                      <div>\n                        <h3 className=\"paddi\">Reference Links</h3>\n                        <table id='projects'>\n                          <tbody>\n                            {this.renderTableHeader()}\n                            {this.renderTableDataYoutube()}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                :\n                this.state.setScreenOpen === 1 ?\n                  <div className=\"row\">\n                    <div className=\"card-body\">\n                      <div className=\"card\">\n                        <div className=\"paddi\"><h3>Project Edit</h3></div>\n                        <hr />\n                        <form onSubmit={this.handleUpdateSubmit}>\n                          <ul>\n                            <label className=\"label\" >Details: </label><br />\n                            <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                          <div style={{ padding: '10px 20px 0px 20px', textAlign: \"left\" }}>\n                            <span>Select Audio File:</span>\n                            <span style={{ marginBottom: 10 }}>\n                              <input type=\"file\" onChange={this.onChangeFile} />\n                            </span>\n                            <div className=\"up-img\">\n                              {imageUrl &&\n                                <audio controls\n                                  autoplay preload=\"auto\"\n                                  src={imageUrl}>\n                                </audio>\n                              }\n                            </div>\n                          </div>\n\n                          <div className=\"btn-margin\">\n                            <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\" style={{ height: \"37px\" }}>\n                              <span> Submit</span>\n                            </button>\n                            <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\" style={{ height: \"37px\" }}\n                              onClick={e => {\n                                this.updateCancel();\n                              }}\n                            ><span>Cancel</span>\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  :\n                  this.state.setScreenOpen === 2 ?\n                    <div className=\"col-xs-2\">\n                      <div className=\"card-body\">\n                        <div className=\"card\">\n                          <form onSubmit={this.handleSubmit}>\n                            <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                            <hr />\n                            <ul>\n                              <label className=\"label\" >Reference Link: </label>\n                              <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                            <div className=\"btn-margin\">\n                              <button style={{ padding: \"1px 25px\" }} type=\"Submit\" className=\"btn-primary btn-small\"\n                              >\n                                Submit\n                              </button>\n                              <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\"\n                                onClick={e => {\n                                  this.updateCancel();\n                                }}\n                              >Cancel\n                              </button>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                    : null\n              }\n\n            </div>\n            : null}\n\n\n      </div>\n    );\n\n  }\n}\n\nexport default Projectmanage;\n","E:\\ui\\src\\pages\\arm\\user\\manageUser.jsx",["687","688","689","690","691","692","693"],"import React, { useEffect, useState } from \"react\";\nimport \"./userstyle.scss\";\nimport axios from \"axios\";\nimport { httpUrl } from '../../../restservice'\n\nlet dateData = {};\nlet manageid = JSON.parse(localStorage.getItem('userData')).id;\nlet dataparam = '&manager=' + manageid;\nexport default function ManageUser(props) {\n\n    const [data, setData] = useState([]);\n\n    const [searchterm, setsearchterm] = useState('');\n    const [status, setStatus] = useState('MY');\n\n    const { showDetailsPage } = props\n    const { showpage } = props\n    // const { showaddpage } = props\n    // const { showuseredit } = props\n    const [datatype, setDatatype] = useState('ALL');\n\n    useEffect(() => {\n        // dataparam = '&manager=' + manageid;\n        loadData(status)\n    }, [])\n\n    const showDetails = sendableId => {\n        showDetailsPage(sendableId)\n    }\n\n    // const showadddpage = () => {\n    //     showaddpage();\n    // }\n\n    // const showeditpage = sendableId => {\n    //     showuseredit(sendableId);\n    // }\n\n    const showproject = (sendableId, name) => {\n        showpage(sendableId, name)\n    }\n\n    function loadData(st) {\n        let manageid = JSON.parse(localStorage.getItem('userData')).id;\n        let api = '';\n        if (st === 'MY') {\n            api = '?manager=' + manageid\n        } else {\n            api = ''\n        }\n        axios.get(httpUrl + 'customer' + api)\n            // axios.get(httpUrl +  'customer?manager=' + manageid)\n            .then(response => {\n                setData([...response.data])\n                console.log(response.data)\n                setDatatype(\"ALL\")\n            });\n    }\n\n    // function deleteemployee(id) {\n\n\n\n    //     Swal.fire({\n    //         title: 'Are you sure?',\n    //         text: 'You will not be able to recover this customer data!',\n    //         type: 'Warning',\n    //         showCancelButton: true,\n    //         confirmButtonText: 'Yes, delete it!',\n    //         cancelButtonText: 'No, keep it'\n    //     }).then((result) => {\n    //         if (result.value) {\n\n    //             axios.delete(httpUrl +  'customer/' + id)\n    //                 .then(responce => {\n    //                     Swal.fire(\n    //                         'Deleted!',\n    //                         'Your data has been deleted.',\n    //                         'success'\n    //                     );\n    //                     console.log(responce)\n    //                     loadData()\n    //                 });\n\n\n    //         }\n    //     });\n    // }\n\n\n\n    function unixTimeConverter(unixTime) {\n        const date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(unixTime);\n        return date;\n    }\n\n    const handleChange = (e) => {\n        dateData[e.target.name] = e.target.value;\n    }\n\n    function changeStatus(st) {\n        setStatus(st)\n        if (st === 'MY') {\n            dataparam = '&manager=' + manageid;\n        } else {\n            dataparam = '';\n        }\n\n        loadData(st);\n    }\n\n    function fistWeek() {\n\n        axios.get(httpUrl + 'customer?type=THISWEEK' + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('THIS_WEEK')\n                console.log(responce.data)\n            });\n    }\n\n    function lastMonth() {\n\n        axios.get(httpUrl + 'customer?type=LASTMONTH' + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('LAST_MONTH')\n                console.log(responce.data)\n            });\n    }\n\n    function currentMonth() {\n\n        axios.get(httpUrl + 'customer?type=THISMONTH' + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('THIS_MONTH')\n                console.log(responce.data)\n            });\n    }\n\n    function customDate() {\n        setDatatype('CUSTOM_DATE')\n    }\n\n    function submitDate() {\n        let startdate = dateData.startdate;\n        let enddate = dateData.enddate;\n        axios.get(httpUrl + 'customer?startdate=' + startdate + '&enddate=' + enddate + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('CUSTOM_DATE')\n                console.log(responce.data)\n            });\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\", textAlign: \"left\" }}>\n                                <span>Manage User</span>\n                            </h3>\n                        </div>\n\n                        <div className=\"panel-body\">\n                            <div className=\"table-responsive table-style\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">Phone</th>\n                                            <th scope=\"col\">Email</th>\n                                            <th scope=\"col\">City</th>\n                                            <th scope=\"col\">Since</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n\n                                        <tr>\n                                            <th colSpan=\"12\">\n                                                <div className=\"row\">\n                                                    <div style={{\n                                                        float: \"left\",\n                                                        width: \"50%\",\n                                                        padding: \"8px 20px\",\n                                                        height: \"50px\"\n                                                    }} >\n                                                        <div style={{ display: 'flex' }}>\n                                                            <input type=\"text\" className=\"inputetype\"\n\n                                                                onChange={(e) => {\n                                                                    setsearchterm(e.target.value);\n                                                                }}\n                                                                placeholder=\"Search..\" name=\"search\" />\n                                                            <button type=\"submit\" className='btn-primary' style={{ color: \"White\", padding: \"9px 7px\", backgroundColor: \"transparent\" }}>\n                                                                <i className=\"fa fa-search\"></i>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                    <div style={{\n                                                        float: \"left\",\n                                                        width: \"50%\",\n                                                        padding: \"10px 20px\",\n                                                        height: \"50px\"\n                                                    }} >\n                                                        <button onClick={() => { changeStatus('MY') }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={status === 'MY' ? \"active-link\" : \"\"}>My Customers</button>\n                                                        <button onClick={() => { changeStatus('ALL') }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={status === 'ALL' ? \"active-link\" : \"\"}>All Customers</button>\n\n                                                    </div>\n                                                </div>\n                                                <div>\n\n                                                    <div style={{ float: \"left\", margin: \"12px\", display: \"flex\" }}>\n                                                        <button onClick={() => { fistWeek() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'THIS_WEEK' ? \"active-link\" : \"\"}>THIS WEEK</button>\n                                                        <button onClick={() => { currentMonth() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'THIS_MONTH' ? \"active-link\" : \"\"}>THIS MONTH</button>\n                                                        <button onClick={() => { lastMonth() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'LAST_MONTH' ? \"active-link\" : \"\"}>LAST MONTH</button>\n                                                        <button onClick={() => { customDate() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'CUSTOM_DATE' ? \"active-link\" : \"\"}>CUSTOM DATE</button>\n                                                    </div>\n                                                    <br />\n                                                    {datatype === 'CUSTOM_DATE' ?\n                                                        <div style={{ margin: \"5px 60px\" }}>\n\n                                                            <div style={{\n                                                                float: \"left\",\n                                                                width: \"40%\",\n                                                                padding: \"10px\",\n                                                                height: \"60px\", display: \"flex\"\n                                                            }} >\n\n                                                                <span style={{ padding: \"10px 6px\", fontSize: \"16px\", width: \"33%\" }}>Start Date</span>\n                                                                <input type=\"date\" name=\"startdate\" style={{ width: \"70%\" }} required onChange={(e) => { handleChange(e) }} />\n\n                                                            </div >\n                                                            <div style={{\n                                                                float: \"left\",\n                                                                width: \"40%\",\n                                                                padding: \"10px\",\n                                                                height: \"60px\", display: \"flex\"\n                                                            }} >\n\n                                                                <span style={{ padding: \"10px 6px\", fontSize: \"16px\", width: \"33%\" }}>End Date</span>\n                                                                <input type=\"date\" style={{ width: \"70%\" }} name=\"enddate\" required onChange={(e) => { handleChange(e) }} />\n                                                                <button onClick={() => { submitDate() }} type=\"submit\" className='btn-primary' style={{ color: \"White\", padding: \"9px 7px\", backgroundColor: \"transparent\" }}>\n                                                                    <i className=\"fa fa-search\"></i>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                        : null}\n                                                </div>\n                                            </th>\n                                        </tr>\n\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.filter((val) => {\n                                                if (searchterm === '') {\n                                                    return true;\n\n                                                }\n                                                else if (\n                                                    val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.city.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.email.toLowerCase().includes(searchterm.toLowerCase())\n\n\n                                                ) {\n                                                    return true;\n\n                                                }\n                                                else return false\n\n\n                                            }).map(((entry) => (\n                                                <tr key={entry.id}>\n\n                                                    <td>{entry.name}</td>\n                                                    <td>{entry.phone}</td>\n                                                    <td>{entry.email}</td>\n                                                    <td>{entry.city}</td>\n                                                    <td>{unixTimeConverter(entry.addedon)}</td>\n                                                    <td>\n\n                                                        <span onClick={() => { showproject(entry.id, entry.name) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-tasks\"></i>\n                                                            </button>\n                                                        </span>\n\n                                                        &nbsp;\n                                                        {/* &nbsp;\n                                                        <span onClick={() => { showeditpage(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-edit\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp; */}\n                                                        &nbsp;\n\n                                                        <span onClick={() => { showDetails(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-info-circle\"></i>\n\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        {/* &nbsp;\n                                                        <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i class=\"fa fa-trash\"></i>\n\n                                                            </button>\n                                                        </span> */}\n\n\n                                                    </td>\n\n                                                </tr>\n                                            )))\n                                        }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        </div >\n\n    )\n}\n","E:\\ui\\src\\pages\\arm\\user\\detailsUser.jsx",[],"E:\\ui\\src\\pages\\customerExplore\\exploreOverlay.jsx",["694"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport \"./exploreOverlay.scss\"\nimport Swal from 'sweetalert2';\nimport { httpUrl, docServerUrl, nodeUrl } from '../../restservice'\n\nlet trackname\nexport default function ExploreOverlay(props) {\n\n  const docServer = docServerUrl\n  const [data, setData] = useState({})\n  // const [data1,setdata1]=useState({})\n  const [artist, setartist] = useState('')\n\n  useEffect(() => {\n    getidbytrack();\n  }, [])\n\n  const getidbytrack = () => {\n    axios.get(httpUrl + 'soundTrack/' + props.selectedTrack)\n      .then(responce => {\n        setData({ ...responce.data.photo })\n        trackname = responce.data.track.docpath\n        // setdata1({...responce.data.track})\n        setartist(responce.data.composer)\n        console.log(responce.data)\n        console.log(\"track1\")\n        console.log(trackname)\n        console.log(\"track\")\n        console.log(responce.data.track)\n      });\n  }\n\n  const freesongapi = () => {\n    let name = JSON.parse(localStorage.getItem(\"userData\")).name\n    let id = JSON.parse(localStorage.getItem(\"userData\")).id\n    let email = JSON.parse(localStorage.getItem(\"userData\")).email\n    let sendabledata1 = {\n      soundtrack: props.selectedTrack,\n      customer: id,\n      licensetype: \"NON_EXCLUSIVE\",\n      name: name,\n      licensee: name,\n      artist: artist,\n      email: email\n    }\n\n    axios.post(httpUrl + 'soundTrack/license', sendabledata1)\n      .then(responce => {\n        apiCallPost()\n        sendmailapi()\n      });\n  }\n  const sendmailapi = () => {\n    let sendemail = JSON.parse(localStorage.getItem(\"userData\")).email\n    let custname = JSON.parse(localStorage.getItem(\"userData\")).name\n    let city = JSON.parse(localStorage.getItem(\"userData\")).city\n    let sendemailjson = {\n      email: sendemail,\n      name: props.selectednametrack,\n      licensetype: \"NON_EXCLUSIVE\",\n      licensee: custname,\n      artist: artist,\n      address: city,\n      price: props.selectedPrice,\n      link: docServer + trackname\n    }\n\n    axios.post(nodeUrl + 'sendInvoice ', sendemailjson)\n      .then(function (response) {\n      })\n      .catch(function (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          showConfirmButton: false,\n          timer: 3500\n        })\n      });\n  }\n\n  const apiCallPost = _ => {\n    let sendableData = {\n      id: props.selectedTrack,\n      status: \"SOLD\"\n    }\n\n    axios.post(httpUrl + 'soundTrack/update', sendableData)\n      .then(function (response) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Non Featured Track Bought Successfully',\n          showConfirmButton: false,\n          timer: 3500\n        })\n        setTimeout(() => {\n          props.goback()\n        }, 2000);\n      })\n      .catch(function (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Purchase incomplete.',\n          showConfirmButton: false,\n          timer: 3500\n        })\n      });\n  }\n\n  return (\n    <div className='overLayBox'>\n      <div className=\"overlay\">\n        {Number(props.selectedPrice) === 0 ?\n          <div className=\"boxOverlay\" onClick={() => { freesongapi() }}>\n\n            <div className=\"packageName\">Free</div>\n            <div>\n              <img src={docServer + data.docpath} width=\"100px\" alt=\"img 1\" />\n            </div>\n            <h3>{props.selectednametrack}</h3>\n            <div className=\"packagePrice\">Rs. 0</div>\n            <div className=\"packageDetails\">\n              Removed from store after purchase\n              <br />\n              For broad commercial use\n              <br />\n              Keep 100% of publishing\n              <br />\n              No reporting or payouts to producer\n              <br />\n              You own the master of the final song\n            </div>\n            <div className=\"packageButton\"><span>Get Song</span></div>\n          </div>\n          :\n          <div className=\"boxOverlay\" onClick={() => { props.changeState() }}>\n            <div className=\"packageName\">BuyOut</div>\n            <div>\n              <img src={docServer + data.docpath} width=\"100px\" alt=\"img 1\" />\n            </div>\n            <h3>{props.selectednametrack}</h3>\n            <div className=\"packagePrice\">Rs. {props.selectedPrice}</div>\n            <div className=\"packageDetails\">\n              Removed from store after purchase\n              <br />\n              For broad commercial use\n              <br />\n              Keep 100% of publishing\n              <br />\n              No reporting or payouts to producer\n              <br />\n              You own the master of the final song\n            </div>\n            <div className=\"packageButton\"><span>Buy Now</span></div>\n          </div>\n        }\n\n      </div>\n      <div className=\"closeBox\" onClick={() => { props.onlyCloseTheSong() }}></div>\n    </div>\n    // <div className='overLayBox'>\n    //   <div className=\"overlay\">\n    //     {Number(props.selectedPrice) === 0 ?\n    //       <div className=\"boxOverlay\" onClick={() => { props.changeState() }}>\n    //         <div className=\"packageName\">Free</div>\n    //         <div className=\"packagePrice\">Rs. 0</div>\n    //         <div className=\"packageDetails\">\n    //           Removed from store after purchase\n    //           <br />\n    //           For broad commercial use\n    //           <br />\n    //           Keep 100% of publishing\n    //           <br />\n    //           No reporting or payouts to producer\n    //           <br />\n    //           You own the master of the final song\n    //         </div>\n    //         <div className=\"packageButton\"><span>Order Now</span></div>\n    //       </div>\n    //       :\n    //       <div className=\"boxOverlay\" onClick={() => { props.changeState() }}>\n    //         <div className=\"packageName\">BuyOut</div>\n    //         <div className=\"packagePrice\">Rs. {props.selectedPrice}</div>\n    //         <div className=\"packageDetails\">\n    //           Removed from store after purchase\n    //           <br />\n    //           For broad commercial use\n    //           <br />\n    //           Keep 100% of publishing\n    //           <br />\n    //           No reporting or payouts to producer\n    //           <br />\n    //           You own the master of the final song\n    //         </div>\n    //         <div className=\"packageButton\"><span>Buy Now</span></div>\n    //       </div>\n    //     }\n\n    //   </div>\n    //   <div className=\"closeBox\" onClick={() => { props.onlyCloseTheSong() }}></div>\n    // </div>\n  )\n}\n","E:\\ui\\src\\pages\\externalExplore\\exploreOverlay.jsx",[],"E:\\ui\\src\\pages\\externalExplore\\Waveform.js",["695","696","697","698","699","700","701"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport iconPauseBox from \"../../assets/explore/pause.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport { docServerUrl } from '../../restservice';\n\nconst formWaveSurferOptions = ref => ({\n    container: ref,\n    waveColor: \"#4e4e50\",\n    progressColor: \"#3e3e40\",\n    cursorColor: \"#4e4e50\",\n    barWidth: 2,\n    barRadius: 1,\n    responsive: true,\n    height: 20,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n    xhr: { cache: \"default\", mode: \"cors\", method: \"GET\", credentials: \"include\", headers: [{ key: \"cache-control\", value: \"no-cache\" }, { key: \"pragma\", value: \"no-cache\" }] },\n    xhr1 : { cache: 'default', mode: 'cors', method: 'GET', credentials: 'same-origin', redirect: 'follow', referrer: 'client', headers: [{ key: 'Authorization', value: 'my-token' }] }\n});\n\nlet oldtrackid = null;\nlet oldplayingAudio = null;\n\nexport default function Waveform({ url, url1, tracks, id, setSelectedPlayButton, selectedPlayButton }) {\n    const waveformRef = useRef(null);\n    var wavesurfer = [];\n    const [waveform, setWaveform] = useState(null)\n    const [playing, setPlay] = useState(false);\n    const [audioContext, setAudioContext] = useState(new AudioContext())\n\n    const docServer = docServerUrl\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n        if (waveformRef.current) {\n            wavesurfer[id] = WaveSurfer.create({\n                // audioContext: audioContext,\n                container: waveformRef.current,\n                waveColor: \"#4e4e50\",\n                progressColor: \"#fcc12e\",\n                cursorColor: \"#4e4e50\",\n                barWidth: 0,\n                barRadius: 1,\n                responsive: true,\n                hideScrollbar: true,\n                height: 20,\n                // normalize: true,\n                partialRender: true,\n                pixelRatio: window.devicePixelRatio = 1,\n\n            });\n\n            wavesurfer[id].on('finish', handlePlayPause)\n            wavesurfer[id].load(url)\n            setWaveform(wavesurfer[id])\n        }\n\n        return () => wavesurfer[id].destroy();\n    }, [url]);\n\n    const handlePlayPause = () => {\n\n        if (oldtrackid === null) {\n            waveform.play();\n            setPlay(true);\n        } else if (oldtrackid !== waveform) {\n            if (oldtrackid.backend !== null) {\n                oldtrackid.stop();\n            }\n            waveform.play();\n            setPlay(true);\n        } else if (oldtrackid === waveform) {\n            oldtrackid.stop();\n            setPlay(false);\n            if (playing) {\n                setPlay(false);\n            } else {\n                waveform.play();\n                setPlay(true);\n            }\n        } else {\n            waveform.play();\n        }\n\n        oldtrackid = waveform;\n        setSelectedPlayButton(tracks.name)\n    };\n\n    return (\n        <div className=\"songTracks\">\n\n            <div className=\"controls\">\n                {url1 ?\n                    <img src={url1} alt=\"trackI1mg\" width=\"57px\" className=\"trackImg\" />\n                    :\n                    <img src={trackImage} alt=\"trackImg\" width=\"57px\" className=\"trackImg\" />\n                }\n                {/* <button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>                 */}\n\n                <div onClick={handlePlayPause} className=\"play\">{selectedPlayButton == tracks.name && playing ?\n                    <img src={iconPauseBox} alt=\"icon\" className='upImage' />\n                    :\n                    <img src={iconBox} alt=\"icon\" className='upImage' />\n                }</div>\n            </div>\n            <div className=\"trackDetail\" >\n                <div className=\"trackName\">{tracks.name}</div>\n                <div className=\"trackComposer\">{tracks.composer},{tracks.genre}</div>\n            </div>\n            <div id=\"waveform\" ref={waveformRef} style={{ zIndex: '1' }} className=\"wavehiden\" />\n        </div>\n\n    );\n}\n","E:\\ui\\src\\pages\\customerExplore\\Waveform.js",["702","703","704","705","706","707","708","709","710","711","712"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport iconPauseBox from \"../../assets/explore/pause.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\n// import trackImage from \"../../assets/explore/trackImage.png\"\nimport './woveStyles.scss';\nimport { docServerUrl } from '../../restservice'\n\nconst formWaveSurferOptions = ref => ({\n    container: ref,\n    waveColor: \"#f0f0f0\",\n    progressColor: \"#fcfbfb\",\n    cursorColor: \"#4e4e50\",\n    barWidth: 2,\n    barRadius: 1,\n    responsive: true,\n    height: 20,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n    xhr: {\n        cache: \"default\",\n        mode: \"cors\",\n        method: \"GET\",\n        credentials: \"include\",\n        headers: [\n            { key: \"cache-control\", value: \"no-cache\" },\n            { key: \"pragma\", value: \"no-cache\" }\n        ]\n    }\n});\nlet oldtrackid = null;\nlet oldplayingAudio = null;\nexport default function Waveform({ url, url1, tracks, id, setSelectedPlayButton, selectedPlayButton }) {\n    const waveformRef = useRef(null);\n    // const wavesurfer = useRef(null);\n    var wavesurfer = [];\n    // var playingAudio = []\n    const [waveform, setWaveform] = useState(null)\n    const [playing, setPlay] = useState(false);\n    const [openSoundPlay, setSoundPlay] = useState(false)\n    const [playingAudio, setPlayingAudio] = useState(0)\n    const [audioContext, setAudioContext] = useState(new AudioContext())\n\n    const docServer = docServerUrl\n\n    var wave = 'waveform';\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n        if (waveformRef.current) {\n            wavesurfer[id] = WaveSurfer.create({\n                // audioContext: audioContext,\n                container: waveformRef.current,\n                waveColor: \"#f0f0f0\",\n                progressColor: \"#fcc12e\",\n                cursorColor: \"#f0f0f0\",\n                barWidth: 0,\n                barRadius: 1,\n                responsive: true,\n                hideScrollbar: true,\n                height: 20,\n                normalize: true,\n                partialRender: true,\n                pixelRatio: window.devicePixelRatio = 1,\n\n            });\n\n            // wavesurfer[id].on('finish', handlePlayPause)\n            wavesurfer[id].load(url)\n            setWaveform(wavesurfer[id])\n        }\n\n        return () => wavesurfer[id].destroy();\n        \n    }, [url]);\n\n\n\n    const handlePlayPause = () => {\n\n        if (oldtrackid === null) {\n            waveform.play();\n            setPlay(true);\n        } else if (oldtrackid !== waveform) {\n            if (oldtrackid.backend !== null) {\n                oldtrackid.stop();\n            }\n            waveform.play();\n            setPlay(true);\n        } else if (oldtrackid === waveform) {\n            oldtrackid.stop();\n            setPlay(false);\n            if (playing) {\n                setPlay(false);\n            } else {\n                waveform.play();\n                setPlay(true);\n            }\n        } else {\n            waveform.play();\n        }\n\n        oldtrackid = waveform;\n        setSelectedPlayButton(tracks.name)\n    };\n\n    return (\n        <div className=\"songTracks\" >\n\n            <div className=\"controls\">\n                {url1 ?\n                    <img src={url1} alt=\"trackI1mg\" width=\"57px\" className=\"trackImg\" />\n                    :\n                    <img src={trackImage} alt=\"trackImg\" width=\"57px\" className=\"trackImg\" />\n                }\n\n                <div onClick={handlePlayPause} className=\"play\">\n                    {selectedPlayButton == tracks.name && playing ?\n                        <img src={iconPauseBox} alt=\"icon\" width=\"20px\" className='upImage' />\n                        :\n                        <img src={iconBox} alt=\"icon\" className='upImage' />\n                    }\n                </div>\n            </div>\n            <div className=\"trackDetail\" >\n                <div className=\"trackName\">{tracks.name}</div>\n                <div className=\"trackComposer\">{tracks.composer},{tracks.genre}</div>\n            </div>\n            <div id={wave + id} ref={waveformRef} style={{ zIndex: '0' }} className=\"wavehiden\" />\n        </div>\n\n    );\n}\n","E:\\ui\\src\\pages\\dashboard\\produce\\projectForm\\FormA.jsx",[],"E:\\ui\\src\\pages\\home\\Signin.jsx",["713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741"],"E:\\ui\\src\\components\\signin\\SigninNum.jsx",["742"],"E:\\ui\\src\\components\\signin\\OptVerify.jsx",["743","744"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst OptVerify = ({\r\n  mobileNumber,\r\n  countryCode,\r\n  setCheckOtp,\r\n  checkOtp,\r\n  setRedicrectToDetail,\r\n  redicrectToDetail,\r\n  setSignup_checkOtp,\r\n  signup_checkOtp,\r\n}) => {\r\n  const [seconds, setSeconds] = useState(30);\r\n  const [generatedOTP, setGeneratedOTP] = useState(\"\");\r\n  const [enteredOTP, setEnteredOTP] = useState(\"\");\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Generate a random OTP when the component mounts\r\n    generateOTP();\r\n\r\n    // Start the timer\r\n    const timer = setInterval(() => {\r\n      setSeconds((prevSeconds) => (prevSeconds > 0 ? prevSeconds - 1 : 0));\r\n    }, 1000);\r\n\r\n    // Clear the interval when the component is unmounted\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Set focus to the next input when enteredOTP changes\r\n    if (enteredOTP.length < inputRefs.current.length) {\r\n      inputRefs.current[enteredOTP.length].focus();\r\n    }\r\n  }, [enteredOTP]);\r\n\r\n  const generateOTP = () => {\r\n    const otp = Math.floor(Math.random() * 10000)\r\n      .toString()\r\n      .padStart(4, \"0\");\r\n    console.log(otp);\r\n    alert(\"your otp is \" + otp);\r\n    setGeneratedOTP(otp);\r\n  };\r\n\r\n  const restartTimer = () => {\r\n    // Reset the timer to its initial value and generate a new OTP\r\n    setSeconds(30);\r\n    generateOTP();\r\n  };\r\n\r\n  const handleOTPChange = (index, value) => {\r\n    // Handle OTP input change\r\n    const newEnteredOTP = enteredOTP.split(\"\");\r\n    newEnteredOTP[index] = value;\r\n    setEnteredOTP(newEnteredOTP.join(\"\"));\r\n  };\r\n\r\n  const handleBackspace = (index) => {\r\n    // Handle Backspace key\r\n    if (index > 0) {\r\n      const newEnteredOTP = enteredOTP.split(\"\");\r\n      newEnteredOTP[index - 1] = \"\";\r\n      setEnteredOTP(newEnteredOTP.join(\"\"));\r\n      inputRefs.current[index - 1].focus();\r\n    } else if (index === 0) {\r\n      setEnteredOTP(\"\");\r\n    }\r\n  };\r\n  // this is for signin page\r\n  useEffect(() => {\r\n    if (checkOtp === false) {\r\n      if (enteredOTP === generatedOTP) {\r\n        console.log(\"OTP is correct. Redirect or perform another action.\");\r\n        alert(\"OTP is correct.\");\r\n        setCheckOtp(false);\r\n      } else {\r\n        console.log(\"Incorrect OTP. Please try again.\");\r\n        alert(\"Incorrect OTP. Please try again.\");\r\n        setCheckOtp(true);\r\n      }\r\n    }\r\n  }, [checkOtp]);\r\n\r\n  //This part is for signup page\r\n  useEffect(() => {\r\n    if (signup_checkOtp === false) {\r\n      if (enteredOTP === generatedOTP) {\r\n        // If OTP is correct, you can perform an action here\r\n        console.log(\"OTP is correct. Redirect or perform another action.\");\r\n        alert(\"OTP is correct.\");\r\n        setSignup_checkOtp(false);\r\n        setRedicrectToDetail(true);\r\n      } else {\r\n        // If OTP is incorrect, you can handle it (e.g., show an error message)\r\n        console.log(\"Incorrect OTP. Please try again.\");\r\n        alert(\"Incorrect OTP. Please try again.\");\r\n        setSignup_checkOtp(true);\r\n      }\r\n    }\r\n  }, [signup_checkOtp]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"enter-mob-inner-div2\">\r\n        <div className=\"verify2\">\r\n          <h4>Verify your mobile number</h4>\r\n        </div>\r\n        <div>\r\n          <h6>\r\n            Please enter the 4-digit verification code sent to\r\n            <b>\r\n              +{countryCode} {mobileNumber}\r\n            </b>\r\n          </h6>\r\n        </div>\r\n        <div className=\"verify2-input\">\r\n          {[...Array(4)].map((_, index) => (\r\n            <input\r\n              required\r\n              key={index}\r\n              type=\"text\"\r\n              maxLength=\"1\"\r\n              pattern=\"\\d*\"\r\n              value={enteredOTP[index] || \"\"}\r\n              onChange={(e) => handleOTPChange(index, e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Backspace\") {\r\n                  e.preventDefault();\r\n                  handleBackspace(index);\r\n                }\r\n              }}\r\n              ref={(el) => (inputRefs.current[index] = el)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"timer\">\r\n          {seconds > 0 ? (\r\n            <h6>\r\n              Expect code in <b> {seconds} seconds</b>\r\n            </h6>\r\n          ) : (\r\n            <h6 onClick={restartTimer}>\r\n              <span>Resend</span>\r\n            </h6>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptVerify;\r\n","E:\\ui\\src\\components\\signin\\SignUpDetails.jsx",["745","746"],"E:\\ui\\src\\pages\\home\\Signup.jsx",["747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776"],"E:\\ui\\src\\components\\signin\\SubBtn.jsx",[],"E:\\ui\\src\\pages\\home\\Project.jsx",[],"E:\\ui\\src\\components\\project-slider\\Slider.jsx",["777","778"],"E:\\ui\\src\\components\\project-slider\\Menu.jsx",[],{"ruleId":"779","replacedBy":"780"},{"ruleId":"781","replacedBy":"782"},{"ruleId":"783","severity":1,"message":"784","line":3,"column":8,"nodeType":"785","messageId":"786","endLine":3,"endColumn":20},{"ruleId":"783","severity":1,"message":"787","line":4,"column":8,"nodeType":"785","messageId":"786","endLine":4,"endColumn":15},{"ruleId":"783","severity":1,"message":"788","line":5,"column":8,"nodeType":"785","messageId":"786","endLine":5,"endColumn":19},{"ruleId":"783","severity":1,"message":"789","line":13,"column":8,"nodeType":"785","messageId":"786","endLine":13,"endColumn":19},{"ruleId":"783","severity":1,"message":"790","line":44,"column":8,"nodeType":"785","messageId":"786","endLine":44,"endColumn":22},{"ruleId":"783","severity":1,"message":"791","line":45,"column":8,"nodeType":"785","messageId":"786","endLine":45,"endColumn":30},{"ruleId":"783","severity":1,"message":"792","line":48,"column":10,"nodeType":"785","messageId":"786","endLine":48,"endColumn":18},{"ruleId":"783","severity":1,"message":"793","line":89,"column":7,"nodeType":"785","messageId":"786","endLine":89,"endColumn":19},{"ruleId":"783","severity":1,"message":"794","line":108,"column":10,"nodeType":"785","messageId":"786","endLine":108,"endColumn":20},{"ruleId":"783","severity":1,"message":"795","line":111,"column":24,"nodeType":"785","messageId":"786","endLine":111,"endColumn":39},{"ruleId":"783","severity":1,"message":"796","line":124,"column":10,"nodeType":"785","messageId":"786","endLine":124,"endColumn":14},{"ruleId":"783","severity":1,"message":"797","line":126,"column":9,"nodeType":"785","messageId":"786","endLine":126,"endColumn":22},{"ruleId":"783","severity":1,"message":"798","line":191,"column":9,"nodeType":"785","messageId":"786","endLine":191,"endColumn":17},{"ruleId":"799","severity":1,"message":"800","line":720,"column":19,"nodeType":"801","endLine":720,"endColumn":77},{"ruleId":"802","severity":1,"message":"803","line":721,"column":21,"nodeType":"801","endLine":725,"endColumn":23},{"ruleId":"799","severity":1,"message":"800","line":729,"column":19,"nodeType":"801","endLine":729,"endColumn":68},{"ruleId":"802","severity":1,"message":"803","line":730,"column":21,"nodeType":"801","endLine":730,"endColumn":54},{"ruleId":"799","severity":1,"message":"800","line":734,"column":19,"nodeType":"801","endLine":734,"endColumn":66},{"ruleId":"802","severity":1,"message":"803","line":735,"column":21,"nodeType":"801","endLine":735,"endColumn":54},{"ruleId":"799","severity":1,"message":"800","line":750,"column":19,"nodeType":"801","endLine":753,"endColumn":20},{"ruleId":"799","severity":1,"message":"800","line":757,"column":19,"nodeType":"801","endLine":760,"endColumn":20},{"ruleId":"799","severity":1,"message":"800","line":764,"column":19,"nodeType":"801","endLine":764,"endColumn":77},{"ruleId":"799","severity":1,"message":"800","line":768,"column":19,"nodeType":"801","endLine":771,"endColumn":20},{"ruleId":"783","severity":1,"message":"804","line":29,"column":8,"nodeType":"785","messageId":"786","endLine":29,"endColumn":18},{"ruleId":"783","severity":1,"message":"805","line":46,"column":10,"nodeType":"785","messageId":"786","endLine":46,"endColumn":16},{"ruleId":"783","severity":1,"message":"806","line":49,"column":10,"nodeType":"785","messageId":"786","endLine":49,"endColumn":24},{"ruleId":"783","severity":1,"message":"807","line":54,"column":10,"nodeType":"785","messageId":"786","endLine":54,"endColumn":19},{"ruleId":"783","severity":1,"message":"808","line":54,"column":21,"nodeType":"785","messageId":"786","endLine":54,"endColumn":33},{"ruleId":"783","severity":1,"message":"809","line":66,"column":7,"nodeType":"785","messageId":"786","endLine":66,"endColumn":12},{"ruleId":"810","severity":1,"message":"811","line":101,"column":6,"nodeType":"812","endLine":101,"endColumn":18,"suggestions":"813"},{"ruleId":"810","severity":1,"message":"814","line":118,"column":6,"nodeType":"812","endLine":118,"endColumn":8,"suggestions":"815"},{"ruleId":"783","severity":1,"message":"816","line":135,"column":12,"nodeType":"785","messageId":"786","endLine":135,"endColumn":22},{"ruleId":"783","severity":1,"message":"817","line":149,"column":9,"nodeType":"785","messageId":"786","endLine":149,"endColumn":15},{"ruleId":"783","severity":1,"message":"818","line":16,"column":8,"nodeType":"785","messageId":"786","endLine":16,"endColumn":20},{"ruleId":"810","severity":1,"message":"819","line":45,"column":18,"nodeType":"820","endLine":45,"endColumn":62},{"ruleId":"783","severity":1,"message":"821","line":11,"column":8,"nodeType":"785","messageId":"786","endLine":11,"endColumn":18},{"ruleId":"810","severity":1,"message":"819","line":45,"column":18,"nodeType":"820","endLine":45,"endColumn":62},{"ruleId":"802","severity":1,"message":"803","line":123,"column":19,"nodeType":"801","endLine":123,"endColumn":81},{"ruleId":"783","severity":1,"message":"822","line":2,"column":8,"nodeType":"785","messageId":"786","endLine":2,"endColumn":17},{"ruleId":"783","severity":1,"message":"823","line":3,"column":8,"nodeType":"785","messageId":"786","endLine":3,"endColumn":16},{"ruleId":"783","severity":1,"message":"824","line":13,"column":10,"nodeType":"785","messageId":"786","endLine":13,"endColumn":22},{"ruleId":"783","severity":1,"message":"825","line":14,"column":10,"nodeType":"785","messageId":"786","endLine":14,"endColumn":23},{"ruleId":"783","severity":1,"message":"826","line":39,"column":9,"nodeType":"785","messageId":"786","endLine":39,"endColumn":18},{"ruleId":"783","severity":1,"message":"827","line":1,"column":8,"nodeType":"785","messageId":"786","endLine":1,"endColumn":17},{"ruleId":"783","severity":1,"message":"828","line":4,"column":10,"nodeType":"785","messageId":"786","endLine":4,"endColumn":14},{"ruleId":"783","severity":1,"message":"829","line":1,"column":17,"nodeType":"785","messageId":"786","endLine":1,"endColumn":25},{"ruleId":"783","severity":1,"message":"830","line":4,"column":8,"nodeType":"785","messageId":"786","endLine":4,"endColumn":19},{"ruleId":"783","severity":1,"message":"831","line":5,"column":8,"nodeType":"785","messageId":"786","endLine":5,"endColumn":17},{"ruleId":"783","severity":1,"message":"806","line":18,"column":12,"nodeType":"785","messageId":"786","endLine":18,"endColumn":26},{"ruleId":"783","severity":1,"message":"832","line":19,"column":12,"nodeType":"785","messageId":"786","endLine":19,"endColumn":36},{"ruleId":"783","severity":1,"message":"833","line":19,"column":38,"nodeType":"785","messageId":"786","endLine":19,"endColumn":65},{"ruleId":"783","severity":1,"message":"834","line":36,"column":5,"nodeType":"785","messageId":"786","endLine":36,"endColumn":13},{"ruleId":"783","severity":1,"message":"817","line":39,"column":9,"nodeType":"785","messageId":"786","endLine":39,"endColumn":15},{"ruleId":"783","severity":1,"message":"835","line":4,"column":8,"nodeType":"785","messageId":"786","endLine":4,"endColumn":13},{"ruleId":"836","severity":1,"message":"837","line":77,"column":17,"nodeType":"801","endLine":77,"endColumn":74},{"ruleId":"783","severity":1,"message":"838","line":8,"column":11,"nodeType":"785","messageId":"786","endLine":8,"endColumn":22},{"ruleId":"783","severity":1,"message":"839","line":15,"column":12,"nodeType":"785","messageId":"786","endLine":15,"endColumn":20},{"ruleId":"783","severity":1,"message":"840","line":21,"column":12,"nodeType":"785","messageId":"786","endLine":21,"endColumn":30},{"ruleId":"841","severity":1,"message":"842","line":45,"column":14,"nodeType":"785","messageId":"843","endLine":45,"endColumn":25},{"ruleId":"783","severity":1,"message":"844","line":57,"column":11,"nodeType":"785","messageId":"786","endLine":57,"endColumn":25},{"ruleId":"783","severity":1,"message":"845","line":221,"column":14,"nodeType":"785","messageId":"786","endLine":221,"endColumn":28},{"ruleId":"783","severity":1,"message":"846","line":250,"column":14,"nodeType":"785","messageId":"786","endLine":250,"endColumn":26},{"ruleId":"783","severity":1,"message":"847","line":267,"column":14,"nodeType":"785","messageId":"786","endLine":267,"endColumn":28},{"ruleId":"848","severity":1,"message":"849","line":307,"column":184,"nodeType":"850","endLine":307,"endColumn":243},{"ruleId":"848","severity":1,"message":"849","line":308,"column":187,"nodeType":"850","endLine":308,"endColumn":250},{"ruleId":"848","severity":1,"message":"849","line":309,"column":187,"nodeType":"850","endLine":309,"endColumn":247},{"ruleId":"851","severity":1,"message":"852","line":1043,"column":57,"nodeType":"801","endLine":1043,"endColumn":151},{"ruleId":"836","severity":1,"message":"837","line":63,"column":17,"nodeType":"801","endLine":63,"endColumn":71},{"ruleId":"783","severity":1,"message":"853","line":2,"column":19,"nodeType":"785","messageId":"786","endLine":2,"endColumn":25},{"ruleId":"783","severity":1,"message":"853","line":1,"column":28,"nodeType":"785","messageId":"786","endLine":1,"endColumn":34},{"ruleId":"783","severity":1,"message":"854","line":7,"column":8,"nodeType":"785","messageId":"786","endLine":7,"endColumn":18},{"ruleId":"783","severity":1,"message":"855","line":8,"column":8,"nodeType":"785","messageId":"786","endLine":8,"endColumn":13},{"ruleId":"783","severity":1,"message":"856","line":174,"column":12,"nodeType":"785","messageId":"786","endLine":174,"endColumn":20},{"ruleId":"783","severity":1,"message":"857","line":4,"column":8,"nodeType":"785","messageId":"786","endLine":4,"endColumn":18},{"ruleId":"783","severity":1,"message":"858","line":5,"column":8,"nodeType":"785","messageId":"786","endLine":5,"endColumn":15},{"ruleId":"783","severity":1,"message":"854","line":6,"column":8,"nodeType":"785","messageId":"786","endLine":6,"endColumn":18},{"ruleId":"783","severity":1,"message":"855","line":7,"column":8,"nodeType":"785","messageId":"786","endLine":7,"endColumn":13},{"ruleId":"783","severity":1,"message":"829","line":8,"column":10,"nodeType":"785","messageId":"786","endLine":8,"endColumn":18},{"ruleId":"783","severity":1,"message":"859","line":10,"column":8,"nodeType":"785","messageId":"786","endLine":10,"endColumn":22},{"ruleId":"783","severity":1,"message":"860","line":16,"column":12,"nodeType":"785","messageId":"786","endLine":16,"endColumn":20},{"ruleId":"783","severity":1,"message":"861","line":18,"column":12,"nodeType":"785","messageId":"786","endLine":18,"endColumn":20},{"ruleId":"783","severity":1,"message":"862","line":33,"column":12,"nodeType":"785","messageId":"786","endLine":33,"endColumn":20},{"ruleId":"783","severity":1,"message":"863","line":34,"column":12,"nodeType":"785","messageId":"786","endLine":34,"endColumn":23},{"ruleId":"783","severity":1,"message":"864","line":34,"column":25,"nodeType":"785","messageId":"786","endLine":34,"endColumn":39},{"ruleId":"783","severity":1,"message":"865","line":35,"column":12,"nodeType":"785","messageId":"786","endLine":35,"endColumn":24},{"ruleId":"783","severity":1,"message":"866","line":36,"column":12,"nodeType":"785","messageId":"786","endLine":36,"endColumn":21},{"ruleId":"810","severity":1,"message":"867","line":53,"column":8,"nodeType":"812","endLine":53,"endColumn":10,"suggestions":"868"},{"ruleId":"783","severity":1,"message":"853","line":1,"column":28,"nodeType":"785","messageId":"786","endLine":1,"endColumn":34},{"ruleId":"783","severity":1,"message":"869","line":2,"column":8,"nodeType":"785","messageId":"786","endLine":2,"endColumn":14},{"ruleId":"783","severity":1,"message":"854","line":7,"column":8,"nodeType":"785","messageId":"786","endLine":7,"endColumn":18},{"ruleId":"783","severity":1,"message":"855","line":8,"column":8,"nodeType":"785","messageId":"786","endLine":8,"endColumn":13},{"ruleId":"783","severity":1,"message":"856","line":196,"column":12,"nodeType":"785","messageId":"786","endLine":196,"endColumn":20},{"ruleId":"783","severity":1,"message":"869","line":2,"column":8,"nodeType":"785","messageId":"786","endLine":2,"endColumn":14},{"ruleId":"783","severity":1,"message":"857","line":4,"column":8,"nodeType":"785","messageId":"786","endLine":4,"endColumn":18},{"ruleId":"783","severity":1,"message":"858","line":5,"column":8,"nodeType":"785","messageId":"786","endLine":5,"endColumn":15},{"ruleId":"783","severity":1,"message":"854","line":6,"column":8,"nodeType":"785","messageId":"786","endLine":6,"endColumn":18},{"ruleId":"783","severity":1,"message":"855","line":7,"column":8,"nodeType":"785","messageId":"786","endLine":7,"endColumn":13},{"ruleId":"783","severity":1,"message":"835","line":9,"column":8,"nodeType":"785","messageId":"786","endLine":9,"endColumn":13},{"ruleId":"783","severity":1,"message":"859","line":10,"column":8,"nodeType":"785","messageId":"786","endLine":10,"endColumn":22},{"ruleId":"783","severity":1,"message":"870","line":15,"column":23,"nodeType":"785","messageId":"786","endLine":15,"endColumn":35},{"ruleId":"783","severity":1,"message":"871","line":17,"column":5,"nodeType":"785","messageId":"786","endLine":17,"endColumn":14},{"ruleId":"783","severity":1,"message":"830","line":14,"column":8,"nodeType":"785","messageId":"786","endLine":14,"endColumn":19},{"ruleId":"783","severity":1,"message":"872","line":19,"column":12,"nodeType":"785","messageId":"786","endLine":19,"endColumn":21},{"ruleId":"783","severity":1,"message":"873","line":20,"column":12,"nodeType":"785","messageId":"786","endLine":20,"endColumn":29},{"ruleId":"783","severity":1,"message":"874","line":21,"column":12,"nodeType":"785","messageId":"786","endLine":21,"endColumn":32},{"ruleId":"875","severity":1,"message":"876","line":199,"column":45,"nodeType":"877","messageId":"878","endLine":199,"endColumn":46},{"ruleId":"851","severity":1,"message":"852","line":435,"column":53,"nodeType":"801","endLine":439,"endColumn":55},{"ruleId":"851","severity":1,"message":"852","line":465,"column":53,"nodeType":"801","endLine":469,"endColumn":55},{"ruleId":"851","severity":1,"message":"852","line":266,"column":53,"nodeType":"801","endLine":270,"endColumn":55},{"ruleId":"851","severity":1,"message":"852","line":286,"column":53,"nodeType":"801","endLine":290,"endColumn":55},{"ruleId":"875","severity":1,"message":"876","line":192,"column":45,"nodeType":"877","messageId":"878","endLine":192,"endColumn":46},{"ruleId":"851","severity":1,"message":"852","line":496,"column":53,"nodeType":"801","endLine":500,"endColumn":55},{"ruleId":"783","severity":1,"message":"879","line":10,"column":5,"nodeType":"785","messageId":"786","endLine":10,"endColumn":17},{"ruleId":"848","severity":1,"message":"849","line":463,"column":103,"nodeType":"850","endLine":463,"endColumn":129},{"ruleId":"848","severity":1,"message":"849","line":466,"column":103,"nodeType":"850","endLine":466,"endColumn":129},{"ruleId":"851","severity":1,"message":"852","line":341,"column":53,"nodeType":"801","endLine":345,"endColumn":55},{"ruleId":"783","severity":1,"message":"880","line":14,"column":12,"nodeType":"785","messageId":"786","endLine":14,"endColumn":23},{"ruleId":"848","severity":1,"message":"849","line":264,"column":212,"nodeType":"850","endLine":264,"endColumn":268},{"ruleId":"848","severity":1,"message":"849","line":265,"column":212,"nodeType":"850","endLine":265,"endColumn":268},{"ruleId":"848","severity":1,"message":"849","line":266,"column":216,"nodeType":"850","endLine":266,"endColumn":273},{"ruleId":"848","severity":1,"message":"849","line":267,"column":213,"nodeType":"850","endLine":267,"endColumn":270},{"ruleId":"848","severity":1,"message":"849","line":268,"column":214,"nodeType":"850","endLine":268,"endColumn":273},{"ruleId":"851","severity":1,"message":"852","line":81,"column":46,"nodeType":"801","endLine":81,"endColumn":131},{"ruleId":"783","severity":1,"message":"879","line":8,"column":5,"nodeType":"785","messageId":"786","endLine":8,"endColumn":17},{"ruleId":"783","severity":1,"message":"881","line":161,"column":15,"nodeType":"785","messageId":"786","endLine":161,"endColumn":17},{"ruleId":"783","severity":1,"message":"879","line":9,"column":5,"nodeType":"785","messageId":"786","endLine":9,"endColumn":17},{"ruleId":"882","severity":1,"message":"883","line":81,"column":9,"nodeType":"884","endLine":81,"endColumn":19},{"ruleId":"783","severity":1,"message":"885","line":314,"column":59,"nodeType":"785","messageId":"786","endLine":314,"endColumn":70},{"ruleId":"783","severity":1,"message":"886","line":5,"column":19,"nodeType":"785","messageId":"786","endLine":5,"endColumn":31},{"ruleId":"783","severity":1,"message":"887","line":32,"column":21,"nodeType":"785","messageId":"786","endLine":32,"endColumn":29},{"ruleId":"888","severity":1,"message":"889","line":66,"column":20,"nodeType":"890","messageId":"891","endLine":66,"endColumn":44},{"ruleId":"851","severity":1,"message":"852","line":84,"column":49,"nodeType":"801","endLine":84,"endColumn":138},{"ruleId":"783","severity":1,"message":"892","line":8,"column":5,"nodeType":"785","messageId":"786","endLine":8,"endColumn":10},{"ruleId":"783","severity":1,"message":"893","line":61,"column":17,"nodeType":"785","messageId":"786","endLine":61,"endColumn":29},{"ruleId":"882","severity":1,"message":"883","line":84,"column":9,"nodeType":"884","endLine":84,"endColumn":26},{"ruleId":"851","severity":1,"message":"852","line":317,"column":53,"nodeType":"801","endLine":321,"endColumn":55},{"ruleId":"851","severity":1,"message":"852","line":337,"column":53,"nodeType":"801","endLine":341,"endColumn":55},{"ruleId":"848","severity":1,"message":"849","line":325,"column":103,"nodeType":"850","endLine":325,"endColumn":111},{"ruleId":"851","severity":1,"message":"852","line":332,"column":53,"nodeType":"801","endLine":336,"endColumn":55},{"ruleId":"783","severity":1,"message":"894","line":125,"column":14,"nodeType":"785","messageId":"786","endLine":125,"endColumn":31},{"ruleId":"783","severity":1,"message":"895","line":269,"column":15,"nodeType":"785","messageId":"786","endLine":269,"endColumn":22},{"ruleId":"783","severity":1,"message":"895","line":335,"column":15,"nodeType":"785","messageId":"786","endLine":335,"endColumn":22},{"ruleId":"783","severity":1,"message":"896","line":12,"column":27,"nodeType":"785","messageId":"786","endLine":12,"endColumn":43},{"ruleId":"851","severity":1,"message":"852","line":192,"column":57,"nodeType":"801","endLine":196,"endColumn":59},{"ruleId":"851","severity":1,"message":"852","line":212,"column":57,"nodeType":"801","endLine":216,"endColumn":59},{"ruleId":"851","severity":1,"message":"852","line":220,"column":57,"nodeType":"801","endLine":224,"endColumn":59},{"ruleId":"851","severity":1,"message":"852","line":367,"column":27,"nodeType":"801","endLine":371,"endColumn":29},{"ruleId":"851","severity":1,"message":"852","line":397,"column":27,"nodeType":"801","endLine":401,"endColumn":29},{"ruleId":"882","severity":1,"message":"883","line":89,"column":13,"nodeType":"884","endLine":89,"endColumn":30},{"ruleId":"851","severity":1,"message":"852","line":376,"column":53,"nodeType":"801","endLine":380,"endColumn":55},{"ruleId":"783","severity":1,"message":"897","line":3,"column":8,"nodeType":"785","messageId":"786","endLine":3,"endColumn":12},{"ruleId":"783","severity":1,"message":"898","line":7,"column":8,"nodeType":"785","messageId":"786","endLine":7,"endColumn":18},{"ruleId":"783","severity":1,"message":"899","line":18,"column":10,"nodeType":"785","messageId":"786","endLine":18,"endColumn":22},{"ruleId":"783","severity":1,"message":"900","line":25,"column":12,"nodeType":"785","messageId":"786","endLine":25,"endColumn":20},{"ruleId":"802","severity":1,"message":"803","line":120,"column":41,"nodeType":"801","endLine":120,"endColumn":74},{"ruleId":"901","severity":1,"message":"902","line":135,"column":121,"nodeType":"801","endLine":135,"endColumn":153},{"ruleId":"810","severity":1,"message":"903","line":51,"column":8,"nodeType":"812","endLine":51,"endColumn":10,"suggestions":"904"},{"ruleId":"799","severity":1,"message":"800","line":118,"column":37,"nodeType":"801","endLine":118,"endColumn":121},{"ruleId":"783","severity":1,"message":"839","line":13,"column":12,"nodeType":"785","messageId":"786","endLine":13,"endColumn":20},{"ruleId":"783","severity":1,"message":"840","line":19,"column":12,"nodeType":"785","messageId":"786","endLine":19,"endColumn":30},{"ruleId":"783","severity":1,"message":"844","line":46,"column":11,"nodeType":"785","messageId":"786","endLine":46,"endColumn":25},{"ruleId":"783","severity":1,"message":"905","line":83,"column":11,"nodeType":"785","messageId":"786","endLine":83,"endColumn":19},{"ruleId":"848","severity":1,"message":"849","line":297,"column":184,"nodeType":"850","endLine":297,"endColumn":243},{"ruleId":"848","severity":1,"message":"849","line":298,"column":187,"nodeType":"850","endLine":298,"endColumn":250},{"ruleId":"848","severity":1,"message":"849","line":299,"column":187,"nodeType":"850","endLine":299,"endColumn":247},{"ruleId":"851","severity":1,"message":"852","line":1049,"column":57,"nodeType":"801","endLine":1049,"endColumn":151},{"ruleId":"901","severity":1,"message":"902","line":64,"column":34,"nodeType":"801","endLine":64,"endColumn":69},{"ruleId":"783","severity":1,"message":"879","line":8,"column":5,"nodeType":"785","messageId":"786","endLine":8,"endColumn":17},{"ruleId":"882","severity":1,"message":"883","line":83,"column":9,"nodeType":"884","endLine":83,"endColumn":19},{"ruleId":"882","severity":1,"message":"883","line":84,"column":9,"nodeType":"884","endLine":84,"endColumn":19},{"ruleId":"783","severity":1,"message":"881","line":160,"column":15,"nodeType":"785","messageId":"786","endLine":160,"endColumn":17},{"ruleId":"783","severity":1,"message":"845","line":97,"column":14,"nodeType":"785","messageId":"786","endLine":97,"endColumn":28},{"ruleId":"783","severity":1,"message":"879","line":9,"column":5,"nodeType":"785","messageId":"786","endLine":9,"endColumn":17},{"ruleId":"882","severity":1,"message":"883","line":78,"column":9,"nodeType":"884","endLine":78,"endColumn":19},{"ruleId":"848","severity":1,"message":"849","line":479,"column":103,"nodeType":"850","endLine":479,"endColumn":129},{"ruleId":"848","severity":1,"message":"849","line":482,"column":103,"nodeType":"850","endLine":482,"endColumn":129},{"ruleId":"810","severity":1,"message":"906","line":25,"column":8,"nodeType":"812","endLine":25,"endColumn":10,"suggestions":"907"},{"ruleId":"848","severity":1,"message":"849","line":209,"column":212,"nodeType":"850","endLine":209,"endColumn":260},{"ruleId":"848","severity":1,"message":"849","line":210,"column":213,"nodeType":"850","endLine":210,"endColumn":262},{"ruleId":"848","severity":1,"message":"849","line":217,"column":204,"nodeType":"850","endLine":217,"endColumn":261},{"ruleId":"848","severity":1,"message":"849","line":218,"column":208,"nodeType":"850","endLine":218,"endColumn":266},{"ruleId":"848","severity":1,"message":"849","line":219,"column":205,"nodeType":"850","endLine":219,"endColumn":263},{"ruleId":"848","severity":1,"message":"849","line":220,"column":206,"nodeType":"850","endLine":220,"endColumn":265},{"ruleId":"810","severity":1,"message":"908","line":17,"column":6,"nodeType":"812","endLine":17,"endColumn":8,"suggestions":"909"},{"ruleId":"783","severity":1,"message":"910","line":9,"column":7,"nodeType":"785","messageId":"786","endLine":9,"endColumn":28},{"ruleId":"783","severity":1,"message":"911","line":27,"column":5,"nodeType":"785","messageId":"786","endLine":27,"endColumn":20},{"ruleId":"783","severity":1,"message":"912","line":34,"column":12,"nodeType":"785","messageId":"786","endLine":34,"endColumn":24},{"ruleId":"783","severity":1,"message":"913","line":34,"column":26,"nodeType":"785","messageId":"786","endLine":34,"endColumn":41},{"ruleId":"783","severity":1,"message":"914","line":36,"column":11,"nodeType":"785","messageId":"786","endLine":36,"endColumn":20},{"ruleId":"810","severity":1,"message":"915","line":66,"column":8,"nodeType":"812","endLine":66,"endColumn":13,"suggestions":"916"},{"ruleId":"917","severity":1,"message":"918","line":107,"column":85,"nodeType":"877","messageId":"919","endLine":107,"endColumn":87},{"ruleId":"783","severity":1,"message":"910","line":11,"column":7,"nodeType":"785","messageId":"786","endLine":11,"endColumn":28},{"ruleId":"783","severity":1,"message":"911","line":36,"column":5,"nodeType":"785","messageId":"786","endLine":36,"endColumn":20},{"ruleId":"783","severity":1,"message":"920","line":44,"column":12,"nodeType":"785","messageId":"786","endLine":44,"endColumn":25},{"ruleId":"783","severity":1,"message":"921","line":44,"column":27,"nodeType":"785","messageId":"786","endLine":44,"endColumn":39},{"ruleId":"783","severity":1,"message":"922","line":45,"column":12,"nodeType":"785","messageId":"786","endLine":45,"endColumn":24},{"ruleId":"783","severity":1,"message":"923","line":45,"column":26,"nodeType":"785","messageId":"786","endLine":45,"endColumn":41},{"ruleId":"783","severity":1,"message":"912","line":46,"column":12,"nodeType":"785","messageId":"786","endLine":46,"endColumn":24},{"ruleId":"783","severity":1,"message":"913","line":46,"column":26,"nodeType":"785","messageId":"786","endLine":46,"endColumn":41},{"ruleId":"783","severity":1,"message":"914","line":48,"column":11,"nodeType":"785","messageId":"786","endLine":48,"endColumn":20},{"ruleId":"810","severity":1,"message":"924","line":80,"column":8,"nodeType":"812","endLine":80,"endColumn":13,"suggestions":"925"},{"ruleId":"917","severity":1,"message":"918","line":123,"column":41,"nodeType":"877","messageId":"919","endLine":123,"endColumn":43},{"ruleId":"783","severity":1,"message":"793","line":64,"column":7,"nodeType":"785","messageId":"786","endLine":64,"endColumn":19},{"ruleId":"783","severity":1,"message":"926","line":68,"column":7,"nodeType":"785","messageId":"786","endLine":68,"endColumn":17},{"ruleId":"783","severity":1,"message":"794","line":76,"column":10,"nodeType":"785","messageId":"786","endLine":76,"endColumn":20},{"ruleId":"783","severity":1,"message":"927","line":77,"column":10,"nodeType":"785","messageId":"786","endLine":77,"endColumn":21},{"ruleId":"783","severity":1,"message":"928","line":78,"column":10,"nodeType":"785","messageId":"786","endLine":78,"endColumn":22},{"ruleId":"783","severity":1,"message":"929","line":78,"column":24,"nodeType":"785","messageId":"786","endLine":78,"endColumn":39},{"ruleId":"783","severity":1,"message":"930","line":79,"column":10,"nodeType":"785","messageId":"786","endLine":79,"endColumn":22},{"ruleId":"783","severity":1,"message":"795","line":79,"column":24,"nodeType":"785","messageId":"786","endLine":79,"endColumn":39},{"ruleId":"783","severity":1,"message":"931","line":80,"column":10,"nodeType":"785","messageId":"786","endLine":80,"endColumn":24},{"ruleId":"783","severity":1,"message":"932","line":81,"column":10,"nodeType":"785","messageId":"786","endLine":81,"endColumn":22},{"ruleId":"783","severity":1,"message":"933","line":81,"column":24,"nodeType":"785","messageId":"786","endLine":81,"endColumn":39},{"ruleId":"783","severity":1,"message":"934","line":83,"column":10,"nodeType":"785","messageId":"786","endLine":83,"endColumn":26},{"ruleId":"783","severity":1,"message":"796","line":92,"column":10,"nodeType":"785","messageId":"786","endLine":92,"endColumn":14},{"ruleId":"783","severity":1,"message":"797","line":94,"column":9,"nodeType":"785","messageId":"786","endLine":94,"endColumn":22},{"ruleId":"783","severity":1,"message":"935","line":128,"column":9,"nodeType":"785","messageId":"786","endLine":128,"endColumn":19},{"ruleId":"783","severity":1,"message":"798","line":148,"column":9,"nodeType":"785","messageId":"786","endLine":148,"endColumn":17},{"ruleId":"783","severity":1,"message":"936","line":289,"column":9,"nodeType":"785","messageId":"786","endLine":289,"endColumn":23},{"ruleId":"783","severity":1,"message":"937","line":295,"column":9,"nodeType":"785","messageId":"786","endLine":295,"endColumn":20},{"ruleId":"783","severity":1,"message":"938","line":303,"column":9,"nodeType":"785","messageId":"786","endLine":303,"endColumn":21},{"ruleId":"783","severity":1,"message":"939","line":372,"column":9,"nodeType":"785","messageId":"786","endLine":372,"endColumn":23},{"ruleId":"783","severity":1,"message":"940","line":376,"column":9,"nodeType":"785","messageId":"786","endLine":376,"endColumn":20},{"ruleId":"917","severity":1,"message":"918","line":474,"column":27,"nodeType":"877","messageId":"919","endLine":474,"endColumn":29},{"ruleId":"917","severity":1,"message":"918","line":481,"column":30,"nodeType":"877","messageId":"919","endLine":481,"endColumn":32},{"ruleId":"917","severity":1,"message":"918","line":495,"column":32,"nodeType":"877","messageId":"919","endLine":495,"endColumn":34},{"ruleId":"917","severity":1,"message":"918","line":497,"column":36,"nodeType":"877","messageId":"919","endLine":497,"endColumn":38},{"ruleId":"917","severity":1,"message":"918","line":509,"column":32,"nodeType":"877","messageId":"919","endLine":509,"endColumn":34},{"ruleId":"917","severity":1,"message":"918","line":511,"column":36,"nodeType":"877","messageId":"919","endLine":511,"endColumn":38},{"ruleId":"917","severity":1,"message":"918","line":537,"column":32,"nodeType":"877","messageId":"919","endLine":537,"endColumn":34},{"ruleId":"917","severity":1,"message":"918","line":539,"column":36,"nodeType":"877","messageId":"919","endLine":539,"endColumn":38},{"ruleId":"783","severity":1,"message":"829","line":1,"column":17,"nodeType":"785","messageId":"786","endLine":1,"endColumn":25},{"ruleId":"810","severity":1,"message":"941","line":84,"column":6,"nodeType":"812","endLine":84,"endColumn":16,"suggestions":"942"},{"ruleId":"810","severity":1,"message":"943","line":102,"column":6,"nodeType":"812","endLine":102,"endColumn":23,"suggestions":"944"},{"ruleId":"917","severity":1,"message":"918","line":10,"column":24,"nodeType":"877","messageId":"919","endLine":10,"endColumn":26},{"ruleId":"810","severity":1,"message":"945","line":20,"column":6,"nodeType":"812","endLine":20,"endColumn":48,"suggestions":"946"},{"ruleId":"783","severity":1,"message":"793","line":64,"column":7,"nodeType":"785","messageId":"786","endLine":64,"endColumn":19},{"ruleId":"783","severity":1,"message":"926","line":68,"column":7,"nodeType":"785","messageId":"786","endLine":68,"endColumn":17},{"ruleId":"783","severity":1,"message":"794","line":76,"column":10,"nodeType":"785","messageId":"786","endLine":76,"endColumn":20},{"ruleId":"783","severity":1,"message":"927","line":77,"column":10,"nodeType":"785","messageId":"786","endLine":77,"endColumn":21},{"ruleId":"783","severity":1,"message":"928","line":78,"column":10,"nodeType":"785","messageId":"786","endLine":78,"endColumn":22},{"ruleId":"783","severity":1,"message":"929","line":78,"column":24,"nodeType":"785","messageId":"786","endLine":78,"endColumn":39},{"ruleId":"783","severity":1,"message":"930","line":79,"column":10,"nodeType":"785","messageId":"786","endLine":79,"endColumn":22},{"ruleId":"783","severity":1,"message":"795","line":79,"column":24,"nodeType":"785","messageId":"786","endLine":79,"endColumn":39},{"ruleId":"783","severity":1,"message":"931","line":80,"column":10,"nodeType":"785","messageId":"786","endLine":80,"endColumn":24},{"ruleId":"783","severity":1,"message":"932","line":81,"column":10,"nodeType":"785","messageId":"786","endLine":81,"endColumn":22},{"ruleId":"783","severity":1,"message":"933","line":81,"column":24,"nodeType":"785","messageId":"786","endLine":81,"endColumn":39},{"ruleId":"783","severity":1,"message":"934","line":83,"column":10,"nodeType":"785","messageId":"786","endLine":83,"endColumn":26},{"ruleId":"783","severity":1,"message":"796","line":92,"column":10,"nodeType":"785","messageId":"786","endLine":92,"endColumn":14},{"ruleId":"783","severity":1,"message":"797","line":94,"column":9,"nodeType":"785","messageId":"786","endLine":94,"endColumn":22},{"ruleId":"783","severity":1,"message":"935","line":128,"column":9,"nodeType":"785","messageId":"786","endLine":128,"endColumn":19},{"ruleId":"783","severity":1,"message":"798","line":148,"column":9,"nodeType":"785","messageId":"786","endLine":148,"endColumn":17},{"ruleId":"783","severity":1,"message":"936","line":289,"column":9,"nodeType":"785","messageId":"786","endLine":289,"endColumn":23},{"ruleId":"783","severity":1,"message":"937","line":295,"column":9,"nodeType":"785","messageId":"786","endLine":295,"endColumn":20},{"ruleId":"783","severity":1,"message":"938","line":303,"column":9,"nodeType":"785","messageId":"786","endLine":303,"endColumn":21},{"ruleId":"783","severity":1,"message":"939","line":372,"column":9,"nodeType":"785","messageId":"786","endLine":372,"endColumn":23},{"ruleId":"783","severity":1,"message":"940","line":376,"column":9,"nodeType":"785","messageId":"786","endLine":376,"endColumn":20},{"ruleId":"917","severity":1,"message":"918","line":439,"column":27,"nodeType":"877","messageId":"919","endLine":439,"endColumn":29},{"ruleId":"917","severity":1,"message":"918","line":495,"column":27,"nodeType":"877","messageId":"919","endLine":495,"endColumn":29},{"ruleId":"917","severity":1,"message":"918","line":502,"column":30,"nodeType":"877","messageId":"919","endLine":502,"endColumn":32},{"ruleId":"917","severity":1,"message":"918","line":518,"column":32,"nodeType":"877","messageId":"919","endLine":518,"endColumn":34},{"ruleId":"917","severity":1,"message":"918","line":520,"column":36,"nodeType":"877","messageId":"919","endLine":520,"endColumn":38},{"ruleId":"917","severity":1,"message":"918","line":532,"column":32,"nodeType":"877","messageId":"919","endLine":532,"endColumn":34},{"ruleId":"917","severity":1,"message":"918","line":534,"column":36,"nodeType":"877","messageId":"919","endLine":534,"endColumn":38},{"ruleId":"917","severity":1,"message":"918","line":560,"column":32,"nodeType":"877","messageId":"919","endLine":560,"endColumn":34},{"ruleId":"917","severity":1,"message":"918","line":562,"column":36,"nodeType":"877","messageId":"919","endLine":562,"endColumn":38},{"ruleId":"783","severity":1,"message":"947","line":60,"column":10,"nodeType":"785","messageId":"786","endLine":60,"endColumn":14},{"ruleId":"783","severity":1,"message":"948","line":60,"column":16,"nodeType":"785","messageId":"786","endLine":60,"endColumn":23},"no-native-reassign",["949"],"no-negated-in-lhs",["950"],"no-unused-vars","'ChoriaWhiteO' is defined but never used.","Identifier","unusedVar","'ChoriaO' is defined but never used.","'PlayBtnIcon' is defined but never used.","'YoutubeIcon' is defined but never used.","'ExploreSection' is defined but never used.","'ExternalExploreSection' is defined but never used.","'autofill' is defined but never used.","'initFirebase' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'setIsComingOpen' is assigned a value but never used.","'size' is assigned a value but never used.","'inputsHandler' is assigned a value but never used.","'sendmail' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'musicicon2' is defined but never used.","'pcount' is assigned a value but never used.","'openDetailsBox' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setisLoading' is assigned a value but never used.","'pName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pNameCount'. Either include it or remove the dependency array.","ArrayExpression",["951"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["952"],"'removeIcon' is defined but never used.","'goback' is assigned a value but never used.","'Managetracks' is defined but never used.","Assignments to the 'userData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'ComingSoon' is defined but never used.","'PauseIcon' is defined but never used.","'PlayIcon' is defined but never used.","'seekBarValue' is assigned a value but never used.","'isVideoPaused' is assigned a value but never used.","'seekVideo' is assigned a value but never used.","'userEvent' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'ShowDetails' is defined but never used.","'TrackShow' is defined but never used.","'storeTracksFolderSection' is assigned a value but never used.","'setStoreTracksFolderSection' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'axios' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'showaddpage' is assigned a value but never used.","'datafill' is assigned a value but never used.","'changerejectstatus' is assigned a value but never used.","no-redeclare","'getToTitles' is already defined.","redeclared","'chnagepageitem' is assigned a value but never used.","'deleteemployee' is defined but never used.","'statuschange' is defined but never used.","'rejectedChange' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useRef' is defined but never used.","'trackImage' is defined but never used.","'track' is defined but never used.","'username' is assigned a value but never used.","'featureBox' is defined but never used.","'iconBox' is defined but never used.","'ExploreOverlay' is defined but never used.","'userData' is assigned a value but never used.","'sendData' is assigned a value but never used.","'fullName' is assigned a value but never used.","'companyName' is assigned a value but never used.","'setCompanyName' is assigned a value but never used.","'addressAdded' is assigned a value but never used.","'cityAdded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'trackdetail'. Either include it or remove the dependency array.",["953"],"'sprite' is defined but never used.","'setFreetrack' is assigned a value but never used.","'useEffect' is assigned a value but never used.","'trackData' is assigned a value but never used.","'featuredTrackData' is assigned a value but never used.","'nonFeaturedTrackData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'lengthdefine' is defined but never used.","'projectlist' is assigned a value but never used.","'id' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'managername' is assigned a value but never used.","'docServerUrl' is defined but never used.","'custname' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'photo' is defined but never used.","'statuschange' is assigned a value but never used.","'renderTableHeader' is defined but never used.","'options' is assigned a value but never used.","'setPageSelection' is assigned a value but never used.","'Swal' is defined but never used.","'folderIcon' is defined but never used.","'ChoiraLoader' is defined but never used.","'seardata' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'props.param' and 'stopSound'. Either include them or remove the dependency array.",["954"],"'showedit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["955"],"React Hook useEffect has a missing dependency: 'getidbytrack'. Either include it or remove the dependency array.",["956"],"'formWaveSurferOptions' is assigned a value but never used.","'oldplayingAudio' is assigned a value but never used.","'audioContext' is assigned a value but never used.","'setAudioContext' is assigned a value but never used.","'docServer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handlePlayPause', 'id', and 'wavesurfer'. Either include them or remove the dependency array. If 'setWaveform' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["957"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'openSoundPlay' is assigned a value but never used.","'setSoundPlay' is assigned a value but never used.","'playingAudio' is assigned a value but never used.","'setPlayingAudio' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'wavesurfer'. Either include them or remove the dependency array. If 'setWaveform' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["958"],"'innertitle' is assigned a value but never used.","'isLoginOpen' is assigned a value but never used.","'isSignUpOpen' is assigned a value but never used.","'setIsSignUpOpen' is assigned a value but never used.","'isComingOpen' is assigned a value but never used.","'isExplorerOpen' is assigned a value but never used.","'isScreenOpen' is assigned a value but never used.","'setIsScreenOpen' is assigned a value but never used.","'isvisiblecontact' is assigned a value but never used.","'closeModel' is assigned a value but never used.","'showComingSoon' is assigned a value but never used.","'proceedNext' is assigned a value but never used.","'spotifyLogin' is assigned a value but never used.","'connectedUsBox' is assigned a value but never used.","'connectedUs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'enteredOTP', 'generatedOTP', and 'setCheckOtp'. Either include them or remove the dependency array. If 'setCheckOtp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["959"],"React Hook useEffect has missing dependencies: 'enteredOTP', 'generatedOTP', 'setRedicrectToDetail', and 'setSignup_checkOtp'. Either include them or remove the dependency array. If 'setSignup_checkOtp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["960"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["961"],"'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},"Update the dependencies array to be: [pNameCount, passableId]",{"range":"984","text":"985"},"Update the dependencies array to be: [navigate]",{"range":"986","text":"987"},"Update the dependencies array to be: [trackdetail]",{"range":"988","text":"989"},"Update the dependencies array to be: [props.param, stopSound]",{"range":"990","text":"991"},"Update the dependencies array to be: [status]",{"range":"992","text":"993"},"Update the dependencies array to be: [getidbytrack]",{"range":"994","text":"995"},"Update the dependencies array to be: [handlePlayPause, id, url, wavesurfer]",{"range":"996","text":"997"},"Update the dependencies array to be: [id, url, wavesurfer]",{"range":"998","text":"999"},"Update the dependencies array to be: [checkOtp, enteredOTP, generatedOTP, setCheckOtp]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [enteredOTP, generatedOTP, setRedicrectToDetail, setSignup_checkOtp, signup_checkOtp]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [email, props, props.sendData, props.setSendData]",{"range":"1004","text":"1005"},[3300,3312],"[pNameCount, passableId]",[3639,3641],"[navigate]",[2097,2099],"[trackdetail]",[1969,1971],"[props.param, stopSound]",[767,769],"[status]",[473,475],"[getidbytrack]",[2458,2463],"[handlePlayPause, id, url, wavesurfer]",[2658,2663],"[id, url, wavesurfer]",[2391,2401],"[checkOtp, enteredOTP, generatedOTP, setCheckOtp]",[3052,3069],"[enteredOTP, generatedOTP, setRedicrectToDetail, setSignup_checkOtp, signup_checkOtp]",[596,638],"[email, props, props.sendData, props.setSendData]"]