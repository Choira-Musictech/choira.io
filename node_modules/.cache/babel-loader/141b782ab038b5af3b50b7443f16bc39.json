{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\components\\\\signin\\\\OptVerify.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OptVerify = ({\n  mobileNumber,\n  countryCode,\n  onOTPVerified,\n  setCheckOtp,\n  checkOtp\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(30);\n  const [generatedOTP, setGeneratedOTP] = useState(\"\");\n  const [enteredOTP, setEnteredOTP] = useState(\"\");\n  const inputRefs = useRef([]);\n  const handleContinue = () => {\n    // Compare entered OTP with the generated one\n    if (enteredOTP === generatedOTP) {\n      // If OTP is correct, call the parent component's callback\n      onOTPVerified();\n    } else {\n      // If OTP is incorrect, you can handle it (e.g., show an error message)\n      console.log(\"Incorrect OTP. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    // Generate a random OTP when the component mounts\n    generateOTP();\n\n    // Start the timer\n    const timer = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds > 0 ? prevSeconds - 1 : 0);\n    }, 1000);\n\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    // Set focus to the next input when enteredOTP changes\n    if (enteredOTP.length < inputRefs.current.length) {\n      inputRefs.current[enteredOTP.length].focus();\n    }\n  }, [enteredOTP]);\n  const generateOTP = () => {\n    const otp = Math.floor(Math.random() * 10000).toString().padStart(4, \"0\");\n    console.log(otp);\n    setGeneratedOTP(otp);\n  };\n  const restartTimer = () => {\n    // Reset the timer to its initial value and generate a new OTP\n    setSeconds(30);\n    generateOTP();\n  };\n  const handleOTPChange = (index, value) => {\n    // Handle OTP input change\n    const newEnteredOTP = enteredOTP.split(\"\");\n    newEnteredOTP[index] = value;\n    setEnteredOTP(newEnteredOTP.join(\"\"));\n  };\n  useEffect(() => {\n    if (checkOtp == false) {\n      if (enteredOTP === generatedOTP) {\n        // If OTP is correct, you can perform an action here\n        console.log(\"OTP is correct. Redirect or perform another action.\");\n        alert(\"OTP is correct. Redirect or perform another action.\");\n        setCheckOtp(false);\n      } else {\n        // If OTP is incorrect, you can handle it (e.g., show an error message)\n        console.log(\"Incorrect OTP. Please try again.\");\n        alert(\"Incorrect OTP. Please try again.\");\n        setCheckOtp(true);\n      }\n    }\n  }, [checkOtp]);\n\n  // const handleContinue = () => {\n  //   // Compare entered OTP with the generated one\n  //   if (enteredOTP === generatedOTP) {\n  //     // If OTP is correct, you can perform an action here\n  //     console.log(\"OTP is correct. Redirect or perform another action.\");\n  //   } else {\n  //     // If OTP is incorrect, you can handle it (e.g., show an error message)\n  //     console.log(\"Incorrect OTP. Please try again.\");\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enter-mob-inner-div2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify2\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Verify your mobile number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Please enter the 4-digit verification code sent to\", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"+\", countryCode, \" \", mobileNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify2-input\",\n        children: [...Array(4)].map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          maxLength: \"1\",\n          pattern: \"\\\\d*\",\n          value: enteredOTP[index] || \"\",\n          onChange: e => handleOTPChange(index, e.target.value),\n          ref: el => inputRefs.current[index] = el\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: seconds > 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Expect code in \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", seconds, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          onClick: restartTimer,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Resend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(OptVerify, \"VeMk2vSjioSDSVNJOsy6ybEt55Y=\");\n_c = OptVerify;\nexport default OptVerify;\nvar _c;\n$RefreshReg$(_c, \"OptVerify\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","OptVerify","mobileNumber","countryCode","onOTPVerified","setCheckOtp","checkOtp","_s","seconds","setSeconds","generatedOTP","setGeneratedOTP","enteredOTP","setEnteredOTP","inputRefs","handleContinue","console","log","generateOTP","timer","setInterval","prevSeconds","clearInterval","length","current","focus","otp","Math","floor","random","toString","padStart","restartTimer","handleOTPChange","index","value","newEnteredOTP","split","join","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","required","type","maxLength","pattern","onChange","e","target","ref","el","onClick","_c","$RefreshReg$"],"sources":["E:/ui/src/components/signin/OptVerify.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst OptVerify = ({\r\n  mobileNumber,\r\n  countryCode,\r\n  onOTPVerified,\r\n  setCheckOtp,\r\n  checkOtp,\r\n}) => {\r\n  const [seconds, setSeconds] = useState(30);\r\n  const [generatedOTP, setGeneratedOTP] = useState(\"\");\r\n  const [enteredOTP, setEnteredOTP] = useState(\"\");\r\n  const inputRefs = useRef([]);\r\n  const handleContinue = () => {\r\n    // Compare entered OTP with the generated one\r\n    if (enteredOTP === generatedOTP) {\r\n      // If OTP is correct, call the parent component's callback\r\n      onOTPVerified();\r\n    } else {\r\n      // If OTP is incorrect, you can handle it (e.g., show an error message)\r\n      console.log(\"Incorrect OTP. Please try again.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Generate a random OTP when the component mounts\r\n    generateOTP();\r\n\r\n    // Start the timer\r\n    const timer = setInterval(() => {\r\n      setSeconds((prevSeconds) => (prevSeconds > 0 ? prevSeconds - 1 : 0));\r\n    }, 1000);\r\n\r\n    // Clear the interval when the component is unmounted\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Set focus to the next input when enteredOTP changes\r\n    if (enteredOTP.length < inputRefs.current.length) {\r\n      inputRefs.current[enteredOTP.length].focus();\r\n    }\r\n  }, [enteredOTP]);\r\n\r\n  const generateOTP = () => {\r\n    const otp = Math.floor(Math.random() * 10000)\r\n      .toString()\r\n      .padStart(4, \"0\");\r\n    console.log(otp);\r\n    setGeneratedOTP(otp);\r\n  };\r\n\r\n  const restartTimer = () => {\r\n    // Reset the timer to its initial value and generate a new OTP\r\n    setSeconds(30);\r\n    generateOTP();\r\n  };\r\n\r\n  const handleOTPChange = (index, value) => {\r\n    // Handle OTP input change\r\n    const newEnteredOTP = enteredOTP.split(\"\");\r\n    newEnteredOTP[index] = value;\r\n    setEnteredOTP(newEnteredOTP.join(\"\"));\r\n  };\r\n  useEffect(() => {\r\n    if (checkOtp == false) {\r\n      if (enteredOTP === generatedOTP) {\r\n        // If OTP is correct, you can perform an action here\r\n        console.log(\"OTP is correct. Redirect or perform another action.\");\r\n        alert(\"OTP is correct. Redirect or perform another action.\");\r\n        setCheckOtp(false);\r\n      } else {\r\n        // If OTP is incorrect, you can handle it (e.g., show an error message)\r\n        console.log(\"Incorrect OTP. Please try again.\");\r\n        alert(\"Incorrect OTP. Please try again.\");\r\n        setCheckOtp(true);\r\n      }\r\n    }\r\n  }, [checkOtp]);\r\n\r\n  // const handleContinue = () => {\r\n  //   // Compare entered OTP with the generated one\r\n  //   if (enteredOTP === generatedOTP) {\r\n  //     // If OTP is correct, you can perform an action here\r\n  //     console.log(\"OTP is correct. Redirect or perform another action.\");\r\n  //   } else {\r\n  //     // If OTP is incorrect, you can handle it (e.g., show an error message)\r\n  //     console.log(\"Incorrect OTP. Please try again.\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"enter-mob-inner-div2\">\r\n        <div className=\"verify2\">\r\n          <h4>Verify your mobile number</h4>\r\n        </div>\r\n        <div>\r\n          <h6>\r\n            Please enter the 4-digit verification code sent to\r\n            <b>\r\n              +{countryCode} {mobileNumber}\r\n            </b>\r\n          </h6>\r\n        </div>\r\n        <div className=\"verify2-input\">\r\n          {[...Array(4)].map((_, index) => (\r\n            <input\r\n              required\r\n              key={index}\r\n              type=\"text\"\r\n              maxLength=\"1\"\r\n              pattern=\"\\d*\"\r\n              value={enteredOTP[index] || \"\"}\r\n              onChange={(e) => handleOTPChange(index, e.target.value)}\r\n              ref={(el) => (inputRefs.current[index] = el)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"timer\">\r\n          {seconds > 0 ? (\r\n            <h6>\r\n              Expect code in <b> {seconds} seconds</b>\r\n            </h6>\r\n          ) : (\r\n            <h6 onClick={restartTimer}>\r\n              <span>Resend</span>\r\n            </h6>\r\n          )}\r\n        </div>\r\n        <div>{/* <button onClick={handleContinue}>Continue</button> */}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptVerify;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAC;EACjBC,YAAY;EACZC,WAAW;EACXC,aAAa;EACbC,WAAW;EACXC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMoB,SAAS,GAAGlB,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,IAAIH,UAAU,KAAKF,YAAY,EAAE;MAC/B;MACAN,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACL;MACAY,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD;EACF,CAAC;EACDtB,SAAS,CAAC,MAAM;IACd;IACAuB,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BX,UAAU,CAAEY,WAAW,IAAMA,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAG,CAAC,GAAG,CAAE,CAAC;IACtE,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAENxB,SAAS,CAAC,MAAM;IACd;IACA,IAAIiB,UAAU,CAACW,MAAM,GAAGT,SAAS,CAACU,OAAO,CAACD,MAAM,EAAE;MAChDT,SAAS,CAACU,OAAO,CAACZ,UAAU,CAACW,MAAM,CAAC,CAACE,KAAK,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMQ,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAC1CC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnBf,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;IAChBf,eAAe,CAACe,GAAG,CAAC;EACtB,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAvB,UAAU,CAAC,EAAE,CAAC;IACdS,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMe,eAAe,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACxC;IACA,MAAMC,aAAa,GAAGxB,UAAU,CAACyB,KAAK,CAAC,EAAE,CAAC;IAC1CD,aAAa,CAACF,KAAK,CAAC,GAAGC,KAAK;IAC5BtB,aAAa,CAACuB,aAAa,CAACE,IAAI,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC;EACD3C,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,IAAI,KAAK,EAAE;MACrB,IAAIM,UAAU,KAAKF,YAAY,EAAE;QAC/B;QACAM,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;QAClEsB,KAAK,CAAC,qDAAqD,CAAC;QAC5DlC,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,MAAM;QACL;QACAW,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CsB,KAAK,CAAC,kCAAkC,CAAC;QACzClC,WAAW,CAAC,IAAI,CAAC;MACnB;IACF;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAwC,QAAA,eACE1C,OAAA;MAAK2C,SAAS,EAAC,sBAAsB;MAAAD,QAAA,gBACnC1C,OAAA;QAAK2C,SAAS,EAAC,SAAS;QAAAD,QAAA,eACtB1C,OAAA;UAAA0C,QAAA,EAAI;QAAyB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACN/C,OAAA;QAAA0C,QAAA,eACE1C,OAAA;UAAA0C,QAAA,GAAI,oDAEF,eAAA1C,OAAA;YAAA0C,QAAA,GAAG,GACA,EAACrC,WAAW,EAAC,GAAC,EAACD,YAAY;UAAA;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACN/C,OAAA;QAAK2C,SAAS,EAAC,eAAe;QAAAD,QAAA,EAC3B,CAAC,GAAGM,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEd,KAAK,kBAC1BpC,OAAA;UACEmD,QAAQ;UAERC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAC,GAAG;UACbC,OAAO,EAAC,MAAK;UACbjB,KAAK,EAAEvB,UAAU,CAACsB,KAAK,CAAC,IAAI,EAAG;UAC/BmB,QAAQ,EAAGC,CAAC,IAAKrB,eAAe,CAACC,KAAK,EAAEoB,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;UACxDqB,GAAG,EAAGC,EAAE,IAAM3C,SAAS,CAACU,OAAO,CAACU,KAAK,CAAC,GAAGuB;QAAI,GANxCvB,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN/C,OAAA;QAAK2C,SAAS,EAAC,OAAO;QAAAD,QAAA,EACnBhC,OAAO,GAAG,CAAC,gBACVV,OAAA;UAAA0C,QAAA,GAAI,iBACa,eAAA1C,OAAA;YAAA0C,QAAA,GAAG,GAAC,EAAChC,OAAO,EAAC,UAAQ;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,gBAEL/C,OAAA;UAAI4D,OAAO,EAAE1B,YAAa;UAAAQ,QAAA,eACxB1C,OAAA;YAAA0C,QAAA,EAAM;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN/C,OAAA;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE;EAAC,gBACN,CAAC;AAEP,CAAC;AAACtC,EAAA,CAnIIN,SAAS;AAAA0D,EAAA,GAAT1D,SAAS;AAqIf,eAAeA,SAAS;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}