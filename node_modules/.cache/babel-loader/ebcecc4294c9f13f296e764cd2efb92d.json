{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\components\\\\signin\\\\MyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [formattedDate, setFormattedDate] = useState(\"\");\n  const handleDateChange = e => {\n    const selectedDate = e.target.value;\n    // Handle the selectedDate as needed (e.g., store it in state)\n    setSelectedDate(selectedDate);\n    // Format and display the date in a custom way\n    formatAndSetDate(selectedDate);\n  };\n  const formatAndSetDate = date => {\n    // Implement your custom date formatting logic here\n    // For example, you can use a library like date-fns or moment.js\n    const formattedDateString = formatDate(date);\n    setFormattedDate(formattedDateString);\n  };\n  const formatDate = dateString => {\n    // Example: Format the date as DD/MMM/YYYY\n    const options = {\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n    const formattedDate = new Date(dateString).toLocaleDateString(\"en-US\", options);\n    return formattedDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate || \"\",\n      onChange: handleDateChange,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formattedDate,\n      readOnly: true,\n      onClick: () => {\n        // Show your custom date picker or modal here\n        // You can use a library like react-datepicker or build your own\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"SlDxtEeWnusIzb0x60T4SbCenqQ=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","selectedDate","setSelectedDate","formattedDate","setFormattedDate","handleDateChange","e","target","value","formatAndSetDate","date","formattedDateString","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","children","type","onChange","style","display","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onClick","_c","$RefreshReg$"],"sources":["E:/ui/src/components/signin/MyComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction MyComponent() {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [formattedDate, setFormattedDate] = useState(\"\");\r\n\r\n  const handleDateChange = (e) => {\r\n    const selectedDate = e.target.value;\r\n    // Handle the selectedDate as needed (e.g., store it in state)\r\n    setSelectedDate(selectedDate);\r\n    // Format and display the date in a custom way\r\n    formatAndSetDate(selectedDate);\r\n  };\r\n\r\n  const formatAndSetDate = (date) => {\r\n    // Implement your custom date formatting logic here\r\n    // For example, you can use a library like date-fns or moment.js\r\n    const formattedDateString = formatDate(date);\r\n    setFormattedDate(formattedDateString);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    // Example: Format the date as DD/MMM/YYYY\r\n    const options = { day: \"2-digit\", month: \"short\", year: \"numeric\" };\r\n    const formattedDate = new Date(dateString).toLocaleDateString(\r\n      \"en-US\",\r\n      options\r\n    );\r\n    return formattedDate;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Hidden input for actual date value */}\r\n      <input\r\n        type=\"date\"\r\n        value={selectedDate || \"\"}\r\n        onChange={handleDateChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n\r\n      {/* Visible input for displaying the formatted date */}\r\n      <input\r\n        type=\"text\"\r\n        value={formattedDate}\r\n        readOnly\r\n        onClick={() => {\r\n          // Show your custom date picker or modal here\r\n          // You can use a library like react-datepicker or build your own\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAML,YAAY,GAAGK,CAAC,CAACC,MAAM,CAACC,KAAK;IACnC;IACAN,eAAe,CAACD,YAAY,CAAC;IAC7B;IACAQ,gBAAgB,CAACR,YAAY,CAAC;EAChC,CAAC;EAED,MAAMQ,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA;IACA,MAAMC,mBAAmB,GAAGC,UAAU,CAACF,IAAI,CAAC;IAC5CN,gBAAgB,CAACO,mBAAmB,CAAC;EACvC,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC;IACA,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAU,CAAC;IACnE,MAAMd,aAAa,GAAG,IAAIe,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAC3D,OAAO,EACPL,OACF,CAAC;IACD,OAAOX,aAAa;EACtB,CAAC;EAED,oBACEL,OAAA;IAAAsB,QAAA,gBAEEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXb,KAAK,EAAEP,YAAY,IAAI,EAAG;MAC1BqB,QAAQ,EAAEjB,gBAAiB;MAC3BkB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAGF9B,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXb,KAAK,EAAEL,aAAc;MACrB0B,QAAQ;MACRC,OAAO,EAAEA,CAAA,KAAM;QACb;QACA;MAAA;IACA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CAnDQD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAqDpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}