{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\components\\\\signin\\\\MyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [customFormat, setCustomFormat] = useState(\"\");\n  const [formattedDate, setFormattedDate] = useState(\"\");\n  const currentDate = new Date();\n  const handleFormatChange = e => {\n    setCustomFormat(e.target.value);\n    formatAndSetDate(e.target.value);\n  };\n  const formatAndSetDate = format => {\n    const options = {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n    const formattedDateString = currentDate.toLocaleDateString(\"en-US\", options);\n\n    // Use a library like date-fns or moment.js for more advanced formatting\n    // This is a simple example and may not cover all custom format options\n    setFormattedDate(formattedDateString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Custom Date Format:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: customFormat,\n        onChange: handleFormatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Formatted Date: \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"E7W59kYcLubJB5KH4YrYGN85RlE=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","customFormat","setCustomFormat","formattedDate","setFormattedDate","currentDate","Date","handleFormatChange","e","target","value","formatAndSetDate","format","options","day","month","year","formattedDateString","toLocaleDateString","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ui/src/components/signin/MyComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction MyComponent() {\r\n  const [customFormat, setCustomFormat] = useState(\"\");\r\n  const [formattedDate, setFormattedDate] = useState(\"\");\r\n  const currentDate = new Date();\r\n\r\n  const handleFormatChange = (e) => {\r\n    setCustomFormat(e.target.value);\r\n    formatAndSetDate(e.target.value);\r\n  };\r\n\r\n  const formatAndSetDate = (format) => {\r\n    const options = { day: \"numeric\", month: \"short\", year: \"numeric\" };\r\n    const formattedDateString = currentDate.toLocaleDateString(\r\n      \"en-US\",\r\n      options\r\n    );\r\n\r\n    // Use a library like date-fns or moment.js for more advanced formatting\r\n    // This is a simple example and may not cover all custom format options\r\n    setFormattedDate(formattedDateString);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Custom Date Format:\r\n        <input type=\"text\" value={customFormat} onChange={handleFormatChange} />\r\n      </label>\r\n      <p>Formatted Date: {formattedDate}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMS,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAE9B,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChCN,eAAe,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BC,gBAAgB,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnC,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAU,CAAC;IACnE,MAAMC,mBAAmB,GAAGZ,WAAW,CAACa,kBAAkB,CACxD,OAAO,EACPL,OACF,CAAC;;IAED;IACA;IACAT,gBAAgB,CAACa,mBAAmB,CAAC;EACvC,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,GAAO,qBAEL,eAAArB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACV,KAAK,EAAET,YAAa;QAACoB,QAAQ,EAAEd;MAAmB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACR3B,OAAA;MAAAqB,QAAA,GAAG,kBAAgB,EAAChB,aAAa;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACzB,EAAA,CA/BQD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}