{"version":3,"sources":["assets/img/dashboard_img/dance.gif","components/chooseProject/CreateNewProject.jsx","components/chooseProject/ChooseType.jsx","assets/img/chooseType-img/ct1.png","assets/img/chooseType-img/ct2.jpeg","assets/img/chooseType-img/ct3.png","assets/img/chooseType-img/ct4.jpeg","assets/img/chooseType-img/ct5.jpeg","assets/img/chooseType-img/ct6.jpeg","assets/img/chooseType-img/ct7.jpeg","assets/img/chooseType-img/cg1.jpeg","assets/img/chooseType-img/cg3.jpeg","assets/img/chooseType-img/cg4.jpeg","assets/img/chooseType-img/cg5.jpeg","assets/img/chooseType-img/cg6.jpeg","components/chooseProject/ChooseGenre.jsx","components/chooseProject/ChooseMusicians.jsx","assets/img/chooseType-img/cm1.jpeg","assets/img/chooseType-img/cm2.jpeg","assets/img/chooseType-img/cm3.jpeg","assets/img/chooseType-img/cm4.jpeg","assets/img/chooseType-img/cm5.jpeg","assets/img/chooseType-img/cm6.jpeg","components/chooseProject/ChooseBudget.jsx","assets/img/chooseType-img/upload.svg","assets/img/chooseType-img/Music.svg","assets/img/chooseType-img/cross.svg","components/chooseProject/ShareLink.jsx","components/chooseProject/ProjectDelivery.jsx","assets/img/chooseType-img/song.gif","components/chooseProject/GoodName.jsx","components/chooseProject/AlmostDone.jsx","components/chooseProject/BookSession.jsx","assets/img/chooseType-img/connect1.jpg","assets/img/chooseType-img/connect2.jpg","assets/img/chooseType-img/connect3.jpg","assets/img/chooseType-img/timer.gif","components/chooseProject/ConnectInFewSecond.jsx","pages/produce/NewProject.jsx"],"names":["CreateNewProject","_ref","onNext","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","className","src","dancer","alt","onClick","gotoDashboard","localStorage","clear","FaAngleLeft","handleContinue","FaAngleRight","cardData","image","title","description","ChooseType","setUserProjectData","onBack","selectedCard","setSelectedCard","reduce","rows","card","index","window","innerWidth","push","length","map","row","rowIndex","cardIndex","style","border","id","concat","handleCardClick","backgroundImage","handelBack","prevData","TypeOfMusic","alert","cg1","cg2","cg3","cg4","cg5","cg6","ChooseGenre","selectedCardGenre","setSelectedCardGenre","GenreOfMusic","ChooseMusicians","selectedFullProductionTeam","setSelectedFullProductionTeam","selectedMusicians","setSelectedMusicians","musician","musicianIndex","includes","prevSelected","filter","selectedMusician","handleMusicianClick","selectedMusicianTitles","console","log","MusicianForProject","formatValue","value","toFixed","toString","ChooseBudget","minRange","maxRange","setMinRange","setMaxRange","checkIfBudgetIsSelected","setCheckIfBudgetIsSelected","handleInputChange","e","name","target","newMinRange","newMaxRange","parseInt","left","right","type","min","max","step","onChange","onTouchStart","budget","Budget","ShareLink","links","setLinks","uploadedFiles","setUploadedFiles","projectDetails","setProjectDetails","is6FileUploaded","setIs6FileUploaded","useState","useEffect","getLink","setGetLink","displayFileName","fileName","truncatedName","substring","fileExtension","split","pop","linkDivs","Math","ceil","placeholder","addLink","test","trim","Array","_","divIndex","slice","elem","cross","updatedLink","deleteLink","divideFilesIntoSections","sections","i","section","sectionIndex","file","fileIndex","music","handleRemoveFile","prevFiles","updatedFiles","splice","cursor","accept","selectedFiles","files","from","multiple","display","htmlFor","upload","draggable","resize","linkNames","link","join","fileNames","LinksForSimilarTrack","DemoFiles","DetailsOfProject","ProjectDelivery","selectedDate","setSelectedDate","selectedDatesAndPrices","setSelectedDatesAndPrices","selectedPrice","setSelectedPrice","calculateDeliveryDate","days","currentDate","Date","setDate","getDate","toLocaleDateString","month","day","year","selectedDeliveryDate","price","prevDatesAndPrices","date","handleDateSelection","ProjectDeliveryDate","ExtraAmountToPay","GoodName","goodName","setGoodName","song","NameOFProject","AlmostDone","setCurrentStep","ShedualLater","ConnectNow","BookSession","setCurrentDate","selectedSlot","setSelectedSlot","selectedSlotData","setSelectedSlotData","daysNavigated","setDaysNavigated","getDayOfWeek","offset","arguments","undefined","daysOfWeek","newDate","getDay","getFormattedDate","timeSlotsData","label","slots","timeZoneOffset","getTimezoneOffset","timeZoneHours","floor","abs","timeZoneMinutes","timeZoneString","String","padStart","backTOAlmostDone","Intl","DateTimeFormat","resolvedOptions","timeZone","format","getFullYear","handlePreviousDate","previousDate","getMonth","lastDayOfPrevMonth","handleNextDate","nextDate","mainSlot","time","slot","todaysDateContent","document","querySelector","textContent","bookSessionMonthContent","todaysDate","bookSessionMonth","handleSlotClick","ConnectInFewSecond","userProjectData","onUserProjectDataUpdate","images","img1","img2","img3","img4","usernames","rightIndex","setRightIndex","centerIndex","setCenterIndex","leftIndex","setLeftIndex","currentUsername","setCurrentUsername","wait","setWait","intervalIdRef","useRef","current","setInterval","prevRightIndex","prevCenterIndex","prevLeftIndex","setTimeout","clearInterval","async","jkt","prevdata","ConnectedPerson","timer","NewProject","currentStep","TimeSlots","SelectedSlots","SelectedDate","BookSessionMonth","handleUserProjectDataUpdate","storedData","getItem","storedStep","JSON","parse","setItem","stringify","handleNext","state","onSubmit","preventDefault","logo","gotoHome"],"mappings":"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","file":"static/js/17.6a6c7eba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dance.e94b905a.gif\";","import React from \"react\";\nimport dancer from \"../../assets/img/dashboard_img/dance.gif\";\nimport { FaAngleRight } from \"react-icons/fa6\";\nimport { FaAngleLeft } from \"react-icons/fa6\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../../pages/admin/layout/Button\";\n\nexport default function CreateNewProject({ onNext }) {\n  const navigate = useNavigate();\n  const gotoDashboard = () => {\n    navigate(\"/dashboard\");\n    localStorage.clear();\n  };\n\n  const handleContinue = () => {\n    // Perform any necessary actions in this component\n    // ...\n\n    // Call the callback to trigger navigation to the next component\n    onNext();\n  };\n  return (\n    <>\n      <div className=\"project-div1\">\n        <div>\n          <h3>Create your dream project in just 5 minutes</h3>\n        </div>\n        <div>\n          <p>\n            Let's begin! We'll guide you step-by-step to create the perfect\n            song. Just pick & fill in some details, and click \"continue.\" You\n            can go <br />\n            \"back\" to make changes any time, before checking out.\n          </p>\n        </div>\n        <div>\n          <img src={dancer} alt=\"\" />\n        </div>\n        <div>\n          <button onClick={gotoDashboard}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue\n            <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\n\nimport ct1 from \"../../assets/img/chooseType-img/ct1.png\";\nimport ct2 from \"../../assets/img/chooseType-img/ct2.jpeg\";\nimport ct3 from \"../../assets/img/chooseType-img/ct3.png\";\nimport ct4 from \"../../assets/img/chooseType-img/ct4.jpeg\";\nimport ct5 from \"../../assets/img/chooseType-img/ct5.jpeg\";\nimport ct6 from \"../../assets/img/chooseType-img/ct6.jpeg\";\nimport ct7 from \"../../assets/img/chooseType-img/ct7.jpeg\";\n\nconst cardData = [\n  {\n    image: ct1,\n    title: \"ORIGINAL SONG\",\n    description:\n      \"An original song is a unique and original piece of music written, composed, and performed by the songwriter to express their personal experiences, emotions, or ideas, and can be commercially released.\",\n  },\n  {\n    image: ct2,\n    title: \"COVER SONG\",\n    description:\n      \"A cover song is a new artist's interpretation of a previously released song, using their own interpretation and style, and can be commercially released as a tribute or to introduce a new audience to a classic.\",\n  },\n  {\n    image: ct3,\n    title: \"RAP SONG\",\n    description:\n      \"Rap is a music genre with spoken lyrics and a beat, featuring themes related to urban life, social issues, and personal struggles. It has various sub-genres known for their dynamic beats and cultural impact.\",\n  },\n  {\n    image: ct4,\n    title: \"BGM/INSTRUMENTAL\",\n    description:\n      \"Background music / instrumental music is used to enhance a scene or activity, composed of melodies without vocals. It's found in various media, creating a relaxing or stimulating mood and evoking emotions.\",\n  },\n  {\n    image: ct5,\n    title: \"AD JINGLE\",\n    description:\n      \"An ad jingle is a catchy tune or phrase used in advertising to promote a product. It's memorable and recognizable, used in various types of media to create brand recognition and increase consumer loyalty.\",\n  },\n  {\n    image: ct6,\n    title: \"MICROCONTENT/REEL\",\n    description:\n      \"Microcontent/reel songs are short musical compositions less than a minute long for social media, featuring catchy hooks and upbeat rhythms, created by indie artists and popular on platforms like Instagram, TikTok.\",\n  },\n  {\n    image: ct7,\n    title: \"MIX-MASTER\",\n    description:\n      \"A mix-master edits and blends recorded music or soundtracks, using specialized equipment and software to achieve a polished sound. They collaborate with artists and producers in various music genres and media.\",\n  },\n];\n\nexport default function ChooseType({\n  onNext,\n  setUserProjectData,\n  onBack,\n  selectedCard,\n  setSelectedCard,\n}) {\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n  const handleContinue = () => {\n    if (selectedCard) {\n      // Show alert with the selected card's name\n      // alert(`Selected Card: ${selectedCard.title}`);\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        TypeOfMusic: selectedCard.title,\n      }));\n\n      onNext();\n    } else {\n      alert(\"Please choose type of music before continuing.\");\n    }\n  };\n  const handelBack = () => {\n    onBack();\n  };\n\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div>\n          <h2>Choose Type</h2>\n        </div>\n        <div className=\"choose-type-div\">\n          {cardData\n            .reduce((rows, card, index) => {\n              if (window.innerWidth >= 768 && index % 4 === 0) {\n                rows.push([]);\n              } else if (window.innerWidth < 768 && index % 2 === 0) {\n                rows.push([]);\n              }\n              rows[rows.length - 1].push(card);\n              return rows;\n            }, [])\n            .map((row, rowIndex) => (\n              <div className=\"choose-type-div-card\" key={rowIndex}>\n                {row.map((card, cardIndex) => (\n                  <div\n                    key={cardIndex}\n                    style={{\n                      border:\n                        selectedCard && selectedCard.title === card.title\n                          ? \"2px solid #FFC701\"\n                          : \"none\",\n                    }}\n                    id={`card-${card.title}`}\n                    onClick={() => handleCardClick(card)}\n                  >\n                    <div style={{ backgroundImage: `url(${card.image})` }}>\n                      <div className=\"card-overlay\">\n                        <p>{card.description}</p>\n                      </div>\n                    </div>\n                    <h3>{card.title}</h3>\n                  </div>\n                ))}\n              </div>\n            ))}\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/ct1.bb5ff757.png\";","export default __webpack_public_path__ + \"static/media/ct2.dd34d21c.jpeg\";","export default __webpack_public_path__ + \"static/media/ct3.a1be7345.png\";","export default __webpack_public_path__ + \"static/media/ct4.e187dd72.jpeg\";","export default __webpack_public_path__ + \"static/media/ct5.72357772.jpeg\";","export default __webpack_public_path__ + \"static/media/ct6.2b51062e.jpeg\";","export default __webpack_public_path__ + \"static/media/ct7.f9c59e96.jpeg\";","export default __webpack_public_path__ + \"static/media/cg1.a1b1c61e.jpeg\";","export default __webpack_public_path__ + \"static/media/cg3.e9253740.jpeg\";","export default __webpack_public_path__ + \"static/media/cg4.a2436b6c.jpeg\";","export default __webpack_public_path__ + \"static/media/cg5.36f13d48.jpeg\";","export default __webpack_public_path__ + \"static/media/cg6.11a94dec.jpeg\";","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport cg1 from \"../../assets/img/chooseType-img/cg1.jpeg\";\nimport cg2 from \"../../assets/img/chooseType-img/cg1.jpeg\";\nimport cg3 from \"../../assets/img/chooseType-img/cg3.jpeg\";\nimport cg4 from \"../../assets/img/chooseType-img/cg4.jpeg\";\nimport cg5 from \"../../assets/img/chooseType-img/cg5.jpeg\";\nimport cg6 from \"../../assets/img/chooseType-img/cg6.jpeg\";\nimport cg7 from \"../../assets/img/chooseType-img/cg1.jpeg\";\n\nconst cardData = [\n  {\n    image: cg1,\n    title: \"HIPHOP\",\n    description:\n      \"Hip-hop is genre that emerged in the Bronx in 1970s with rapping. DJing,breakdancing, and graffiti. It has dynamic beats, socially conscious lyrics, and notable sub-genres like gangsta rap, conscious rap, and trap-\",\n  },\n  {\n    image: cg2,\n    title: \"BOLLYWOOD/POP\",\n    description:\n      \"Bollywood[pop is a fusion genre of traditbnal Indian music with modern pop and Western-style production, commonly heard in Bollywood fibn:s with catchy melodies, upbeat rhythms, and Jove-centered lyrics,\",\n  },\n  {\n    image: cg3,\n    title: \"SUFI/FOLK\",\n    description:\n      \"Sufi/folk blends traditional folk music and Sufi poetry with regional language lyrics about love and spirituaUty. It uses instruments like the harmonium. and tablar and has a rich history in South Asia.\",\n  },\n  {\n    image: cg4,\n    title: \"INDIE POP\",\n    description:\n      \"Background music / instrumental music is used to enhance a scene or activity, composed of melodies without vocals. It's found in various media, creating a relaxing or stimulating mood and evoking emotions.\",\n  },\n  {\n    image: cg5,\n    title: \"EXPERIMENTAL/NEW AGE\",\n    description:\n      \"An ad jingle is a catchy tune or phrase used in advertising to promote a product. It's memorable and recognizable, used in various types of media to create brand recognition and increase consumer loyalty.\",\n  },\n  {\n    image: cg6,\n    title: \"DANCE/EDM\",\n    description:\n      \"Microcontent/reel songs are short musical compositions less than a minute long for social media, featuring catchy hooks and upbeat rhythms, created by indie artists and popular on platforms like Instagram, TikTok.\",\n  },\n];\n\nexport default function ChooseGenre({\n  onNext,\n  setUserProjectData,\n  onBack,\n  selectedCardGenre,\n  setSelectedCardGenre,\n}) {\n  const handleCardClick = (card) => {\n    setSelectedCardGenre(card);\n  };\n  const handleContinue = () => {\n    if (selectedCardGenre) {\n      // Show alert with the selected card's name\n      // alert(`Selected Card: ${selectedCardGenre.title}`);\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        GenreOfMusic: selectedCardGenre.title,\n      }));\n\n      onNext();\n    } else {\n      alert(\"Please choose type of music before continuing.\");\n    }\n  };\n  const handelBack = () => {\n    onBack();\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div>\n          <h2>Choose Genre</h2>\n        </div>\n        <div className=\"choose-type-div\">\n          {cardData\n            .reduce((rows, card, index) => {\n              if (window.innerWidth >= 768 && index % 4 === 0) {\n                rows.push([]);\n              } else if (window.innerWidth < 768 && index % 2 === 0) {\n                rows.push([]);\n              }\n              rows[rows.length - 1].push(card);\n              return rows;\n            }, [])\n            .map((row, rowIndex) => (\n              <div className=\"choose-type-div-card\" key={rowIndex}>\n                {row.map((card, cardIndex) => (\n                  <div\n                    key={cardIndex}\n                    style={{\n                      border:\n                        selectedCardGenre &&\n                        selectedCardGenre.title === card.title\n                          ? \"2px solid #FFC701\"\n                          : \"none\",\n                    }}\n                    id={`card-${card.title}`}\n                    onClick={() => handleCardClick(card)}\n                  >\n                    <div style={{ backgroundImage: `url(${card.image})` }}>\n                      <div className=\"card-overlay\">\n                        <p>{card.description}</p>\n                      </div>\n                    </div>\n                    <h3>{card.title}</h3>\n                  </div>\n                ))}\n              </div>\n            ))}\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport cm1 from \"../../assets/img/chooseType-img/cm1.jpeg\";\nimport cm2 from \"../../assets/img/chooseType-img/cm2.jpeg\";\nimport cm3 from \"../../assets/img/chooseType-img/cm3.jpeg\";\nimport cm4 from \"../../assets/img/chooseType-img/cm4.jpeg\";\nimport cm5 from \"../../assets/img/chooseType-img/cm5.jpeg\";\nimport cm6 from \"../../assets/img/chooseType-img/cm6.jpeg\";\nimport cm7 from \"../../assets/img/chooseType-img/cm1.jpeg\";\n\nconst cardData = [\n  {\n    image: cm1,\n    title: \"MUSIC PRODUCER\",\n    description:\n      \"An original song is a unique and original piece of music written, composed, and performed by the songwriter to express their personal experiences, emotions, or ideas, and can be commercially released.\",\n  },\n  {\n    image: cm2,\n    title: \"SINGER\",\n    description:\n      \"A cover song is a new artist's interpretation of a previously released song, using their own interpretation and style, and can be commercially released as a tribute or to introduce a new audience to a classic.\",\n  },\n  {\n    image: cm3,\n    title: \"SONGWRITER\",\n    description:\n      \"Rap is a music genre with spoken lyrics and a beat, featuring themes related to urban life, social issues, and personal struggles. It has various sub-genres known for their dynamic beats and cultural impact.\",\n  },\n  {\n    image: cm4,\n    title: \"RAPPER\",\n    description:\n      \"Background music / instrumental music is used to enhance a scene or activity, composed of melodies without vocals. It's found in various media, creating a relaxing or stimulating mood and evoking emotions.\",\n  },\n  {\n    image: cm5,\n    title: \"MIX-MASTER\",\n    description:\n      \"An ad jingle is a catchy tune or phrase used in advertising to promote a product. It's memorable and recognizable, used in various types of media to create brand recognition and increase consumer loyalty.\",\n  },\n  {\n    image: cm6,\n    title: \"FULL PRODUCTION TEAM\",\n    description:\n      \"Microcontent/reel songs are short musical compositions less than a minute long for social media, featuring catchy hooks and upbeat rhythms, created by indie artists and popular on platforms like Instagram, TikTok.\",\n  },\n];\n// ... (previous imports and code)\n\nexport default function ChooseMusicians({\n  onNext,\n  setUserProjectData,\n  onBack,\n  selectedFullProductionTeam,\n  setSelectedFullProductionTeam,\n  selectedMusicians,\n  setSelectedMusicians,\n}) {\n  const handleMusicianClick = (musician) => {\n    if (musician.title === \"FULL PRODUCTION TEAM\") {\n      // If FULL PRODUCTION TEAM is selected, select both \"FULL PRODUCTION TEAM\" and the musician\n      setSelectedMusicians([musician]);\n      setSelectedFullProductionTeam(true);\n    } else if (selectedFullProductionTeam) {\n      // If FULL PRODUCTION TEAM is already selected, unselect it and select the new musician\n      setSelectedMusicians([musician]);\n      setSelectedFullProductionTeam(false);\n    } else {\n      // If other musicians are selected, unselect FULL PRODUCTION TEAM\n      setSelectedMusicians((prevSelected) => {\n        if (prevSelected.includes(musician)) {\n          return prevSelected.filter(\n            (selectedMusician) => selectedMusician !== musician\n          );\n        } else {\n          return [...prevSelected, musician];\n        }\n      });\n    }\n  };\n\n  const handleContinue = () => {\n    if (selectedMusicians.length === 5) {\n      // If all other musicians are selected, automatically select FULL PRODUCTION TEAM\n      setSelectedMusicians([]);\n      setSelectedFullProductionTeam(true);\n    }\n\n    if (selectedFullProductionTeam || selectedMusicians.length > 0) {\n      // Show alert with the selected musicians' names\n      const selectedMusicianTitles = selectedFullProductionTeam\n        ? [\"FULL PRODUCTION TEAM\"]\n        : selectedMusicians.map((musician) => musician.title);\n\n      console.log();\n\n      // alert(`Selected Musicians: ${selectedMusicianTitles.join(\", \")}`);\n\n      // You can update your user data or perform other actions as needed\n      // setUserProjectData((prevData) => ({\n      //   ...prevData,\n      //   MusicianForProject: [\n      //     ...prevData.MusicianForProject,\n      //     selectedMusicianTitles,\n      //   ],\n      // }));\n\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        MusicianForProject: selectedMusicianTitles,\n      }));\n\n      onNext();\n    } else {\n      alert(\"Please choose at least one musician before continuing.\");\n    }\n  };\n  const handelBack = () => {\n    onBack();\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div className=\"project-div2-title-musican\">\n          <h2>Choose Musician for your project</h2>\n          <p>\n            (You can select multiple musician based on your selection your\n            budget will be calculated)\n          </p>\n        </div>\n        <div className=\"choose-type-div\">\n          {cardData\n            .reduce((rows, card, index) => {\n              if (window.innerWidth >= 768 && index % 4 === 0) {\n                rows.push([]);\n              } else if (window.innerWidth < 768 && index % 2 === 0) {\n                rows.push([]);\n              }\n              rows[rows.length - 1].push(card);\n              return rows;\n            }, [])\n            .map((row, rowIndex) => (\n              <div className=\"choose-type-div-card\" key={rowIndex}>\n                {row.map((musician, musicianIndex) => (\n                  <div\n                    key={musicianIndex}\n                    style={{\n                      border:\n                        selectedMusicians.includes(musician) ||\n                        (selectedFullProductionTeam &&\n                          musician.title !== \"FULL PRODUCTION TEAM\")\n                          ? \"2px solid #FFC701\"\n                          : \"none\",\n                    }}\n                    id={`musician-${musician.title}`}\n                    onClick={() => handleMusicianClick(musician)}\n                  >\n                    <div style={{ backgroundImage: `url(${musician.image})` }}>\n                      <div className=\"card-overlay\">\n                        <p>{musician.description}</p>\n                      </div>\n                    </div>\n                    <h3>{musician.title}</h3>\n                  </div>\n                ))}\n              </div>\n            ))}\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cm1.8e1ab4d8.jpeg\";","export default __webpack_public_path__ + \"static/media/cm2.cafca4cc.jpeg\";","export default __webpack_public_path__ + \"static/media/cm3.824d3f4e.jpeg\";","export default __webpack_public_path__ + \"static/media/cm4.f0113126.jpeg\";","export default __webpack_public_path__ + \"static/media/cm5.da80df6c.jpeg\";","export default __webpack_public_path__ + \"static/media/cm6.194cac09.jpeg\";","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\n\nconst formatValue = (value) => {\n  if (value >= 100000) {\n    // Convert to lakh\n    return (value / 100000).toFixed(1) + \"L\";\n  } else if (value >= 1000) {\n    // Convert to thousand\n    return (value / 1000).toFixed(1) + \"K\";\n  } else {\n    // Display as is\n    return value.toString();\n  }\n};\n\nexport default function ChooseBudget({\n  onNext,\n  setUserProjectData,\n  onBack,\n  minRange,\n  maxRange,\n  setMinRange,\n  setMaxRange,\n  checkIfBudgetIsSelected,\n  setCheckIfBudgetIsSelected,\n}) {\n  // const [checkIfBudgetIsSelected, setCheckIfBudgetIsSelected] = useState(false);\n  const handleContinue = () => {\n    if (checkIfBudgetIsSelected === true) {\n      let budget = `₹${formatValue(minRange)} - ₹${formatValue(maxRange)}`;\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        Budget: budget,\n      }));\n\n      // alert(\n      //   `Selected Budget: ₹${formatValue(minRange)} - ₹${formatValue(maxRange)}`\n      // );\n      onNext();\n    } else {\n      alert(\"Please Select Budgect\");\n    }\n    // Display alert with selected budget values\n\n    // Call the callback to trigger navigation to the next component\n  };\n\n  // const [minRange, setMinRange] = useState(1000);\n  // const [maxRange, setMaxRange] = useState(500000);\n\n  const minRangeValueGap = 0;\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    let newMinRange = minRange;\n    let newMaxRange = maxRange;\n\n    if (name === \"min\") {\n      newMinRange = parseInt(value);\n    } else if (name === \"max\") {\n      newMaxRange = parseInt(value);\n    }\n\n    // Ensure that minRange does not go beyond maxRange\n    if (newMinRange > newMaxRange - minRangeValueGap) {\n      newMinRange = newMaxRange - minRangeValueGap;\n    }\n\n    setMinRange(newMinRange);\n    setMaxRange(newMaxRange);\n  };\n  const handelBack = () => {\n    onBack();\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div>\n          <h2>Choose Budget</h2>\n        </div>\n        <div className=\"range-slider\">\n          <div></div> {/* contain image for mobile view */}\n          <div className=\"double_range_slider_box\">\n            <div className=\"double_range_slider\">\n              <span\n                className=\"range_track\"\n                id=\"range_track\"\n                style={{\n                  left: `${((minRange - 1000) / 490000) * 100}%`,\n                  right: `${(1 - (maxRange - 1000) / 490000) * 100}%`,\n                }}\n              ></span>\n\n              <input\n                type=\"range\"\n                name=\"min\"\n                min=\"1000\"\n                max=\"500000\"\n                value={minRange}\n                step=\"1000\"\n                onChange={handleInputChange}\n                onClick={() => setCheckIfBudgetIsSelected(true)}\n                onTouchStart={() => setCheckIfBudgetIsSelected(true)}\n              />\n              <input\n                type=\"range\"\n                name=\"max\"\n                min=\"1000\"\n                max=\"500000\"\n                value={maxRange}\n                step=\"1000\"\n                onChange={handleInputChange}\n                onClick={() => setCheckIfBudgetIsSelected(true)}\n                onTouchStart={() => setCheckIfBudgetIsSelected(true)}\n              />\n\n              <div\n                className=\"minvalue\"\n                style={{ left: `${((minRange - 1000) / 490000) * 100}%` }}\n              >\n                {`₹${formatValue(minRange)}`}\n              </div>\n              <div\n                className=\"maxvalue\"\n                style={{ right: `${(1 - (maxRange - 1000) / 490000) * 100}%` }}\n              >\n                {`₹${formatValue(maxRange)}`}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/upload.8addc7d8.svg\";","export default __webpack_public_path__ + \"static/media/Music.2a31268f.svg\";","export default __webpack_public_path__ + \"static/media/cross.10deb384.svg\";","import React, { useEffect, useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport upload from \"../../assets/img/chooseType-img/upload.svg\";\nimport music from \"../../assets/img/chooseType-img/Music.svg\";\nimport cross from \"../../assets/img/chooseType-img/cross.svg\";\n\nexport default function ShareLink({\n  onNext,\n  setUserProjectData,\n  onBack,\n  links,\n  setLinks,\n  uploadedFiles,\n  setUploadedFiles,\n  projectDetails,\n  setProjectDetails,\n}) {\n  // const [projectDetails, setProjectDetails] = useState(\"\");\n\n  const handleContinue = () => {\n    if (projectDetails != \"\") {\n      const linkNames = links\n        .map((link) =>\n          link.length > 15 ? `${link.substring(0, 15)}...` : link\n        )\n        .join(\", \");\n\n      console.log(linkNames);\n      const fileNames = uploadedFiles\n        .map((file) => displayFileName(file.name))\n        .join(\", \");\n      // const alertMessage = `Links: ${linkNames}\\nFiles: ${fileNames}\\n Project Details :${projectDetails}`;\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        LinksForSimilarTrack: [...prevData.LinksForSimilarTrack, links],\n        DemoFiles: [fileNames],\n        DetailsOfProject: projectDetails,\n      }));\n\n      // alert(alertMessage);\n\n      // Call the callback to trigger navigation to the next component\n      onNext();\n    } else {\n      alert(\"Please Tell us more about the project\");\n    }\n  };\n  // const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [is6FileUploaded, setIs6FileUploaded] = useState(false);\n\n  useEffect(() => {\n    if (uploadedFiles.length === 6) {\n      setIs6FileUploaded(true);\n      alert(\"Maximum 6 file can be uploaded \");\n    } else {\n      setIs6FileUploaded(false);\n    }\n  }, [uploadedFiles]);\n\n  const [getLink, setGetLink] = useState(\"\");\n  // const [links, setLinks] = useState([]);\n\n  const addLink = () => {\n    // Simplified URL validation\n    const urlPattern = /^(ftp|http|https):\\/\\/.+/;\n\n    if (\n      (urlPattern.test(getLink) || getLink.trim() === \"\") &&\n      getLink.trim() !== \"\"\n    ) {\n      setLinks([...links, getLink]);\n      setGetLink(\"\");\n    } else {\n      alert(\"Invalid link Please enter valid link\");\n      // console.log(\"Invalid link\");\n    }\n  };\n\n  const deleteLink = (index) => {\n    const updatedLink = links.filter((elem, id) => {\n      return id !== index;\n    });\n    setLinks(updatedLink);\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFiles = e.target.files;\n\n    if (uploadedFiles.length + selectedFiles.length <= 6) {\n      if (uploadedFiles.length < 6) {\n        setUploadedFiles((prevFiles) => [\n          ...prevFiles,\n          ...Array.from(selectedFiles),\n        ]);\n        console.log(\"Selected Files:\", selectedFiles);\n      } else {\n        console.log(\"You can upload a maximum of six files.\");\n      }\n    } else {\n      console.log(\"File limit reached. You can upload a maximum of six files.\");\n    }\n  };\n\n  const handleRemoveFile = (index) => {\n    setUploadedFiles((prevFiles) => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles.splice(index, 1);\n      return updatedFiles;\n    });\n  };\n\n  const displayFileName = (fileName) => {\n    const truncatedName =\n      fileName.length > 5 ? fileName.substring(0, 5) : fileName;\n    const fileExtension = fileName.split(\".\").pop();\n    return `${truncatedName}.${fileExtension}`;\n  };\n\n  const divideFilesIntoSections = () => {\n    const sections = [];\n    for (let i = 0; i < uploadedFiles.length; i += 3) {\n      sections.push(uploadedFiles.slice(i, i + 3));\n    }\n    return sections;\n  };\n\n  // Calculate the number of divs needed based on the number of links\n  const linkDivs = Math.ceil(links.length / 3);\n  const handelBack = () => {\n    onBack();\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div\n          className={\n            links.length > 0 || uploadedFiles.length > 0\n              ? \"\"\n              : \"sharelink-title\"\n          }\n        >\n          <h2 className=\"mob_share_link_title\">\n            Share links of similar tracks for inspiration &nbsp;\n            <span className=\"optional\">(Optional)</span>\n          </h2>\n        </div>\n        <div\n          className={\n            links.length > 0 || uploadedFiles.length > 0\n              ? \"attach-demo\"\n              : \"attach-demo newattach-demo \"\n          }\n        >\n          <div className=\"reference-link\">\n            <div\n              className={\n                links.length > 0 || uploadedFiles.length > 0\n                  ? \"reference-link-div1\"\n                  : \"reference-link-div1 newreference-link-div1 \"\n              }\n            >\n              <input\n                type=\"text\"\n                placeholder=\"Enter reference links\"\n                value={getLink}\n                onChange={(e) => {\n                  setGetLink(e.target.value);\n                }}\n              />\n              {links.length < 6 && (\n                <div className=\"add-attach-demo-link\" onClick={addLink}>\n                  Add\n                </div>\n              )}\n            </div>\n\n            <div\n              className={\n                links.length > 0 ? \"all-reference-links\" : \"displayNone\"\n              }\n            >\n              {/* Loop through the number of linkDivs and render a div for every 3 links */}\n              {[...Array(linkDivs)].map((_, divIndex) => (\n                <div key={divIndex} className=\"add-attach-demo-link-main\">\n                  {links\n                    .slice(divIndex * 3, divIndex * 3 + 3)\n                    .map((elem, index) => (\n                      <div key={index}>\n                        &nbsp;&nbsp;\n                        {elem.length > 15\n                          ? `${elem.substring(0, 15)}...`\n                          : elem}\n                        <img\n                          src={cross}\n                          alt=\"\"\n                          onClick={() => {\n                            deleteLink(divIndex * 3 + index);\n                          }}\n                        />\n                      </div>\n                    ))}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div>\n            <h3>\n              Attach demo files <span className=\"optional\">(Optional)</span>\n            </h3>\n          </div>\n          <div\n            className={\n              uploadedFiles.length > 0 ? \"uploaded-file\" : \"displayNone\"\n            }\n          >\n            {divideFilesIntoSections().map((section, sectionIndex) => (\n              <div key={sectionIndex} className=\"uploaded-file-section\">\n                {section.map((file, fileIndex) => (\n                  <div key={fileIndex} className={`file${fileIndex + 1}`}>\n                    <img src={music} alt=\"\" />\n                    {displayFileName(file.name)}\n                    <img\n                      src={cross}\n                      alt=\"\"\n                      onClick={() =>\n                        handleRemoveFile(fileIndex + sectionIndex * 3)\n                      }\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n          <div className={`${is6FileUploaded ? \"displayNone\" : \"\"}`}>\n            <input\n              type=\"file\"\n              id=\"fileInput\"\n              name=\"fileInput\"\n              accept=\".mp3,.zip,.rar\"\n              onChange={handleFileChange}\n              multiple\n              style={{ display: \"none\" }}\n            />\n            <label htmlFor=\"fileInput\">\n              <div\n                className={`${is6FileUploaded ? \"displayNone\" : \"demo-upload\"}`}\n              >\n                <img src={upload} alt=\"\" /> Attach\n              </div>\n            </label>\n          </div>\n          <div>\n            <h2>Tell us more about the project</h2>\n          </div>\n          <div>\n            <textarea\n              placeholder=\"Enter text here...\"\n              draggable=\"false\"\n              style={{ resize: \"none\" }}\n              value={projectDetails}\n              onChange={(e) => {\n                setProjectDetails(e.target.value);\n              }}\n            ></textarea>\n          </div>\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\n// import \"./ProjectDelivery.css\"; // Import your CSS file\n\nconst ProjectDelivery = ({\n  onNext,\n  setUserProjectData,\n  onBack,\n  selectedDate,\n  setSelectedDate,\n  selectedDatesAndPrices,\n  setSelectedDatesAndPrices,\n}) => {\n  // const [selectedDate, setSelectedDate] = useState(\"\");\n  // const [selectedDatesAndPrices, setSelectedDatesAndPrices] = useState([]);\n\n  const [selectedPrice, setSelectedPrice] = useState(0);\n\n  const calculateDeliveryDate = (days) => {\n    const currentDate = new Date();\n    const deliveryDate = new Date(\n      currentDate.setDate(currentDate.getDate() + days)\n    );\n\n    // Format the date as \"Month day, year\"\n    const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n    const formattedDate = deliveryDate.toLocaleDateString(\"en-US\", options);\n\n    return formattedDate;\n  };\n\n  const handleDateSelection = (days) => {\n    const selectedDeliveryDate = calculateDeliveryDate(days);\n    const price = days === 7 ? 0 : days === 6 ? 2500 : days === 5 ? 5000 : 0;\n\n    setSelectedDate(selectedDeliveryDate);\n    setSelectedPrice(price);\n    setSelectedDatesAndPrices((prevDatesAndPrices) => [\n      ...prevDatesAndPrices,\n      { date: selectedDeliveryDate, price: price },\n    ]);\n\n    // alert(`Selected Date: ${selectedDeliveryDate}\\nPrice: + ₹ ${price}`);\n  };\n\n  const handleContinue = () => {\n    if (selectedDate != \"\") {\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        ProjectDeliveryDate: selectedDate,\n        ExtraAmountToPay: `₹${selectedPrice}`,\n      }));\n      // alert(`Selected Date: ${selectedDate}\\nPrice: + ₹ ${selectedPrice}`);\n      onNext();\n    } else {\n      alert(\"Please select Delivery Date\");\n    }\n  };\n  const handelBack = () => {\n    onBack();\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div>\n          <h2>When do you want your project delivered</h2>\n        </div>\n        <div className=\"project-delivery-main\">\n          {[7, 6, 5].map((days, index) => (\n            <div key={index}>\n              <div>\n                {index === 0\n                  ? `${days} day delivery (standard)`\n                  : `${days} day delivery`}\n              </div>\n              <div>\n                <h4>\n                  {index === 0\n                    ? \"+ ₹ 0\"\n                    : index === 1\n                    ? \"+ ₹ 2,500\"\n                    : \"+ ₹ 5,000\"}\n                </h4>\n              </div>\n              <div\n                className={\n                  selectedDate === calculateDeliveryDate(days)\n                    ? \"deliveryDateSelected\"\n                    : \"\"\n                }\n                onClick={() => handleDateSelection(days)}\n              >\n                <h3>{calculateDeliveryDate(days)}</h3>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectDelivery;\n","export default __webpack_public_path__ + \"static/media/song.67c38301.gif\";","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport song from \"../../assets/img/chooseType-img/song.gif\";\nconst GoodName = ({ onNext, setUserProjectData, onBack }) => {\n  const [goodName, setGoodName] = useState(\"\");\n  const handleContinue = () => {\n    if (goodName != \"\") {\n      setUserProjectData((prevData) => ({\n        ...prevData,\n        NameOFProject: goodName,\n      }));\n      // alert(\"project Name is \" + goodName);\n      onNext();\n    } else {\n      alert(\"Please give a Name to Your Project\");\n    }\n  };\n  const handelBack = () => {\n    onBack();\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div>\n          <h2> Give a good name</h2>\n        </div>\n        <div className=\"goodName-div\">\n          <div className=\"goodName-singer\">\n            <img src={song} alt=\"\" />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Project \n            name\"\n              value={goodName}\n              onChange={(e) => {\n                setGoodName(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button onClick={handelBack}>\n            <FaAngleLeft /> Back\n          </button>\n          <button onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GoodName;\n","import React from \"react\";\n\nconst AlmostDone = ({ onNext, setUserProjectData, setCurrentStep }) => {\n  const ConnectNow = () => {\n    setCurrentStep(10);\n  };\n  const ShedualLater = () => {\n    setCurrentStep(9);\n  };\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div className=\"mob-awsome\">\n          <h2> Awesome! We are almost done</h2>\n        </div>\n        <div className=\"almostDone-div\">\n          <div>\n            <p>\n              {\"{Project name}\"} has been initialised and our Artist\n              Relationship Manager (ARM) will get in touch with you for more\n              updates regarding your project. Would you prefer joining now? If\n              yes, <br /> we can schedule one in the next 60 seconds. <br />\n              <br />\n              Alternatively, you can also pick a preferred slot as per your\n              <br />\n              convenience.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"almostDone-btn\">\n          <button className=\"almostDone-btn1\" onClick={ShedualLater}>\n            Schedule for later\n          </button>\n          <button onClick={ConnectNow}>Connect now</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AlmostDone;\n","import React, { useState } from \"react\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\n\nconst BookSession = ({ onNext, setCurrentStep }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [selectedSlotData, setSelectedSlotData] = useState(null);\n  const [daysNavigated, setDaysNavigated] = useState(0);\n\n  const handleNextDate = () => {\n    const nextDate = new Date(currentDate);\n    nextDate.setDate(nextDate.getDate() + 1);\n\n    if (nextDate.getMonth() !== currentDate.getMonth()) {\n      nextDate.setDate(1);\n    }\n\n    setDaysNavigated(daysNavigated + 1);\n\n    if (daysNavigated >= 7) {\n      setCurrentDate(new Date());\n      setDaysNavigated(0);\n    } else {\n      setCurrentDate(nextDate);\n    }\n\n    // Reset selected slot when navigating to the next date\n    setSelectedSlot(null);\n  };\n\n  const handlePreviousDate = () => {\n    const previousDate = new Date(currentDate);\n    previousDate.setDate(previousDate.getDate() - 1);\n\n    if (previousDate.getMonth() !== currentDate.getMonth()) {\n      const lastDayOfPrevMonth = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth(),\n        0\n      ).getDate();\n      previousDate.setDate(lastDayOfPrevMonth);\n    }\n\n    if (daysNavigated > 0) {\n      setDaysNavigated(daysNavigated - 1);\n      setCurrentDate(previousDate);\n    }\n\n    // Reset selected slot when navigating to the previous date\n    setSelectedSlot(null);\n  };\n\n  const getDayOfWeek = (date, offset = 0) => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const newDate = new Date(date);\n    newDate.setDate(date.getDate() + offset);\n    return daysOfWeek[newDate.getDay()];\n  };\n\n  const getFormattedDate = (date, offset = 0) => {\n    const newDate = new Date(date);\n    newDate.setDate(date.getDate() + offset);\n    return newDate.getDate();\n  };\n\n  const handleSlotClick = (slot) => {\n    // Store the selected slot in the state\n    setSelectedSlot(slot);\n\n    // Store the content of todaysDate and bookSession-month in the state\n    const todaysDateContent = document.querySelector(\".todaysDate\").textContent;\n    const bookSessionMonthContent =\n      document.querySelector(\".bookSession-month\").textContent;\n\n    // Store the selected slot data in the state\n    setSelectedSlotData({\n      slot: slot,\n      todaysDate: todaysDateContent,\n      bookSessionMonth: bookSessionMonthContent,\n    });\n\n    // Show an alert with the selected slot and additional data\n    // alert(\n    //   `Selected Slot: ${slot}\\n Selected Date: ${todaysDateContent}\\nBook Session Month: ${bookSessionMonthContent}`\n    // );\n  };\n\n  const handleContinue = () => {\n    if (selectedSlotData !== null) {\n      const { slot, todaysDate, bookSessionMonth } = selectedSlotData;\n      setCurrentStep(10);\n\n      // alert(\n      //   `Selected Slot: ${slot}\\n Selected Date: ${todaysDate}\\nBook Session Month: ${bookSessionMonth}`\n      // );\n    } else {\n      alert(\"Please Select A Slot\");\n    }\n  };\n  const backTOAlmostDone = () => {\n    setCurrentStep(8);\n  };\n\n  const timeSlotsData = [\n    {\n      label: \"Morning\",\n      slots: [\"11:00 AM\", \"11:30 AM\", \"12:00 PM\", \"12:30 PM\"],\n    },\n    {\n      label: \"Afternoon\",\n      slots: [\"1:00 PM\", \"1:30 PM\", \"3:00 PM\", \"3:30 PM\"],\n    },\n    {\n      label: \"Evening\",\n      slots: [\"4:00 PM\", \"6:00 PM\", \"6:30 PM\"],\n    },\n  ];\n\n  const generateTimeSlots = () => {\n    return timeSlotsData.map((mainSlot, index) => (\n      <div className=\"main-slots\" key={index}>\n        <div className=\"slots\">\n          {mainSlot.slots.map((time, i) => (\n            <div\n              key={i}\n              className={`slot ${selectedSlot === time ? \"selected\" : \"\"}`}\n              onClick={() => handleSlotClick(time)}\n            >\n              {time}\n            </div>\n          ))}\n        </div>\n      </div>\n    ));\n  };\n\n  const timeZoneOffset = new Date().getTimezoneOffset();\n  const timeZoneHours = Math.floor(Math.abs(timeZoneOffset) / 60);\n  const timeZoneMinutes = Math.abs(timeZoneOffset) % 60;\n  const timeZoneSign = timeZoneOffset > 0 ? \"-\" : \"+\";\n  const timeZoneString = `(${timeZoneSign}${String(timeZoneHours).padStart(\n    2,\n    \"0\"\n  )}:${String(timeZoneMinutes).padStart(2, \"0\")} IST)`;\n\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div className=\"BookSession-title\">\n          <div>\n            <button onClick={backTOAlmostDone}>\n              <FaAngleLeft />\n              Back\n            </button>\n          </div>\n          <div>\n            <h2>Book a Session with ARM</h2>\n            <p>\n              Your time zone: {Intl.DateTimeFormat().resolvedOptions().timeZone}{\" \"}\n              {timeZoneString}\n            </p>\n          </div>\n        </div>\n        <div className=\"bookSession-div\">\n          <div>\n            <h2>Choose your time slot</h2>\n          </div>\n          <div className=\"bookSession-month\">\n            <h5>\n              {new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(\n                currentDate\n              )}{\" \"}\n              {currentDate.getFullYear()}\n            </h5>\n          </div>\n          <div className=\"book-custom-dates\">\n            <div className=\"gotoPreviousDate\" onClick={handlePreviousDate}>\n              <button type=\"button\">\n                <FaAngleLeft />\n              </button>\n            </div>\n            <div>\n              <div className=\"previousDate\">\n                {getDayOfWeek(currentDate, -1)}\n              </div>\n              <div>{getFormattedDate(currentDate, -1)}</div>\n            </div>\n            <div className=\"todaysDate\">\n              <div>{getDayOfWeek(currentDate)}</div>\n              <div>{getFormattedDate(currentDate)}</div>\n            </div>\n            <div>\n              <div className=\"tomorrowDate\">{getDayOfWeek(currentDate, 1)}</div>\n              <div>{getFormattedDate(currentDate, 1)}</div>\n            </div>\n            <div className=\"gotoNextDate\">\n              <button>\n                <FaAngleRight onClick={handleNextDate} />\n              </button>\n            </div>\n          </div>\n          <div>\n            <h5>Available time slots</h5>\n          </div>\n          <div className=\"timeSlot\">{generateTimeSlots()}</div>\n        </div>\n\n        <div className=\"project-div2-btn\">\n          <button type=\"button\" onClick={handleContinue}>\n            Continue <FaAngleRight />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BookSession;\n","export default __webpack_public_path__ + \"static/media/connect1.c2afbee1.jpg\";","export default __webpack_public_path__ + \"static/media/connect2.d8d313aa.jpg\";","export default __webpack_public_path__ + \"static/media/connect3.a0fc4cf5.jpg\";","export default __webpack_public_path__ + \"static/media/timer.6a0c0aa1.gif\";","import React, { useState, useEffect, useRef } from \"react\";\nimport { FaAngleRight } from \"react-icons/fa6\";\nimport img1 from \"../../assets/img/chooseType-img/connect1.jpg\";\nimport img2 from \"../../assets/img/chooseType-img/connect2.jpg\";\nimport img3 from \"../../assets/img/chooseType-img/connect3.jpg\";\nimport img4 from \"../../assets/img/chooseType-img/cg1.jpeg\";\nimport timer from \"../../assets/img/chooseType-img/timer.gif\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ConnectInFewSecond = ({\n  setUserProjectData,\n  userProjectData,\n  onUserProjectDataUpdate,\n}) => {\n  const images = [img1, img2, img3, img4];\n  const usernames = [\"soni\", \"kajal\", \"ravi\", \"sonu\"];\n  const intervalTime = 1500; // in milliseconds\n  const totalDuration = 5000; // in milliseconds\n\n  const [rightIndex, setRightIndex] = useState(0);\n  const [centerIndex, setCenterIndex] = useState(1);\n  const [leftIndex, setLeftIndex] = useState(2);\n  const [currentUsername, setCurrentUsername] = useState(usernames[0]);\n  const [wait, setWait] = useState(false);\n\n  const intervalIdRef = useRef(null);\n\n  useEffect(() => {\n    intervalIdRef.current = setInterval(() => {\n      setRightIndex((prevRightIndex) => (prevRightIndex + 1) % images.length);\n      setCenterIndex(\n        (prevCenterIndex) => (prevCenterIndex + 1) % images.length\n      );\n      setLeftIndex((prevLeftIndex) => (prevLeftIndex + 1) % images.length);\n      setCurrentUsername(usernames[(rightIndex + 1) % images.length]);\n    }, intervalTime);\n\n    // Stop the interval after totalDuration\n    setTimeout(() => {\n      clearInterval(intervalIdRef.current);\n      setWait(true);\n    }, totalDuration);\n\n    // Clear interval on component unmount\n    return () => clearInterval(intervalIdRef.current);\n  }, [intervalTime, totalDuration, rightIndex, images.length, usernames]);\n  // const [dataUpdatedNavigateNow, setDataUpdatedNavigateNow] = useState(false);\n  const navigate = useNavigate();\n\n  const joinNow = async () => {\n    console.log(\"currentUsername\");\n    // await setConnectedPersonName(currentUsername);\n    const jkt = await setUserProjectData((prevdata) => {\n      return { ...prevdata, ConnectedPerson: currentUsername };\n    });\n    console.log(\"currentUsername\", jkt);\n    localStorage.clear();\n    // setDataUpdatedNavigateNow(true);.\n    // onUserProjectDataUpdate();\n  };\n  // useEffect(() => {\n  //   // Check if userProjectData has been updated by child components\n  //   if (dataUpdatedNavigateNow) {\n  //     navigate(\"/choiratest\", { state: { userProjectData } });\n  //     // Reset the flag after navigation\n  //     setDataUpdatedNavigateNow(false);\n  //   }\n  // }, [dataUpdatedNavigateNow, userProjectData, navigate]);\n\n  return (\n    <>\n      <div className=\"project-div2\">\n        <div>\n          <h2> Connect in few seconds</h2>\n        </div>\n        <div className=\"connectInFewSecond\">\n          <div className=\"connect-img\">\n            <div className=\"right-img\">\n              <img src={images[rightIndex]} alt={currentUsername} />\n            </div>\n            <div className=\"center-img\">\n              <img src={images[centerIndex]} alt={currentUsername} />\n            </div>\n            <div className=\"left-img\">\n              <img src={images[leftIndex]} alt={currentUsername} />\n            </div>\n          </div>\n          <div className=\"username\">{currentUsername}</div>\n\n          <div className=\"connectInFewSecond-details\">\n            <p>\n              Thank you for connecting with Choira. Our Account Relationship{\" \"}\n              <br />\n              Manager will join you shortly with more updates regarding your{\" \"}\n              <br />\n              project.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"project-div2-btn\">\n          {wait ? (\n            <button onClick={joinNow}>\n              Join Now <FaAngleRight />\n            </button>\n          ) : (\n            <img src={timer} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ConnectInFewSecond;\n","import React, { useEffect } from \"react\";\nimport \"../produce/newproject.css\";\nimport logo from \"../../assets/img/logo-choira.svg\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport CreateNewProject from \"../../components/chooseProject/CreateNewProject\";\nimport ChooseType from \"../../components/chooseProject/ChooseType\";\nimport ChooseGenre from \"../../components/chooseProject/ChooseGenre\";\nimport ChooseMusicians from \"../../components/chooseProject/ChooseMusicians\";\nimport ChooseBudget from \"../../components/chooseProject/ChooseBudget\";\nimport ShareLink from \"../../components/chooseProject/ShareLink\";\nimport ProjectDelivery from \"../../components/chooseProject/ProjectDelivery\";\nimport GoodName from \"../../components/chooseProject/GoodName\";\nimport AlmostDone from \"../../components/chooseProject/AlmostDone\";\n\nimport BookSession from \"../../components/chooseProject/BookSession\";\nimport ConnectInFewSecond from \"../../components/chooseProject/ConnectInFewSecond\";\nimport { useState } from \"react\";\n\nfunction NewProject() {\n  // all cards states are managed here\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedCardGenre, setSelectedCardGenre] = useState(null);\n  const [selectedFullProductionTeam, setSelectedFullProductionTeam] =\n    useState(false);\n  const [selectedMusicians, setSelectedMusicians] = useState([]);\n  const [minRange, setMinRange] = useState(1000);\n  const [maxRange, setMaxRange] = useState(500000);\n  const [checkIfBudgetIsSelected, setCheckIfBudgetIsSelected] = useState(false);\n  const [links, setLinks] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [projectDetails, setProjectDetails] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedDatesAndPrices, setSelectedDatesAndPrices] = useState([]);\n\n  // all cards states are ends here\n\n  const navigate = useNavigate();\n\n  const [currentStep, setCurrentStep] = useState(0);\n  const [userProjectData, setUserProjectData] = useState({\n    TypeOfMusic: \"\",\n    GenreOfMusic: \"\",\n    MusicianForProject: [],\n    Budget: \"\",\n    LinksForSimilarTrack: [],\n    DemoFiles: [],\n    DetailsOfProject: \"\",\n    ProjectDeliveryDate: \"\",\n    ExtraAmountToPay: \"\",\n    NameOFProject: \"\",\n    ConnectedPerson: \"\",\n    TimeSlots: {\n      SelectedSlots: \"\",\n      SelectedDate: \"\",\n      BookSessionMonth: \"\",\n    },\n  });\n\n  useEffect(() => {\n    console.log(\"UPDATED2.......\");\n    if (userProjectData.ConnectedPerson) {\n      handleUserProjectDataUpdate();\n    }\n    // localStorage.setItem(\"userProjectData\", JSON.stringify(userProjectData));\n  }, [userProjectData]);\n\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"userProjectData\");\n    const storedStep = localStorage.getItem(\"currentStep\");\n\n    if (storedData) {\n      setUserProjectData(JSON.parse(storedData));\n    }\n\n    if (storedStep) {\n      setCurrentStep(parseInt(storedStep, 10));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"userProjectData\", JSON.stringify(userProjectData));\n    localStorage.setItem(\"currentStep\", currentStep.toString());\n  }, [userProjectData, currentStep]);\n\n  const handleNext = () => {\n    setCurrentStep(currentStep + 1);\n    // alert(JSON.stringify(userProjectData));\n  };\n  const handelBack = () => {\n    setCurrentStep(currentStep - 1);\n  };\n  // const [userProjectData, setUserProjectData] = useState({});\n  const handleUserProjectDataUpdate = () => {\n    // This function will be called by the child component\n    // when userProjectData is updated\n    console.log(\"userProjectData\");\n    navigate(\"/choiratest\", { state: { userProjectData } });\n  };\n  const gotoHome = () => {\n    navigate(\"/\");\n  };\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <div className=\"project-wrapper\">\n          <div className=\"project-navbar\">\n            <img src={logo} onClick={gotoHome} alt=\"\" />\n          </div>\n          <div className=\"new-project-main\">\n            {currentStep === 0 && (\n              <CreateNewProject\n                onNext={handleNext}\n                setUserProjectData={setUserProjectData}\n              />\n            )}\n            {currentStep === 1 && (\n              <ChooseType\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                selectedCard={selectedCard}\n                setSelectedCard={setSelectedCard}\n              />\n            )}\n            {currentStep === 2 && (\n              <ChooseGenre\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                setSelectedCardGenre={setSelectedCardGenre}\n                selectedCardGenre={selectedCardGenre}\n              />\n            )}\n            {currentStep === 3 && (\n              <ChooseMusicians\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                selectedFullProductionTeam={selectedFullProductionTeam}\n                setSelectedFullProductionTeam={setSelectedFullProductionTeam}\n                selectedMusicians={selectedMusicians}\n                setSelectedMusicians={setSelectedMusicians}\n              />\n            )}\n            {currentStep === 4 && (\n              <ChooseBudget\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                minRange={minRange}\n                maxRange={maxRange}\n                setMinRange={setMinRange}\n                setMaxRange={setMaxRange}\n                checkIfBudgetIsSelected={checkIfBudgetIsSelected}\n                setCheckIfBudgetIsSelected={setCheckIfBudgetIsSelected}\n              />\n            )}\n            {currentStep === 5 && (\n              <ShareLink\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                links={links}\n                setLinks={setLinks}\n                uploadedFiles={uploadedFiles}\n                setUploadedFiles={setUploadedFiles}\n                projectDetails={projectDetails}\n                setProjectDetails={setProjectDetails}\n              />\n            )}\n            {currentStep === 6 && (\n              <ProjectDelivery\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                selectedDate={selectedDate}\n                setSelectedDate={setSelectedDate}\n                selectedDatesAndPrices={selectedDatesAndPrices}\n                setSelectedDatesAndPrices={setSelectedDatesAndPrices}\n              />\n            )}\n            {currentStep === 7 && (\n              <GoodName\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n              />\n            )}\n            {currentStep === 8 && (\n              <AlmostDone\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                setCurrentStep={setCurrentStep}\n              />\n            )}\n            {currentStep === 9 && (\n              <BookSession\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                setCurrentStep={setCurrentStep}\n              />\n            )}\n            {currentStep === 10 && (\n              <ConnectInFewSecond\n                onNext={handleNext}\n                onBack={handelBack}\n                setUserProjectData={setUserProjectData}\n                userProjectData={userProjectData}\n                onUserProjectDataUpdate={handleUserProjectDataUpdate}\n              />\n            )}\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default NewProject;\n"],"sourceRoot":""}