{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\pages\\\\dashboard\\\\produce\\\\trackShow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import './trackShow.scss'\n// import sprite from \"../../../assets/icons/sprite.svg\";\n// import folderIcon from \"../../../assets/material-design-folder-icon-0.jpeg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport axios from 'axios';\nimport sprite from \"../../../assets/icons/sprite.svg\";\nimport Swal from 'sweetalert2';\n// import Folder2 from \"../../../assets/folder2.jpg\"\n// import Folder3 from \"../../../assets/folder3.jpg\"\n// import Folder4 from \"../../../assets/folder4.jpg\"\nimport ShowDetails from './showDetails';\nimport { httpUrl } from '../../../restservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrackShow(props) {\n  _s();\n  const [trackData, setTrackData] = useState([]);\n  const [featuredTrackData, setFeaturedTrackData] = useState([]);\n  const [nonFeaturedTrackData, setNONFeaturedTrackData] = useState([]);\n  const {\n    trackshowdetails\n  } = props;\n\n  // const [backpagescreen,setbackpagescreen]=useState()\n\n  useEffect(() => {\n    // alert('its work')\n    if (JSON.parse(localStorage.getItem(\"userData\"))) {\n      let userId = JSON.parse(localStorage.getItem(\"userData\")).id;\n      axios.get(httpUrl + 'soundTrack/license?customer=' + userId).then(function (response) {\n        setTrackData(response.data);\n        setFeaturedTrackData(response.data.filter(entry => entry.licensetype === \"NON_EXCLUSIVE\"));\n        setNONFeaturedTrackData(response.data.filter(entry => entry.licensetype !== \"NON_EXCLUSIVE\"));\n        console.log(response);\n      }).catch(function (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Unable to get data.',\n          showConfirmButton: false,\n          timer: 3500\n        });\n      });\n    }\n  }, []);\n  const changePage = getParam => {\n    trackshowdetails(getParam);\n\n    // props.setOpenDetailsBox(false)\n    // props.setStoreTracksFolderSection(getParam)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__heading\",\n      style: {\n        marginLeft: \"42px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          children: /*#__PURE__*/_jsxDEV(\"use\", {\n            href: sprite + \"#icon-folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), \"Tracks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trackMainBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showMasterFolder1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" folderHover\",\n          onClick: () => changePage(\"EXCLUSIVE\"),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: folderIcon,\n              alt: \"folder\",\n              className: \"iconFolder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Licensed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 36\n            }, this), \"Tracks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" folderHover1\",\n          onClick: () => changePage(\"NON_EXCLUSIVE\"),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: folderIcon,\n              alt: \"folder\",\n              className: \"iconFolder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Non-Exclusive\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 41\n            }, this), \"Tracks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showDetailsOfTrack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(TrackShow, \"LPoS+WAUP4R9A2w6a4Av/ovi0HA=\");\n_c = TrackShow;\nvar _c;\n$RefreshReg$(_c, \"TrackShow\");","map":{"version":3,"names":["React","useState","useEffect","folderIcon","axios","sprite","Swal","ShowDetails","httpUrl","jsxDEV","_jsxDEV","TrackShow","props","_s","trackData","setTrackData","featuredTrackData","setFeaturedTrackData","nonFeaturedTrackData","setNONFeaturedTrackData","trackshowdetails","JSON","parse","localStorage","getItem","userId","id","get","then","response","data","filter","entry","licensetype","console","log","catch","error","fire","icon","title","showConfirmButton","timer","changePage","getParam","children","className","style","marginLeft","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["E:/ui/src/pages/dashboard/produce/trackShow.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react'\n// import './trackShow.scss'\n// import sprite from \"../../../assets/icons/sprite.svg\";\n// import folderIcon from \"../../../assets/material-design-folder-icon-0.jpeg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\n// import folderIcon from \"../../../assets/foldershow.png\";\nimport axios from 'axios';\nimport sprite from \"../../../assets/icons/sprite.svg\";\nimport Swal from 'sweetalert2';\n// import Folder2 from \"../../../assets/folder2.jpg\"\n// import Folder3 from \"../../../assets/folder3.jpg\"\n// import Folder4 from \"../../../assets/folder4.jpg\"\nimport ShowDetails from './showDetails';\nimport { httpUrl } from '../../../restservice'\n\nexport default function TrackShow(props) {\n\n    const [trackData, setTrackData] = useState([])\n    const [featuredTrackData, setFeaturedTrackData] = useState([])\n    const [nonFeaturedTrackData, setNONFeaturedTrackData] = useState([])\n    const {trackshowdetails} = props\n   \n  \n   \n\n   \n    // const [backpagescreen,setbackpagescreen]=useState()\n\n   \n\n    useEffect(() => {\n        // alert('its work')\n        if (JSON.parse(localStorage.getItem(\"userData\"))) {\n            let userId = JSON.parse(localStorage.getItem(\"userData\")).id\n            axios.get(httpUrl +  'soundTrack/license?customer=' + userId)\n                .then(function (response) {\n                    setTrackData(response.data)\n                    setFeaturedTrackData(response.data.filter(entry => entry.licensetype === \"NON_EXCLUSIVE\"))\n                    setNONFeaturedTrackData(response.data.filter(entry => entry.licensetype !== \"NON_EXCLUSIVE\"))\n                    console.log(response)  \n                })\n                .catch(function (error) {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Unable to get data.',\n                        showConfirmButton: false,\n                        timer: 3500\n                    })\n                });\n        }\n    }, []);\n\n   \n    const changePage = (getParam)=> {\n        trackshowdetails(getParam)\n        \n        // props.setOpenDetailsBox(false)\n        // props.setStoreTracksFolderSection(getParam)\n    }\n\n    \n\n\n    return (\n        <div>\n           <div className=\"content__heading\" style={{marginLeft:\"42px\"}}>\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Tracks\n                </h1>\n            </div>\n        <div className='trackMainBox'>\n            <div className=\"showMasterFolder1\">\n                <div className=\" folderHover\" onClick={() => changePage(\"EXCLUSIVE\")}>\n                    <h4>\n                        <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                    \n                    </h4>\n                    <label>Licensed<br/>Tracks</label>\n                </div>\n                <div  className=\" folderHover1\"  onClick={() => changePage(\"NON_EXCLUSIVE\")}>\n                    <h4>\n                        {/* <img src={Folder4} alt=\"folder\" className='iconFolder' /> */}\n                        <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                        {/* Non-Exclusive<br/>Tracks */}\n                    </h4>\n                    <label>Non-Exclusive<br/>Tracks</label>\n                </div>\n            </div>\n            {/* <div className=\"content__heading\">\n                <h1>\n                    <img src={folderIcon} alt=\"folder\" className='iconFolder' />\n                    Licensed Tracks\n                </h1>\n            </div>\n            <div className=\"showFolder\">\n                {featuredTrackData.map(entry => {\n                    return <div className=\"folderBox\">\n                        <svg>\n                            <use href={sprite + \"#icon-folder\"}></use>\n                        </svg>\n                        {entry.name}\n                    </div>\n                })}\n\n            </div>\n\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Non Exclusive Tracks\n                </h1>\n            </div>\n            <div className=\"showFolder\">\n                {nonFeaturedTrackData.map(entry => {\n                    return <div className=\"folderBox\">\n                        <svg>\n                            <use href={sprite + \"#icon-folder\"}></use>\n                        </svg>\n                        {entry.name}\n                    </div>\n                })}\n\n            </div> */}\n\n            <div className=\"showDetailsOfTrack\">\n            {/* <ShowDetails /> */}\n            </div>\n        </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}