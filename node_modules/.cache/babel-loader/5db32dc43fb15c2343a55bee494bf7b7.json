{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\pages\\\\externalExplore\\\\showData.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './showExploreData.scss';\nimport featureBox from \"../../assets/explore/img1.png\";\nimport iconBox from \"../../assets/explore/playButton.png\";\nimport iconPauseBox from \"../../assets/explore/pause.png\";\nimport trackImage from \"../../assets/explore/trackImage.png\";\nimport track from \"../../assets/explore/tracks.png\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\nimport Waveform from \"./Waveform\";\nimport { httpUrl, docServerUrl } from '../../restservice';\nimport './woveStyles.scss';\n// import WaveSurfer from \"wavesurfer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar audio = null;\nexport default function ExternalShowExploreData(props) {\n  _s();\n  const [selectedFilter, setSelectedFilter] = useState(\"All\");\n  const [genreTable, setGenreTable] = useState([]);\n  const [trackTable, setTrackTable] = useState([]);\n  const [trackTableAll, setTrackTableAll] = useState([]);\n  const [featuredTrackTable, setFeaturedTrackTable] = useState([]);\n  const [featuredTrackTableAll, setFeaturedTrackTableAll] = useState([]);\n  const [openOverLay, setOpenOverLay] = useState(false);\n  const [openSoundPlay, setSoundPlay] = useState(false);\n  const [playingAudio, setPlayingAudio] = useState(0);\n\n  // For triggaring event\n  const [selectedPlayButton, setSelectedPlayButton] = useState(\"\");\n  const docServer = docServerUrl;\n  const setSelectedPage = param => {\n    setSelectedFilter(param);\n    if (param === \"All\") {\n      setTrackTable(trackTableAll);\n      setFeaturedTrackTable(featuredTrackTableAll);\n    } else {\n      setTrackTable(trackTableAll.filter(entry => entry.genre === param));\n      setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.genre === param));\n    }\n    stopSound();\n  };\n  useEffect(() => {\n    console.log(\"SSSSSSSSSSSSSSSSSSSs\");\n    axios.get(httpUrl + 'genre').then(result => {\n      let responseJson = result.data;\n      setGenreTable(responseJson);\n    });\n    axios.get(httpUrl + 'soundTrack?status=PUBLISHED&track=NON_FEATURED').then(result => {\n      let responseJson = result.data;\n      console.log(\"responseJsonnnnnnnnnnnn\", responseJson);\n      setTrackTable(responseJson);\n      setTrackTableAll(responseJson);\n      setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"));\n      setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"));\n      console.log(responseJson);\n    });\n\n    // axios.get(httpUrl +  'soundTrack?status=PUBLISHED')\n    //     .then((result) => {\n    //         let responseJson = result.data;\n    //         setTrackTable(responseJson)\n    //         setTrackTableAll(responseJson)\n    //         setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n    //         setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n    //     });\n  }, []);\n\n  // const wavesurferUse = (incomingPath) => {\n  //     setPlay(false);\n\n  //     if (waveformRef.current) {\n  //         wavesurfer.current = WaveSurfer.create({\n  //             container: waveformRef.current,\n  //             waveColor: \"#eee\",\n  //             progressColor: \"OrangeRed\",\n  //             cursorColor: \"OrangeRed\",\n  //             barWidth: 3,\n  //             barRadius: 3,\n  //             responsive: true,\n  //             height: 50,\n  //             normalize: true,\n  //             partialRender: true\n  //         });\n\n  //         wavesurfer.current.load(docServer + incomingPath);\n\n  //         wavesurfer.current.on(\"ready\", function () {\n  //             wavesurfer.current.play();\n  //             setPlay(true);\n\n  //         });\n  //     }\n  //     return () => wavesurfer.current.destroy();\n  // };\n\n  // function handlePlayPause(incomingPath, receivedId) {\n\n  //     setPlay(!playing);\n  //     if (waveformRef.current.play) {\n  //         wavesurfer.current.play();\n  //     } else {\n  //         wavesurferUse(incomingPath)\n  //     }\n  // };\n\n  const toTitleCase = str => {\n    if (str) {\n      let convertedStr = str.replaceAll(\"_\", \" \");\n      return convertedStr.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n    } else {\n      return \"\";\n    }\n  };\n  const getTheSong = () => {\n    // setOpenOverLay(true)\n    props.setIsExplorerOpen();\n    stopSound();\n  };\n  const closeTheSong = () => {\n    setOpenOverLay(false);\n    props.changeState(2);\n  };\n  const onlyCloseTheSong = () => {\n    setOpenOverLay(false);\n  };\n  const playSound = (incomingPath, receivedId) => {\n    console.log(incomingPath);\n    if (openSoundPlay) {\n      audio.pause();\n      setSoundPlay(false);\n    }\n    if (playingAudio !== receivedId) {\n      if (incomingPath) {\n        audio = new Audio(docServerUrl + incomingPath);\n        audio.play();\n        setSoundPlay(true);\n      }\n      setPlayingAudio(receivedId);\n    } else {\n      setPlayingAudio(0);\n    }\n  };\n  const stopSound = _ => {\n    if (audio && openSoundPlay) {\n      audio.pause();\n      setSoundPlay(false);\n    }\n  };\n  const searchBox = value => {\n    console.log(value);\n    if (value === \"\") {\n      console.log(\"object1\");\n      setTrackTable(trackTableAll);\n      setFeaturedTrackTable(featuredTrackTableAll);\n    } else {\n      console.log(\"object\");\n      setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1));\n      setTrackTable(trackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1 || entry.genre.toLowerCase().search(value.toLowerCase()) !== -1 || entry.composer.toLowerCase().search(value.toLowerCase()) !== -1));\n    }\n    console.log(trackTableAll);\n    console.log(\"TTTTTTTTTTTTT:\", trackTable);\n  };\n  const [username, userInput] = useInput({\n    type: \"text\"\n  }, searchBox);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"e_flexSet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"e_searchBox\",\n      children: userInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"e_exploreBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genericBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genericItemBox\" + (selectedFilter === 'All' ? \" activeGeneric\" : \"\"),\n          onClick: () => {\n            setSelectedPage(\"All\");\n          },\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), genreTable.map(entry => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genericItemBox\" + (selectedFilter === entry.genre ? \" activeGeneric\" : \"\"),\n            onClick: () => {\n              setSelectedPage(entry.genre);\n            },\n            children: toTitleCase(entry.genre)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainExploreBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featureBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"Featured songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"songShow\",\n            children: featuredTrackTable.map(entry => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"featureSong\",\n                children: [entry.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: docServer + entry.photo.docpath,\n                  alt: \"img 1\",\n                  onClick: () => {\n                    getTheSong();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: featureBox,\n                  alt: \"img 1\",\n                  onClick: () => {\n                    getTheSong();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detailBox\",\n                  onClick: () => playSound(entry.track.docpath, entry.id),\n                  children: [playingAudio === entry.id ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconPauseBox,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconBox,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"songName\",\n                    children: entry.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trackSong\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showSongs\",\n            children: trackTable.map(entry => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trackShow\",\n                onClick: stopSound,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buyOutbutton \",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      getTheSong();\n                    },\n                    style: {\n                      backgroundColor: \"#FFC701\",\n                      color: 'white'\n                    },\n                    children: \"Get Song\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trackDetail\",\n                  style: {\n                    backgroundColor: 'unset !important'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Waveform, {\n                    url1: docServer + entry.photo.docpath,\n                    url: docServer + entry.track.docpath,\n                    tracks: entry,\n                    id: entry.id,\n                    setSelectedPlayButton: setSelectedPlayButton,\n                    selectedPlayButton: selectedPlayButton\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), openOverLay && /*#__PURE__*/_jsxDEV(ExploreOverlay, {\n      changeState: closeTheSong,\n      onlyCloseTheSong: onlyCloseTheSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n_s(ExternalShowExploreData, \"Vyb4BO8M/clabEajcO8SFikK34w=\", false, function () {\n  return [useInput];\n});\n_c = ExternalShowExploreData;\nfunction useInput({\n  type\n}, keyFunction) {\n  _s2();\n  const [value, setValue] = useState(\"\");\n  const input = /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n      keyFunction(e.target.value);\n    },\n    type: type,\n    placeholder: \"Search by artist, songs or genre...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 19\n  }, this);\n  return [value, input];\n}\n_s2(useInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\nvar _c;\n$RefreshReg$(_c, \"ExternalShowExploreData\");","map":{"version":3,"names":["React","useEffect","useRef","sprite","featureBox","iconBox","iconPauseBox","trackImage","track","useState","axios","ExploreOverlay","Waveform","httpUrl","docServerUrl","jsxDEV","_jsxDEV","audio","ExternalShowExploreData","props","_s","selectedFilter","setSelectedFilter","genreTable","setGenreTable","trackTable","setTrackTable","trackTableAll","setTrackTableAll","featuredTrackTable","setFeaturedTrackTable","featuredTrackTableAll","setFeaturedTrackTableAll","openOverLay","setOpenOverLay","openSoundPlay","setSoundPlay","playingAudio","setPlayingAudio","selectedPlayButton","setSelectedPlayButton","docServer","setSelectedPage","param","filter","entry","genre","stopSound","console","log","get","then","result","responseJson","data","tracktype","toTitleCase","str","convertedStr","replaceAll","replace","txt","charAt","toUpperCase","substr","toLowerCase","getTheSong","setIsExplorerOpen","closeTheSong","changeState","onlyCloseTheSong","playSound","incomingPath","receivedId","pause","Audio","play","_","searchBox","value","name","search","composer","username","userInput","useInput","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","photo","src","docpath","alt","id","style","backgroundColor","color","url1","url","tracks","_c","keyFunction","_s2","setValue","input","onChange","e","target","placeholder","$RefreshReg$"],"sources":["E:/ui/src/pages/externalExplore/showData.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './showExploreData.scss'\nimport featureBox from \"../../assets/explore/img1.png\"\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport iconPauseBox from \"../../assets/explore/pause.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport track from \"../../assets/explore/tracks.png\"\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\n\nimport Waveform from \"./Waveform\";\nimport { httpUrl, docServerUrl } from '../../restservice'\nimport './woveStyles.scss'\n// import WaveSurfer from \"wavesurfer.js\";\n\nvar audio = null\n\n\n\nexport default function ExternalShowExploreData(props) {\n\n    const [selectedFilter, setSelectedFilter] = useState(\"All\")\n    const [genreTable, setGenreTable] = useState([])\n    const [trackTable, setTrackTable] = useState([])\n    const [trackTableAll, setTrackTableAll] = useState([])\n    const [featuredTrackTable, setFeaturedTrackTable] = useState([])\n    const [featuredTrackTableAll, setFeaturedTrackTableAll] = useState([])\n    const [openOverLay, setOpenOverLay] = useState(false)\n    const [openSoundPlay, setSoundPlay] = useState(false)\n    const [playingAudio, setPlayingAudio] = useState(0)\n\n    // For triggaring event\n    const [selectedPlayButton, setSelectedPlayButton] = useState(\"\")\n\n    const docServer = docServerUrl\n\n    const setSelectedPage = param => {\n        setSelectedFilter(param)\n        if (param === \"All\") {\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n        }\n        else {\n            setTrackTable(trackTableAll.filter(entry => entry.genre === param))\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.genre === param))\n        }\n        stopSound()\n    }\n\n    useEffect(() => {\n        console.log(\"SSSSSSSSSSSSSSSSSSSs\")\n\n        axios.get(httpUrl +  'genre')\n            .then((result) => {\n                let responseJson = result.data;\n                setGenreTable(responseJson)\n            });\n        axios.get(httpUrl +  'soundTrack?status=PUBLISHED&track=NON_FEATURED')\n            .then((result) => {\n                let responseJson = result.data;\n                console.log(\"responseJsonnnnnnnnnnnn\",responseJson)\n                setTrackTable(responseJson)\n                setTrackTableAll(responseJson)\n                setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                console.log(responseJson)\n            });\n\n        // axios.get(httpUrl +  'soundTrack?status=PUBLISHED')\n        //     .then((result) => {\n        //         let responseJson = result.data;\n        //         setTrackTable(responseJson)\n        //         setTrackTableAll(responseJson)\n        //         setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n        //         setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n        //     });\n\n    }, [])\n\n    // const wavesurferUse = (incomingPath) => {\n    //     setPlay(false);\n\n    //     if (waveformRef.current) {\n    //         wavesurfer.current = WaveSurfer.create({\n    //             container: waveformRef.current,\n    //             waveColor: \"#eee\",\n    //             progressColor: \"OrangeRed\",\n    //             cursorColor: \"OrangeRed\",\n    //             barWidth: 3,\n    //             barRadius: 3,\n    //             responsive: true,\n    //             height: 50,\n    //             normalize: true,\n    //             partialRender: true\n    //         });\n\n    //         wavesurfer.current.load(docServer + incomingPath);\n\n    //         wavesurfer.current.on(\"ready\", function () {\n    //             wavesurfer.current.play();\n    //             setPlay(true);\n\n    //         });\n    //     }\n    //     return () => wavesurfer.current.destroy();\n    // };\n\n    // function handlePlayPause(incomingPath, receivedId) {\n\n    //     setPlay(!playing);\n    //     if (waveformRef.current.play) {\n    //         wavesurfer.current.play();\n    //     } else {\n    //         wavesurferUse(incomingPath)\n    //     }\n    // };\n\n    const toTitleCase = (str) => {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    const getTheSong = () => {\n        // setOpenOverLay(true)\n        props.setIsExplorerOpen()\n        stopSound()\n    }\n\n    const closeTheSong = () => {\n        setOpenOverLay(false)\n        props.changeState(2)\n    }\n\n    const onlyCloseTheSong = () => {\n        setOpenOverLay(false)\n    }\n\n    const playSound = (incomingPath, receivedId) => {\n        console.log(incomingPath)\n        if (openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n\n        if (playingAudio !== receivedId) {\n            if (incomingPath) {\n                audio = new Audio(docServerUrl + incomingPath);\n                audio.play();\n                setSoundPlay(true)\n            }\n            setPlayingAudio(receivedId)\n        }\n        else {\n            setPlayingAudio(0)\n        }\n    }\n\n    const stopSound = _ => {\n        \n        if (audio && openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n    }\n\n    const searchBox = (value) => {\n        console.log(value)\n        if (value === \"\") {\n            console.log(\"object1\")\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n        }\n        else {\n            console.log(\"object\")\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1))\n\n            setTrackTable(trackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1 || entry.genre.toLowerCase().search(value.toLowerCase()) !== -1 ||\n                entry.composer.toLowerCase().search(value.toLowerCase()) !== -1))\n        }\n        console.log(trackTableAll)\n        console.log(\"TTTTTTTTTTTTT:\",trackTable)\n    }\n\n    const [username, userInput] = useInput({ type: \"text\" }, searchBox);\n\n\n\n    return (\n        <div className='e_flexSet'>\n            <div className=\"e_searchBox\">\n                {userInput}\n            </div>\n            <div className=\"e_exploreBox\">\n                <div className=\"genericBox\">\n                    <div\n                        className={\"genericItemBox\" + (selectedFilter === 'All' ? \" activeGeneric\" : \"\")}\n                        onClick={() => { setSelectedPage(\"All\"); }}>\n                        All\n                    </div>\n                    {genreTable.map((entry) => {\n                        return (\n                            <div\n                                className={\"genericItemBox\" + (selectedFilter === entry.genre ? \" activeGeneric\" : \"\")}\n                                onClick={() => { setSelectedPage(entry.genre); }}>\n                                {toTitleCase(entry.genre)}\n                            </div>\n                        )\n                    })}\n                    {/* <div className={\"genericItemBox\" + (selectedFilter === 'Hip Hop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Hip Hop'); }}>Hip Hop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Bollywood' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Bollywood'); }}>Bollywood</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Pop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Pop'); }}>Pop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Rock' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Rock'); }}>Rock</div> */}\n                </div>\n                <div className=\"mainExploreBox\">\n                    <div className=\"featureBox\">\n                        <div className=\"heading\">Featured songs</div>\n                        <div className=\"songShow\">\n                            {featuredTrackTable.map((entry) => {\n                                return (\n                                    <div className=\"featureSong\" >\n                                        {entry.photo ?\n                                            <img src={docServer + entry.photo.docpath} alt=\"img 1\" onClick={() => { getTheSong() }} />\n                                            :\n                                            <img src={featureBox} alt=\"img 1\" onClick={() => { getTheSong() }} />\n                                        }\n                                        <div className=\"detailBox\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" />\n                                            }\n\n                                            <div className=\"songName\">\n                                                {entry.name}\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                )\n                            })}\n\n                            {/* <div className=\"featureSong\">\n                                <img src={featureBox} alt=\"img 1\" />\n                                <div className=\"detailBox\">\n                                    <img src={iconBox} alt=\"icon\" />\n                                    <div className=\"songName\">\n                                        Black Pink\n                                    </div>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                    <div className=\"trackSong\">\n                        <div className=\"heading\">Tracks</div>\n                        <div className=\"showSongs\">\n                            {trackTable.map((entry) => {\n                                return (\n                                    <div className=\"trackShow\" onClick={stopSound}>\n                                        {/* <div className=\"imageTrack\" onClick={() => playSound(entry.track.docpath, entry.id)} >\n                                            {entry.photo ?\n                                                <img src={docServer + entry.photo.docpath} alt=\"trackImg\" className=\"trackImg\" />\n                                                :\n                                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                            }\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" className='upperImage' />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" className='upperImage' />\n                                            }\n\n                                        </div> */}\n                                        <div className=\"buyOutbutton \">\n                                            <button onClick={() => { getTheSong() }} style={{ backgroundColor: \"#FFC701\", color: 'white' }}>\n                                                Get Song\n                                            </button>\n                                        </div>\n                                        <div className=\"trackDetail\" style={{ backgroundColor: 'unset !important' }}>\n                                            <Waveform\n                                                url1={docServer + entry.photo.docpath}\n                                                url={docServer + entry.track.docpath}\n                                                tracks={entry} id={entry.id}\n                                                setSelectedPlayButton={setSelectedPlayButton}\n                                                selectedPlayButton={selectedPlayButton}\n                                            />\n                                        </div>\n                                        {/* <div className=\"trackDetail\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            <div className=\"trackName\">{entry.name}</div>\n                                            <div className=\"trackAuthor\">{entry.composer}</div>\n                                        </div> */}\n                                        {/* <div className=\"trackShow\">\n                                            <Waveform url={docServer + entry.track.docpath} />\n                                        </div> */}\n\n                                        {/* <img src={track} alt=\"trackShow\" className=\"trackShow\" onClick={() => playSound(entry.track.docpath, entry.id)} /> */}\n                                        {/* <div className=\"buyOutbutton\">\n                                            <button onClick={() => { getTheSong() }} >\n                                                Get Song\n                                            </button>\n                                        </div> */}\n                                    </div>\n                                )\n                            })}\n                            {/* <div className=\"songTrack\">\n                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                <div className=\"trackDetail\">\n                                    <div className=\"trackName\">Come Over</div>\n                                    <div className=\"trackAuthor\">Mike Mains</div>\n                                </div>\n                                <img src={track} alt=\"trackShow\" className=\"trackShow\" />\n                                <div className=\"buyOutButton\">\n                                    Get Song\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {openOverLay && <ExploreOverlay changeState={closeTheSong} onlyCloseTheSong={onlyCloseTheSong} />}\n        </div>\n    )\n}\n\n\nfunction useInput({ type }, keyFunction) {\n    const [value, setValue] = useState(\"\");\n    const input = <input value={value} onChange={e => { setValue(e.target.value); keyFunction(e.target.value) }} type={type} placeholder='Search by artist, songs or genre...' />;\n    return [value, input];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}