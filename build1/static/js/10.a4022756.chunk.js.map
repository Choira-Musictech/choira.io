{"version":3,"sources":["pages/arm/user/detailsUser.jsx","pages/arm/user/manageUser.jsx","pages/arm/user/projectmanage.jsx","pages/arm/user/Adduser.jsx","pages/arm/user/Edituser.jsx","pages/arm/user/showUsers.jsx","pages/arm/projects/Editpage.jsx","pages/arm/projects/project.jsx","pages/arm/projects/detailsProject.jsx","pages/arm/projects/Setprojectpage.jsx","pages/myprofile/FormProfileRM.jsx","pages/messages/messageManager.jsx","pages/arm/Tracksstatus.jsx","pages/arm/Addtrack.jsx","pages/arm/Edittrack.jsx","pages/arm/managetrack.jsx","pages/arm/armHome.jsx"],"names":["DetailsUser","props","userId","goBack","data","setData","useState","useEffect","axios","get","httpUrl","then","responce","console","log","_jsx","className","children","_jsxs","style","color","float","onClick","cursor","padding","fontSize","name","email","phone","city","login","signuptype","managername","dateData","manageid","JSON","parse","localStorage","getItem","id","dataparam","ManageUser","searchterm","setsearchterm","status","setStatus","showDetailsPage","showpage","datatype","setDatatype","loadData","st","api","response","handleChange","e","target","value","changeStatus","textAlign","scope","colSpan","width","height","display","type","onChange","placeholder","backgroundColor","margin","required","startdate","enddate","submitDate","filter","val","toLowerCase","includes","map","entry","unixTime","addedon","Intl","DateTimeFormat","year","month","day","format","showproject","sendableId","projectid","lengthdefine","random1","Projectmanage","Component","constructor","super","isShowPopup","this","setState","showModalPopup","updateTable","length","onChangeFile","event","i","Math","floor","random","selectedFile","files","reader","FileReader","onload","eve","imageUrl","result","readAsDataURL","photo","docname","doctype","docpath","state","projects","customer","handleUpload","BASE_URL","handleResponse","isSuccess","message","formData","FormData","append","post","catch","err","opensweetalertdanger","handleSubmit","bind","handleUpdateSubmit","url","linkdata","setScreenOpen","setmnanageproject","getbyidproject","docServer","docServerUrl","opensweetalert","Swal","fire","icon","title","window","location","reload","text","endpoint","fetch","headers","json","links","backpagescreen","projectidd","chnageproject","scrolling","componentDidMount","updateProject","backpage","updateCancel","addYoutubeUrl","preventDefault","requestOptions","method","body","stringify","link","firstName","Status","deleteProject","showCancelButton","confirmButtonText","cancelButtonText","deleteLink","container","ids","renderTableHeader","renderTableDataYoutube","project","index","ReactPlayer","controls","getToTitles","str","string","replace","toTitles","s","t","charAt","toUpperCase","substr","details","Details","file","setTimeout","renderTableDataProject","_this$state$projects$","username","genre","projecttype","faqs","projectprice","paymentstatus","preload","src","render","folderIcon","alt","justifyContent","onSubmit","ref","marginBottom","autoplay","Adduser","React","fields","setemployeescreen","submituserRegistrationForm","password","projectdata","btoa","showConfirmButton","timer","validateForm","errors","formIsValid","match","RegExp","test","marginTop","Email","Edituser","initfun","userid","ShowArmUsers","pageSelection","setPageSelection","showManagePage","_Fragment","receiveId","showuseredit","showaddpage","cname","Editpage","custdata","receivedid","projectId","customerid","Back","ManageProjects","showDetails","userID","armProject","manager","statuschange","updateproject","toTitleCase","replaceAll","txt","class","custname","setItem","selectCustomer","changePayment","DetailsFormProject","selectProject","undefined","Selected_project","Setprojectpage","projectSelection","setprojectelection","showDetailsProject","p_id","showeditpage","FormProjectRM","uppercase","word","slice","page","logoutUser","href","updateProfile","updatepass","otpfunction","OTP","sendotp","toMobile","fieldss","otpdata","otp","setotppage","error","updateemployee","updateemp","fieldsss","otpnum","urllink","alert","localData","handleChange1","handleChange2","submitpassword","oldpassword","newpassword","confirmpassword","passjson","setpass","atob","clear","Object","keys","key","City","Phone","_data$photo","_data$photo2","Link","to","flexDirection","MessageManager","nodeUrl","sprite","frameBorder","statustrack","trackidd","Armname","Managetracks","_trackdata$photo","_trackdata$track","datafill","setDatafill","pagestatus","setpagestatus","trackstatus","settrackstatus","showaddtrack","showedittrack","changepage","setchangepage","changerejectstatus","setchangerejectstatus","trackdata","settrackdata","totaltrack","settotaltrack","totalsold","setotalsold","setpagefour","setpagetwo","showedit","senidd","trackdetails","setpagezeroall","strdata","jsonData","tracktype","composer","_index","price","description","rejectreason","track","rname","toString","substring","Date","getTime","Addtrack","getdata","projectvalue","dataid","onChangeFile1","selectedFile1","imageUrl1","docdesc","refreshdata","phoadd","trackid","updatephoto","handleUpload1","tracktypess","updatedata","handleStatusChange","handletrackstatus","armname","uploadedby","ext","lastIndexOf","updateaudio","updateaudiofile","updateAbleData","borderRadius","readOnly","accept","autoPlay","Edittrack","getdatabyid","getbyidtrack","trackdetailId","trackvalue","_this$state$data$phot","_this$state$data$trac","defaultValue","ManagepageTrack","showmanagetrack","ArmHome","isOpen","setIsOpen","isProfile","setIsProfile","tabPage","setTabPage","getName","setGetName","navigate","useNavigate","userData","userPhoto","getDoc","getDocLink","openProfile","Logo","ReactModal","onRequestClose","contentLabel","overlayClassName","FormMain","setAppElement"],"mappings":"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","file":"static/js/10.a4022756.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./user.scss\";\nimport { httpUrl } from \"../../../restservice\";\n\nexport default function DetailsUser(props) {\n  const { userId, goBack } = props;\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    axios.get(httpUrl + \"customer/\" + userId).then((responce) => {\n      setData(responce.data);\n      console.log(responce.data);\n    });\n  }, [userId]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body \">\n        <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n          <div className=\"panel panel-default cart-border\">\n            <div className=\"panel-heading panel-style\">\n              <h3 style={{ color: \"#ffc701\" }}>\n                <span style={{ float: \"left\" }}>User Details</span>\n                <span\n                  onClick={() => {\n                    goBack();\n                  }}\n                  style={{ color: \"white\", float: \"right\", cursor: \"pointer\" }}\n                >\n                  Back\n                </span>\n              </h3>\n\n              {/* <h1 onClick={() => {goBack()}} >This is details page==={userId}</h1> */}\n            </div>\n\n            <div className=\"panel-body\">\n              <div style={{ padding: \"24px\" }}>\n                <span style={{ fontSize: \"19px\", float: \"left\" }}>\n                  Personal Details :\n                </span>\n              </div>\n\n              <div className=\"grid-container\">\n                <div className=\"grid-item\">\n                  Name: <label>{data.name}</label>\n                </div>\n\n                <div className=\"grid-item\">\n                  Email: <label>{data.email}</label>\n                </div>\n\n                <div className=\"grid-item\">\n                  Phone: <label>{data.phone}</label>\n                </div>\n\n                <div className=\"grid-item\">\n                  City: <label>{data.city}</label>\n                </div>\n                {data.login ? (\n                  <div className=\"grid-item\">\n                    Signup Type: <label>{data.login.signuptype}</label>\n                  </div>\n                ) : null}\n                <div className=\"grid-item\">\n                  Assign Manager: <label>{data.managername}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./userstyle.scss\";\nimport axios from \"axios\";\nimport { httpUrl } from '../../../restservice'\n\nlet dateData = {};\nlet manageid = JSON.parse(localStorage.getItem('userData')).id;\nlet dataparam = '&manager=' + manageid;\nexport default function ManageUser(props) {\n\n    const [data, setData] = useState([]);\n\n    const [searchterm, setsearchterm] = useState('');\n    const [status, setStatus] = useState('MY');\n\n    const { showDetailsPage } = props\n    const { showpage } = props\n    // const { showaddpage } = props\n    // const { showuseredit } = props\n    const [datatype, setDatatype] = useState('ALL');\n\n    useEffect(() => {\n        // dataparam = '&manager=' + manageid;\n        loadData(status)\n    }, [])\n\n    const showDetails = sendableId => {\n        showDetailsPage(sendableId)\n    }\n\n    // const showadddpage = () => {\n    //     showaddpage();\n    // }\n\n    // const showeditpage = sendableId => {\n    //     showuseredit(sendableId);\n    // }\n\n    const showproject = (sendableId, name) => {\n        showpage(sendableId, name)\n    }\n\n    function loadData(st) {\n        let manageid = JSON.parse(localStorage.getItem('userData')).id;\n        let api = '';\n        if (st === 'MY') {\n            api = '?manager=' + manageid\n        } else {\n            api = ''\n        }\n        axios.get(httpUrl + 'customer' + api)\n            // axios.get(httpUrl +  'customer?manager=' + manageid)\n            .then(response => {\n                setData([...response.data])\n                console.log(response.data)\n                setDatatype(\"ALL\")\n            });\n    }\n\n    // function deleteemployee(id) {\n\n\n\n    //     Swal.fire({\n    //         title: 'Are you sure?',\n    //         text: 'You will not be able to recover this customer data!',\n    //         type: 'Warning',\n    //         showCancelButton: true,\n    //         confirmButtonText: 'Yes, delete it!',\n    //         cancelButtonText: 'No, keep it'\n    //     }).then((result) => {\n    //         if (result.value) {\n\n    //             axios.delete(httpUrl +  'customer/' + id)\n    //                 .then(responce => {\n    //                     Swal.fire(\n    //                         'Deleted!',\n    //                         'Your data has been deleted.',\n    //                         'success'\n    //                     );\n    //                     console.log(responce)\n    //                     loadData()\n    //                 });\n\n\n    //         }\n    //     });\n    // }\n\n\n\n    function unixTimeConverter(unixTime) {\n        const date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(unixTime);\n        return date;\n    }\n\n    const handleChange = (e) => {\n        dateData[e.target.name] = e.target.value;\n    }\n\n    function changeStatus(st) {\n        setStatus(st)\n        if (st === 'MY') {\n            dataparam = '&manager=' + manageid;\n        } else {\n            dataparam = '';\n        }\n\n        loadData(st);\n    }\n\n    function fistWeek() {\n\n        axios.get(httpUrl + 'customer?type=THISWEEK' + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('THIS_WEEK')\n                console.log(responce.data)\n            });\n    }\n\n    function lastMonth() {\n\n        axios.get(httpUrl + 'customer?type=LASTMONTH' + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('LAST_MONTH')\n                console.log(responce.data)\n            });\n    }\n\n    function currentMonth() {\n\n        axios.get(httpUrl + 'customer?type=THISMONTH' + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('THIS_MONTH')\n                console.log(responce.data)\n            });\n    }\n\n    function customDate() {\n        setDatatype('CUSTOM_DATE')\n    }\n\n    function submitDate() {\n        let startdate = dateData.startdate;\n        let enddate = dateData.enddate;\n        axios.get(httpUrl + 'customer?startdate=' + startdate + '&enddate=' + enddate + dataparam)\n            .then(responce => {\n                setData([...responce.data])\n                setDatatype('CUSTOM_DATE')\n                console.log(responce.data)\n            });\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\", textAlign: \"left\" }}>\n                                <span>Manage User</span>\n                            </h3>\n                        </div>\n\n                        <div className=\"panel-body\">\n                            <div className=\"table-responsive table-style\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">Phone</th>\n                                            <th scope=\"col\">Email</th>\n                                            <th scope=\"col\">City</th>\n                                            <th scope=\"col\">Since</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n\n                                        <tr>\n                                            <th colSpan=\"12\">\n                                                <div className=\"row\">\n                                                    <div style={{\n                                                        float: \"left\",\n                                                        width: \"50%\",\n                                                        padding: \"8px 20px\",\n                                                        height: \"50px\"\n                                                    }} >\n                                                        <div style={{ display: 'flex' }}>\n                                                            <input type=\"text\" className=\"inputetype\"\n\n                                                                onChange={(e) => {\n                                                                    setsearchterm(e.target.value);\n                                                                }}\n                                                                placeholder=\"Search..\" name=\"search\" />\n                                                            <button type=\"submit\" className='btn-primary' style={{ color: \"White\", padding: \"9px 7px\", backgroundColor: \"transparent\" }}>\n                                                                <i className=\"fa fa-search\"></i>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                    <div style={{\n                                                        float: \"left\",\n                                                        width: \"50%\",\n                                                        padding: \"10px 20px\",\n                                                        height: \"50px\"\n                                                    }} >\n                                                        <button onClick={() => { changeStatus('MY') }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={status === 'MY' ? \"active-link\" : \"\"}>My Customers</button>\n                                                        <button onClick={() => { changeStatus('ALL') }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={status === 'ALL' ? \"active-link\" : \"\"}>All Customers</button>\n\n                                                    </div>\n                                                </div>\n                                                <div>\n\n                                                    <div style={{ float: \"left\", margin: \"12px\", display: \"flex\" }}>\n                                                        <button onClick={() => { fistWeek() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'THIS_WEEK' ? \"active-link\" : \"\"}>THIS WEEK</button>\n                                                        <button onClick={() => { currentMonth() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'THIS_MONTH' ? \"active-link\" : \"\"}>THIS MONTH</button>\n                                                        <button onClick={() => { lastMonth() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'LAST_MONTH' ? \"active-link\" : \"\"}>LAST MONTH</button>\n                                                        <button onClick={() => { customDate() }} className='btn-primary' style={{ color: \"White\", margin: \"0 20px\", padding: \"6px 30px\", fontSize: \"15px\" }} className={datatype === 'CUSTOM_DATE' ? \"active-link\" : \"\"}>CUSTOM DATE</button>\n                                                    </div>\n                                                    <br />\n                                                    {datatype === 'CUSTOM_DATE' ?\n                                                        <div style={{ margin: \"5px 60px\" }}>\n\n                                                            <div style={{\n                                                                float: \"left\",\n                                                                width: \"40%\",\n                                                                padding: \"10px\",\n                                                                height: \"60px\", display: \"flex\"\n                                                            }} >\n\n                                                                <span style={{ padding: \"10px 6px\", fontSize: \"16px\", width: \"33%\" }}>Start Date</span>\n                                                                <input type=\"date\" name=\"startdate\" style={{ width: \"70%\" }} required onChange={(e) => { handleChange(e) }} />\n\n                                                            </div >\n                                                            <div style={{\n                                                                float: \"left\",\n                                                                width: \"40%\",\n                                                                padding: \"10px\",\n                                                                height: \"60px\", display: \"flex\"\n                                                            }} >\n\n                                                                <span style={{ padding: \"10px 6px\", fontSize: \"16px\", width: \"33%\" }}>End Date</span>\n                                                                <input type=\"date\" style={{ width: \"70%\" }} name=\"enddate\" required onChange={(e) => { handleChange(e) }} />\n                                                                <button onClick={() => { submitDate() }} type=\"submit\" className='btn-primary' style={{ color: \"White\", padding: \"9px 7px\", backgroundColor: \"transparent\" }}>\n                                                                    <i className=\"fa fa-search\"></i>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                        : null}\n                                                </div>\n                                            </th>\n                                        </tr>\n\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.filter((val) => {\n                                                if (searchterm === '') {\n                                                    return true;\n\n                                                }\n                                                else if (\n                                                    val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.city.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.email.toLowerCase().includes(searchterm.toLowerCase())\n\n\n                                                ) {\n                                                    return true;\n\n                                                }\n                                                else return false\n\n\n                                            }).map(((entry) => (\n                                                <tr key={entry.id}>\n\n                                                    <td>{entry.name}</td>\n                                                    <td>{entry.phone}</td>\n                                                    <td>{entry.email}</td>\n                                                    <td>{entry.city}</td>\n                                                    <td>{unixTimeConverter(entry.addedon)}</td>\n                                                    <td>\n\n                                                        <span onClick={() => { showproject(entry.id, entry.name) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-tasks\"></i>\n                                                            </button>\n                                                        </span>\n\n                                                        &nbsp;\n                                                        {/* &nbsp;\n                                                        <span onClick={() => { showeditpage(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-edit\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp; */}\n                                                        &nbsp;\n\n                                                        <span onClick={() => { showDetails(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-info-circle\"></i>\n\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        {/* &nbsp;\n                                                        <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i class=\"fa fa-trash\"></i>\n\n                                                            </button>\n                                                        </span> */}\n\n\n                                                    </td>\n\n                                                </tr>\n                                            )))\n                                        }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        </div >\n\n    )\n}\n","import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport '../../dashboard/produce/project/project.scss'\nimport folderIcon from \"../../../assets/foldershow1.jpg\";\nimport \"./project.scss\"\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet projectid\nlet lengthdefine\nlet random1\nclass Projectmanage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: {},\n      url: '',\n      data: [],\n      linkdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      setmnanageproject: 1,\n      selectedFile: null,\n      handleResponse: null,\n      getbyidproject: [],\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    const endpoint = httpUrl + 'project/' + projectid;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: json,\n          linkdata: [...json.links],\n        });\n\n      });\n\n    console.log(this.state.projects)\n  };\n  backpagescreen(projectidd) {\n    projectid = projectidd\n    this.loadData()\n    this.setState({ setmnanageproject: 2 });\n  }\n\n\n  chnageproject() {\n    let id = this.props.userId;\n    axios.get(httpUrl + 'project?customer=' + id)\n      .then(responce => {\n        this.setState({\n          getbyidproject: responce.data,\n          scrolling: false,\n\n        });\n\n      });\n\n  };\n  componentDidMount() {\n    this.chnageproject()\n    // this.loadData();\n    // this.updateTable()\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  backpage() {\n    this.setState({ setmnanageproject: 1 })\n  }\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n\n    Swal.fire({\n      title: 'Project Is Active !',\n      text: 'Are You Sure You Want To Delete Project? You Can Not Recover Data',\n      type: 'Warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n\n        const endpoint = httpUrl + 'project/' + id;\n        fetch(endpoint, { method: 'DELETE' })\n          .then(response => response.json())\n          .then(json => {\n            Swal.fire(\n              'Deleted!',\n              'Your data has been deleted.',\n              'success'\n            );\n            this.props.goBack();\n          });\n\n\n      }\n    });\n\n\n  }\n\n\n\n\n\n\n\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects.id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n        <th style={{ width: '200px' }}>action</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='100%' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n          <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button title=\"Delete Link\" className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    if (str) {\n      let string;\n      if (str !== ' ') {\n        string = str.replace(/_/g, ' ');\n      } else {\n        string = str;\n      }\n      return this.toTitles(string);\n    }\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  updateTable = () => {\n    axios.get(httpUrl + 'project?customer=' + this.props.userId)\n      .then(responce => {\n        lengthdefine = responce.data.length\n        console.log(responce.data)\n        console.log(lengthdefine)\n      });\n  }\n\n  // randommno = () => {\n\n  //   var digits = '0123456789';\n  //    random1 = '';\n  //   for (let i = 0; i < 2; i++) {\n  //     random1 += digits[Math.floor(Math.random() * 2)];\n  //   }\n  //   console.log(random1)\n  // }\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    // let text = lengthdefine + 1\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects.customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects.customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects.id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 5000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return (\n      <tr>\n        <td>\n          <ul><span>Name:</span>{this.state.projects.name}</ul>\n          <ul><span>Customer Name:</span>{this.props.username}</ul>\n          <ul><span>Genre:</span>{this.getToTitles(this.state.projects.genre)}</ul>\n          <ul><span>Project Type:</span>{this.getToTitles(this.state.projects.projecttype)}</ul>\n          <ul><span>Needs Help With:</span>{this.getToTitles(this.state.projects.faqs)}</ul>\n          <ul><span>Price Type:</span>{this.getToTitles(this.state.projects.projectprice)}</ul>\n          <ul><span>Payment Status:</span>{this.getToTitles(this.state.projects.paymentstatus)}</ul>\n          {/* <ul><span>Manager:</span>{managername}</ul> */}\n          <ul><span>Details:</span><li>{this.state.projects.details}</li></ul>\n        </td>\n        <td className=\"text-align-center\">\n          <audio controls\n            preload=\"auto\" style={{ width: '100%' }}\n            src={this.state.docServer + this.state.projects.file?.docpath}>\n          </audio>\n        </td>\n        <td className=\"text-align-center\">\n          <button title=\"Project Update\" className=\"my-svg-edit\"\n            onClick={e => {\n              this.updateProject();\n            }}\n          >\n          </button>&nbsp;\n          <button title=\"Project Delete\" className=\"my-svg-delete\"\n            onClick={e => {\n              this.deleteProject(this.state.projects.id);\n            }}\n          >\n          </button>\n        </td>\n      </tr>\n    )\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div>\n        {this.state.setmnanageproject === 1 ?\n          <div>\n            <div className=\"contenttype\">\n              <h2>\n                <span style={{ float: \"left\" }} >Project List</span>\n                <span style={{ float: \"right\", cursor: \"pointer\" }} onClick={() => { this.props.goBack() }}>Back</span>\n              </h2>\n            </div>\n            {/* <h2 style={{ textAlign: \"right\" }} onClick={() => { this.props.goBack() }}>Back</h2> */}\n            <div className='trackMainBox'>\n              <div className=\"showMasterFolder\">\n                {this.state.getbyidproject.map(entry => (\n                  <div key={entry.id} style={{ cursor: \"pointer\" }} className=\"folderHover\" onClick={() => { this.backpagescreen(entry.id) }}>\n                    <h4 >\n                      <img src={folderIcon} style={{ cursor: \"pointer\" }} alt=\"folder\" className='iconFolder' />\n                    </h4>\n                    <label style={{ cursor: \"pointer\" }}>{entry.name}</label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          : null}\n        {\n          this.state.setmnanageproject === 2 ?\n            <div className=\"clearfix\">\n              {this.state.setScreenOpen === 0 ?\n                <div className=\"row\">\n                  <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"card\">\n                      <h3 style={{ display: \"flex\", justifyContent: \"space-between\", padding: 10 }}>\n                        <span>Project Details</span>\n                        <span onClick={() => { this.backpage() }} style={{ color: \"white\" }}>\n                          <button>\n                            Back\n                          </button>\n                        </span>\n                      </h3>\n                      <table id='projects'>\n                        <tbody>\n                          {this.renderTableHeader()}\n                          {this.renderTableDataProject()}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                : null}\n\n              {this.state.setScreenOpen === 0 ?\n                <div className=\"row\">\n                  <div className=\"col-md-4 animated fadeIn\">\n                    <div className=\"card\">\n                      <div className=\"btn-align-down\">\n                        <button title=\"Add You Tube Urls\" className=\"my-svg-add\"\n                          onClick={e => {\n                            this.addYoutubeUrl();\n                          }}\n                        >\n                        </button>\n                      </div>\n                      <div>\n                        <h3 className=\"paddi\">Reference Links</h3>\n                        <table id='projects'>\n                          <tbody>\n                            {this.renderTableHeader()}\n                            {this.renderTableDataYoutube()}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                :\n                this.state.setScreenOpen === 1 ?\n                  <div className=\"row\">\n                    <div className=\"card-body\">\n                      <div className=\"card\">\n                        <div className=\"paddi\"><h3>Project Edit</h3></div>\n                        <hr />\n                        <form onSubmit={this.handleUpdateSubmit}>\n                          <ul>\n                            <label className=\"label\" >Details: </label><br />\n                            <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                          <div style={{ padding: '10px 20px 0px 20px', textAlign: \"left\" }}>\n                            <span>Select Audio File:</span>\n                            <span style={{ marginBottom: 10 }}>\n                              <input type=\"file\" onChange={this.onChangeFile} />\n                            </span>\n                            <div className=\"up-img\">\n                              {imageUrl &&\n                                <audio controls\n                                  autoplay preload=\"auto\"\n                                  src={imageUrl}>\n                                </audio>\n                              }\n                            </div>\n                          </div>\n\n                          <div className=\"btn-margin\">\n                            <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\" style={{ height: \"37px\" }}>\n                              <span> Submit</span>\n                            </button>\n                            <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\" style={{ height: \"37px\" }}\n                              onClick={e => {\n                                this.updateCancel();\n                              }}\n                            ><span>Cancel</span>\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  :\n                  this.state.setScreenOpen === 2 ?\n                    <div className=\"col-xs-2\">\n                      <div className=\"card-body\">\n                        <div className=\"card\">\n                          <form onSubmit={this.handleSubmit}>\n                            <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                            <hr />\n                            <ul>\n                              <label className=\"label\" >Reference Link: </label>\n                              <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                            <div className=\"btn-margin\">\n                              <button style={{ padding: \"1px 25px\" }} type=\"Submit\" className=\"btn-primary btn-small\"\n                              >\n                                Submit\n                              </button>\n                              <button style={{ padding: \"1px 25px\" }} className=\"btn-primary btn-small\"\n                                onClick={e => {\n                                  this.updateCancel();\n                                }}\n                              >Cancel\n                              </button>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                    : null\n              }\n\n            </div>\n            : null}\n\n\n      </div>\n    );\n\n  }\n}\n\nexport default Projectmanage;\n","import axios from 'axios';\nimport React from 'react';\nimport './adduser.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl } from '../../../restservice'\n\nclass Adduser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {},\n            photo: {},\n            setemployeescreen: 0\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n\n    }\n\n    submituserRegistrationForm(e) {\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            password: \"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n\n\n        let projectdata = {\n            name: this.state.fields.name,\n            phone: this.state.fields.phone,\n            email: this.state.fields.email,\n            city: this.state.fields.city,\n            login: {\n                email: this.state.fields.email,\n                password: btoa(this.state.fields.password),\n                type: \"CUSTOMER\",\n                signuptype: \"EMAIL\",\n            },\n            photo: {   \n                \"docname\": \"\",\n                \"docdesc\": \"employee profile photo\",\n                \"doctype\": \"PROFILE\",\n                \"urllink\": \"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\"\n            }\n\n        }\n        projectdata.login.email = projectdata.email\n        axios.post(httpUrl +  'customer', projectdata)\n            .then(responce => {\n                // this.state.fields = fields\n                this.setState({\n                    fields: fields\n                })\n                console.log(responce.data)\n            });\n        Swal.fire({\n            icon: 'success',\n            title: 'Submitted',\n            showConfirmButton: false,\n            timer: 1500\n        })\n        this.props.goBack()\n\n\n    }\n\n\n\n\n    validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if (!fields[\"name\"]) {\n            formIsValid = false;\n            errors[\"name\"] = \"*Please enter your username.\";\n        }\n\n        if (typeof fields[\"name\"] !== \"undefined\") {\n            if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"*Please enter alphabet characters only.\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"*Please enter your email-ID.\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(fields[\"emailid\"])) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Please enter valid email-ID.\";\n            }\n        }\n\n        if (!fields[\"phone\"]) {\n            formIsValid = false;\n            errors[\"phone\"] = \"*Please enter your mobile no.\";\n        }\n\n        if (typeof fields[\"phone\"] !== \"undefined\") {\n            if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"phone\"] = \"*Please enter valid mobile no.\";\n            }\n        }\n\n        if (!fields[\"password\"]) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"password\"] !== \"undefined\") {\n            if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return formIsValid;\n\n\n    }\n\n\n\n    render() {\n        return (\n\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n                            <div className=\"panel-heading panel-style\">\n\n                                <span>\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{ float: \"left\" }}>Add User</span></h3>\n                                </span>\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.submituserRegistrationForm} >\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\" name=\"name\" value={this.state.fields.username} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Phone</label>\n                                                    <input type=\"number\" name=\"phone\" value={this.state.fields.username} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>City</label>\n                                                    <input type=\"text\" name=\"city\" value={this.state.fields.city} onChange={this.handleChange} />\n                                                </div>\n                                                {/* <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Designation</label>\n                                                    <input type=\"text\" name=\"designation\" value={this.state.fields.designation} onChange={this.handleChange} />\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                        {/* <h3><span >Login Details</span></h3> */}\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Email</label>\n                                                    <input type=\"text\" name=\"email\" value={this.state.fields.Email} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Password</label>\n                                                    <input type=\"password\" name=\"password\" value={this.state.fields.password} onChange={this.handleChange} />\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        {/* <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ padding: '15px 20px 0px 20px', textAlign: \"center\" }}>\n                                                    <span>Select Image:</span>\n                                                    <span style={{ marginBottom: 10 }}>\n                                                        <input type=\"file\" onChange={this.onChangeFile} />\n                                                    </span>\n                                                    <div className=\"up-img\">\n                                                        {imageUrl &&\n                                                            <img\n                                                                src={imageUrl}\n                                                                className=\"card-img-top\"\n                                                                alt=\"\"\n                                                            />\n                                                        }\n                                                    </div>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div> */}\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Submit\n                                                    </button>\n                                                    &nbsp;\n                                                    &nbsp;\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Adduser;\n","import axios from 'axios';\nimport React from 'react';\nimport './adduser.scss';\nimport Swal from 'sweetalert2';\nimport { httpUrl } from '../../../restservice'\n\nclass Edituser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: {},\n            // setemployeescreen:0\n            data:[]\n        }\n       \n        this.handleChange = this.handleChange.bind(this);\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\n\n    };\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n\n    }\n\n    submituserRegistrationForm(e) {\n        e.preventDefault();\n\n        let fields = {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            city: \"\",\n            password: \"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n\n\n        let projectdata = {\n            id: this.props.userId,\n            name: this.state.fields.name,\n            phone: this.state.fields.phone,\n            email: this.state.fields.email,\n            city: this.state.fields.city,\n            login: {\n                email: this.state.fields.email,\n                password: btoa(this.state.fields.password),\n                type: \"CUSTOMER\",\n                signuptype: \"EMAIL\",\n            }\n\n        }\n         projectdata.login.email = projectdata.email\n        axios.post(httpUrl +  'customer/update',projectdata)\n        .then(responce => {\n            // this.state.fields = fields\n            this.setState({\n                fields: fields\n            })\n            console.log(responce.data)\n        });\n        Swal.fire({\n            icon: 'success',\n            title: 'Submitted',\n            showConfirmButton: false,\n            timer: 1500\n          })\n        this.props.goBack()\n\n\n    }\n\n    componentDidMount() {\n        this.initfun();\n    }\n\n    initfun = () => {\n        let userid = this.props.userId\n        // alert(userid)\n        // let data\n        axios.get(httpUrl +  'employee/'+userid)\n            .then(responce => {\n                this.setState({\n                    data: [{ ...responce }],\n                    scrolling: false,\n                });\n            });\n    }\n\n\n    validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        if (!fields[\"name\"]) {\n            formIsValid = false;\n            errors[\"name\"] = \"*Please enter your username.\";\n        }\n\n        if (typeof fields[\"name\"] !== \"undefined\") {\n            if (!fields[\"name\"].match(/^[a-zA-Z ]*$/)) {\n                formIsValid = false;\n                errors[\"name\"] = \"*Please enter alphabet characters only.\";\n            }\n        }\n\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"*Please enter your email-ID.\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            //regular expression for email validation\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(fields[\"emailid\"])) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Please enter valid email-ID.\";\n            }\n        }\n\n        if (!fields[\"phone\"]) {\n            formIsValid = false;\n            errors[\"phone\"] = \"*Please enter your mobile no.\";\n        }\n\n        if (typeof fields[\"phone\"] !== \"undefined\") {\n            if (!fields[\"phone\"].match(/^[0-9]{10}$/)) {\n                formIsValid = false;\n                errors[\"phone\"] = \"*Please enter valid mobile no.\";\n            }\n        }\n\n        if (!fields[\"password\"]) {\n            formIsValid = false;\n            errors[\"password\"] = \"*Please enter your password.\";\n        }\n\n        if (typeof fields[\"password\"] !== \"undefined\") {\n            if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n                formIsValid = false;\n                errors[\"password\"] = \"*Please enter secure and strong password.\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return formIsValid;\n\n\n    }\n\n\n\n    render() {\n        return (\n            \n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n                            <div className=\"panel-heading panel-style\">\n                            \n                                <span>\n                                    <h3 style={{ color: \"#ffc701\" }}>\n                                        <span style={{float:\"left\"}}>Edit User</span></h3>\n                                </span>    \n                            </div>\n\n                            \n                                <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.submituserRegistrationForm} >\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\" name=\"name\" value={this.state.data.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Phone</label>\n                                                    <input type=\"number\" name=\"phone\" value={this.state.data.phone} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>City</label>\n                                                    <input type=\"text\" name=\"city\" value={this.state.data.city} onChange={this.handleChange} />\n                                                </div>\n                                                {/* <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Designation</label>\n                                                    <input type=\"text\" name=\"designation\" value={this.state.fields.designation} onChange={this.handleChange} />\n                                                </div> */}\n                                            </div>\n                                        </div>\n                                        {/* <h3>Login Details</h3> */}\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Email</label>\n                                                    <input type=\"text\" name=\"email\" value={this.state.data.email} onChange={this.handleChange} />\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Password</label>\n                                                    <input type=\"password\" name=\"password\" value={this.state.data.password} onChange={this.handleChange} />\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Update\n                                                    </button>\n                                                    &nbsp;\n                                                    &nbsp;\n                                                    <button type=\"cancel\" onClick={() => {this.props.goBack()}} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n                            \n                         \n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Edituser;\n","import React, { useState } from 'react'\nimport DetailsUser from './detailsUser'\nimport ManageUser from './manageUser'\nimport Swal from \"sweetalert2\";\nimport Projectmanage from './projectmanage';\nimport Adduser from './Adduser';\nimport Edituser from './Edituser';\n\nlet userId = 0;\nlet username\nexport default function ShowArmUsers() {\n\n    const [pageSelection, setPageSelection] = useState(1)\n\n    const showDetailsPage = receiveId => {\n        if (receiveId > 0) {\n            userId = receiveId;\n            setPageSelection(2)\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: \"Something Happen\",\n                text: \"Please try again after some time.\",\n                showConfirmButton: false,\n                timer: 5500\n            });\n        }\n    }\n\n    const showManagePage = () => {\n        setPageSelection(1)\n    }\n\n    const showpage = (receiveId,name) => {\n        if (receiveId > 0) {\n            username = name\n            userId = receiveId;\n            setPageSelection(4)\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: \"Something Happen\",\n                text: \"Please try again after some time.\",\n                showConfirmButton: false,\n                timer: 5500\n            });\n        }\n    }\n\n    const showuseredit = receiveId => {\n        if (receiveId > 0) {\n            userId = receiveId;\n            setPageSelection(5)\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: \"Something Happen\",\n                text: \"Please try again after some time.\",\n                showConfirmButton: false,\n                timer: 5500\n            });\n        }\n    }\n\n    const showaddpage = () => {\n        setPageSelection(3)\n    }\n\n    return (\n        <>\n\n            {\n                pageSelection === 1 ?\n                    <ManageUser showDetailsPage={showDetailsPage} showpage={showpage} showuseredit={showuseredit} showaddpage={showaddpage} />\n                    :\n                    pageSelection === 2 ?\n                        <DetailsUser userId={userId} goBack={showManagePage} />\n                        :\n                        pageSelection === 3 ?\n                            <Adduser goBack={showManagePage} />\n                            :\n                            pageSelection === 4 ?\n                                <Projectmanage username={username} userId={userId} goBack={showManagePage} />\n                                :\n                                <Edituser userId={userId} goBack={showManagePage} />\n            }\n\n        </>\n    )\n}\n","import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport './project.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet cname;\nlet lengthdefine\nlet random1\nclass Editpage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: [],\n      url: '',\n      data: [],\n      linkdata: [],\n      photo: {},\n      custdata: [],\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(() => {\n      // window.location.reload();\n      this.loadData();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      // window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    let receivedid = this.props.projectId\n    const endpoint = httpUrl + 'project/' + receivedid;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          projects: [json],\n          linkdata: [...json.links],\n        });\n      });\n\n  };\n\n  customerid() {\n    axios.get(httpUrl + 'customer/' + this.props.username)\n      .then(responce => {\n        this.state.custdata = responce.data\n        cname = responce.data.name\n        console.log(responce.data)\n      });\n  }\n\n  componentDidMount() {\n    this.loadData();\n    this.customerid();\n    // this.updateTable();\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects[0].id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n        this.loadData();\n      });\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this data!',\n      type: 'Warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        const endpoint = httpUrl + 'project/' + id;\n        fetch(endpoint, { method: 'DELETE' })\n          .then(response => response.json())\n          .then(json => {\n            this.opensweetalert(json.Status);\n          });\n        this.loadData();\n        setTimeout(() => {\n          this.loadData();\n        }, 1000);\n        this.setState({ setScreenOpen: 0 });\n      }\n    });\n  }\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects[0].id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 1000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n        <th style={{ width: '200px' }}>action</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='300px' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n          <td className=\"text-align-center\" style={{ width: '200px' }}>\n            <button className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteLink(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    let string = str.replace(/_/g, ' ');\n    return this.toTitles(string);;\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n  // updateTable = () => {\n  //   axios.get(httpUrl +  'project?customer=' + this.props.username)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects[0].customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, random1 + '_' + this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects[0].customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects[0].id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 1000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  renderTableDataProject() {\n    return this.state.projects.map((project, index) => {\n      const { id, name, projecttype, details, faqs, file, managername, projectprice, paymentstatus, genre } = project\n      return (\n        <tr>\n          <td>\n            <ul><span>Name:</span>{name}</ul>\n            <ul><span>Customer Name:</span>{cname}</ul>\n            <ul><span>Genre:</span>{this.getToTitles(genre)}</ul>\n            <ul><span>Project Type:</span>{this.getToTitles(projecttype)}</ul>\n            <ul><span>Needs Help With:</span>{this.getToTitles(faqs)}</ul>\n            <ul><span>Price Type:</span>{this.getToTitles(projectprice)}</ul>\n            <ul><span>Payment Status:</span>{this.getToTitles(paymentstatus)}</ul>\n            <ul><span>Manager:</span>{managername}</ul>\n            <ul><span>Details:</span><li>{this.getToTitles(details)}</li></ul>\n          </td>\n          <td className=\"text-align-center\">\n            <audio controls\n              preload=\"auto\"\n              src={this.state.docServer + file?.docpath}>\n            </audio>\n          </td>\n          <td className=\"text-align-center\">\n            <button className=\"my-svg-edit\"\n              onClick={e => {\n                this.updateProject();\n              }}\n            >\n            </button>&nbsp;\n            <button className=\"my-svg-delete\"\n              onClick={e => {\n                this.deleteProject(id);\n              }}\n            >\n            </button>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            {this.state.projects.map(data => (\n              <div className=\"col-md-4 animated fadeIn\" key={data.id.value}>\n                <div className=\"card\">\n\n                  <div className=\"btn-align-down\">\n                    <button className=\"btn-small\"\n                      onClick={() => { this.props.Back() }} style={{ color: \"white\" }}\n                    >Back\n                    </button>\n                  </div>\n\n                  <h3 className=\"paddi\">Project Details</h3>\n\n                  <table id='projects'>\n                    <tbody>\n                      {this.renderTableHeader()}\n                      {this.renderTableDataProject()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            ))}\n          </div>\n          : null}\n\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            {this.state.projects.map(data => (\n              <div className=\"col-md-4 animated fadeIn\">\n                <div className=\"card\">\n                  <div className=\"btn-align-down\">\n                    {/* <button className=\"my-svg-add\"\n                      onClick={e => {\n                        this.addYoutubeUrl();\n                      }}\n                    >\n                    </button> */}\n                  </div>\n                  <div>\n                    <h3 className=\"paddi\">Reference Links</h3>\n                    <table id='projects'>\n                      <tbody>\n                        {this.renderTableHeader()}\n                        {this.renderTableDataYoutube()}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          :\n          this.state.setScreenOpen === 1 ?\n            <div className=\"row\">\n              {this.state.projects.map(data => (\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <div className=\"paddi\"><h3>Project Edit</h3></div>\n                    <hr />\n                    <form onSubmit={this.handleUpdateSubmit}>\n                      <ul>\n                        <label className=\"label\" >Details: </label><br />\n                        <textarea ref={(ref) => { this.Details = ref }} type=\"text\" name=\"details\" /></ul>\n\n                      <div style={{ padding: '10px 20px 0px 20px' }}>\n                        <span style={{ float: 'left' }}>Select Audio File:</span>\n                        <span style={{ marginBottom: 10 }}>\n                          <input type=\"file\" onChange={this.onChangeFile} />\n                        </span>\n                        <div className=\"up-img\">\n                          {imageUrl &&\n                            <audio controls\n                              autoplay preload=\"auto\"\n                              src={imageUrl}>\n                            </audio>\n                          }\n                        </div>\n                      </div>\n\n                      <div className=\"btn-margin\">\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}>\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              ))}\n            </div>\n            :\n            this.state.setScreenOpen === 2 ?\n              <div className=\"col-xs-2\">\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <form onSubmit={this.handleSubmit}>\n                      <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                      <hr />\n                      <ul>\n                        <label className=\"label\" >Reference Link: </label>\n                        <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                      <div className=\"btn-margin\">\n                        <button type=\"Submit\" className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                        >\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              : null\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default Editpage;\n","import React, { useEffect, useState } from \"react\";\nimport \"./project.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { httpUrl } from '../../../restservice'\n\nexport default function ManageProjects(props) {\n\n    const [data, setData] = useState([]);\n    const [searchterm, setsearchterm] = useState('');\n    const { showDetails } = props\n\n\n\n\n    const updateTable = () => {\n        if (localStorage.getItem(\"userData\") !== null) {\n\n            let userID = JSON.parse(localStorage.getItem(\"userData\")).id\n            axios.get(httpUrl +  'project?manager='+userID)\n                .then(responce => {\n                    let armProject = responce.data.filter(entry => entry.manager === userID)\n                    setData([...armProject])\n                    setData([...responce.data])\n                    \n                    // alert('ssss',checked)\n\n\n                });\n        }\n    }\n\n\n    useEffect(() => {\n        updateTable()\n    }, [])\n\n\n\n    function statuschange(id, status) {\n\n        let updateproject = {\n            id: id,\n            status: \"ACTIVE\"\n        }\n\n        if (status === \"ACTIVE\") {\n            updateproject.status = \"IN_ACTIVE\"\n            // setPageSelection(2)\n            //  Swal.fire({\n            //     icon: 'success',\n            //     title: \"Project Is In Active\",\n            //     type: 'success',\n            //   })\n\n        }\n\n        console.log(\"updateproject\")\n        console.log(updateproject)\n\n\n\n        axios.post(httpUrl +  'project/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                updateTable()\n            });\n\n\n    }\n\n    function changePayment(id) {\n\n        let updateproject = {\n            id: id,\n            paymentstatus: \"COMPLETED\"\n        }\n\n        axios.post(httpUrl +  'project/update', updateproject)\n            .then(responce => {\n                // setData([...responce.data])\n                console.log(responce.data)\n                updateTable()\n            });\n\n\n    }\n\n    function getToTitles(str) {\n        let string = str.replace(/_/g, ' ');\n        return toTitles(string);\n    }\n\n    function toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n    function deleteemployee(id) {\n\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this data!',\n            type: 'Warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            cancelButtonText: 'No, keep it'\n        }).then((result) => {\n            if (result.value) {\n\n                axios.delete(httpUrl +  'project/' + id)\n                    .then(responce => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your data has been deleted.',\n                            'success'\n                        );\n                        console.log(responce)\n                    });\n\n\n            }\n        });\n    }\n\n    function selectCustomer(id, projectId) {\n        localStorage.setItem(\"selectedProjectID\", id)\n        showDetails(id, projectId);\n    }\n\n    function toTitleCase(str) {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body \">\n                <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                    <div className=\"panel panel-default cart-border\">\n                        <div className=\"panel-heading panel-style\">\n                            <h3 style={{ color: \"#ffc701\", textAlign: \"left\" }} className=\"headerproper\">\n                                <span>Manage Projects</span></h3>\n                        </div>\n\n                        <div className=\"panel-body\">\n                            <div className=\"table-responsive table-style\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Name</th>\n                                            <th>Customer</th>\n                                            <th scope=\"col\">Project Type</th>\n                                            <th scope=\"col\">Genre</th>\n                                            <th scope=\"col\">Faqs</th>\n                                            <th scope=\"col\">Payment <br />Status</th>\n                                            <th scope=\"col\">Project <br />Status</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n\n                                        <tr>\n                                            <th colSpan=\"12\">\n                                                <div className='Search'>\n\n                                                    <input type=\"text\" className=\"inputetype\"\n\n                                                        onChange={(e) => {\n                                                            setsearchterm(e.target.value);\n                                                        }}\n                                                        placeholder=\"Search By Name,Project Type,Genre,Faqs,Customer\" name=\"search\" />\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        <i class=\"fa fa-search\"></i>\n\n                                                    </button>\n\n                                                </div>\n                                            </th>\n                                        </tr>\n\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.filter((val) => {\n                                                if (searchterm === '') {\n                                                    return true;\n\n                                                }\n                                                else if (\n                                                    val.name.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.projecttype.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.genre.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.custname.toLowerCase().includes(searchterm.toLowerCase()) ||\n                                                    val.faqs.toLowerCase().includes(searchterm.toLowerCase())\n\n\n                                                ) {\n                                                    return true;\n\n                                                }\n\n                                                else return false\n\n                                            }).map(((entry) => (\n                                                <tr key={entry.id}>\n\n                                                    <td >{entry.name}</td>\n                                                    <td >{entry.custname}</td>\n                                                    <td>{getToTitles(entry.projecttype)}</td>\n                                                    <td>{toTitleCase(entry.genre)}</td>\n                                                    <td>{toTitleCase(entry.faqs)}</td>\n                                                    <td>{getToTitles(entry.paymentstatus)}</td>\n                                                    <td>{getToTitles(entry.status)}</td>\n                                                    <td>\n\n\n\n\n                                                        {entry.status === \"IN_ACTIVE\" ?\n                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Project Inactive\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-thumbs-down\"></i>\n                                                                </button>\n                                                            </span>\n                                                            :\n                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Project Active\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i class=\"fa fa-thumbs-up\"></i>\n                                                                </button>\n                                                            </span>\n                                                        }\n                                                        &nbsp;\n                                                        &nbsp;\n                                                        <span onClick={() => { selectCustomer(entry.customer, entry.id) }} title=\"Project Detail\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-info-circle\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        &nbsp;\n                                                        {entry.paymentstatus === \"NOT_COMPLETED\" ? (\n                                                            <span onClick={() => { changePayment(entry.id) }} title=\"Payment Not Completed\" style={{ color: \"white\" }}>\n                                                                <button>\n                                                                    <i className=\"fa fa-money-bill-alt\"></i>\n                                                                </button>\n                                                            </span>\n                                                        ) : null}\n                                                        &nbsp;\n                                                        &nbsp;\n                                                        {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i class=\"fa fa-trash\"></i>\n                                                            </button>\n                                                        </span> */}\n\n                                                        {/* <span onClick={() => {showId(entry.id)}} style={{color:\"white\"}}>\n                                                   <button>\n                                                   <i className =\"fa fa-edit\"></i>\n                                                    </button>\n                                                        </span> */}\n                                                        \n\n                                                    </td>\n\n                                                </tr>\n                                            )))\n                                        }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            </div >\n        </div>\n\n    )\n}\n","import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport ReactPlayer from \"react-player\"\nimport axios from 'axios';\nimport '../../dashboard/produce/project/project.scss'\nimport { httpUrl, docServerUrl } from '../../../restservice'\n\nlet lengthdefine\nlet random1\nclass DetailsFormProject extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n    this.state = {\n      projects: [],\n      url: '',\n      data: [],\n      custdata: [],\n      linkdata: [],\n      photo: {},\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      cname: '',\n      docServer: docServerUrl\n    };\n  }\n\n\n  isShowPopup = (status) => {\n    this.setState({ showModalPopup: status });\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      icon: 'success',\n      title: data,\n      type: 'success',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  opensweetalertdanger(data) {\n    Swal.fire({\n      icon: 'warning',\n      title: \"OOPS! File upload failed\",\n      text: data,\n      type: 'warning',\n    }).then(function () {\n      window.location.reload();\n      // this.setState({ setScreenOpen: 1 });\n    })\n  }\n\n  loadData() {\n    const headers = { 'Content-Type': 'application/json' }\n    const endpoint = httpUrl + 'project/' + this.props.selectProject;\n    fetch(endpoint, { headers })\n      .then(response => response.json())\n      .then(json => {\n        if (json.links) {\n          this.setState({\n            projects: json,\n            linkdata: [...json.links],\n          });\n        } else {\n          this.setState({\n            projects: json\n          });\n        }\n\n      });\n\n  };\n\n  customerid() {\n    axios.get(httpUrl + 'customer/' + this.props.username)\n      .then(responce => {\n        this.state.custdata = responce.data\n        this.state.cname = responce.data.name\n        console.log(this.state.cname)\n        console.log(responce.data)\n      });\n  }\n  componentDidMount() {\n    this.loadData();\n    this.customerid();\n    // this.updateTable()\n  }\n\n  updateProject() {\n    this.setState({ setScreenOpen: 1 });\n  }\n\n  updateCancel() {\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  addYoutubeUrl() {\n    this.setState({ setScreenOpen: 2 });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: this.state.projects.id, links: [{ link: this.firstName.value }] })\n    };\n\n    const endpoint = httpUrl + 'project/link/add';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  deleteProject(id) {\n    const endpoint = httpUrl + 'project/' + id;\n    fetch(endpoint, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  deleteLink(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ container: this.state.projects.id, ids: [id] })\n    };\n\n    const endpoint = httpUrl + 'project/link/delete';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n  }\n\n  renderTableHeader() {\n    return (\n      <tr>\n        <th style={{ width: '550px' }}>Details</th>\n        <th style={{ width: '330px' }}>video/Audio</th>\n      </tr>\n    )\n  }\n\n  renderTableDataYoutube() {\n    return this.state.linkdata.map((project, index) => {\n      const { id, link } = project\n      return (\n        <tr>\n          <td>{link}</td>\n          <td className=\"text-align-center\">\n            <ReactPlayer controls={true} width='300px' height='100px'\n              url={link}>\n            </ReactPlayer>\n          </td>\n\n        </tr>\n      )\n    })\n  }\n\n  getToTitles(str) {\n    if (str !== undefined) {\n      let string = str.replace(/_/g, ' ');\n      return this.toTitles(string);;\n    }\n    else {\n      return \"\"\n    }\n\n  }\n\n  toTitles(s) { return s.replace(/\\w\\S*/g, function (t) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); }); }\n\n  // updateTable = () => {\n  //   axios.get(httpUrl +  'project?customer=' + this.props.username)\n  //       .then(responce => {\n  //         lengthdefine = responce.data.length\n  //         console.log(responce.data)\n  //         console.log(lengthdefine)\n  //       });\n  // }\n\n  onChangeFile = event => {\n    var digits = '0123456789';\n    random1 = '';\n    for (let i = 0; i < 2; i++) {\n      random1 += digits[Math.floor(Math.random() * 2)];\n    }\n    console.log(random1)\n    this.setState({ selectedFile: event.target.files[0] })\n    if (event.target.files[0] !== '') {\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      }\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: random1 + '_' + event.target.files[0].name,\n          doctype: 'Audio',\n          docpath: \"Project/\" + this.state.projects.customer + '/' + random1 + '_' + event.target.files[0].name\n        }\n      })\n    }\n  }\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + 'common/doc/upload';\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select audio to upload.\"\n        }\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append('doc', selectedFile, random1 + '_' + this.state.selectedFile.name);\n    formData.append('name', \"Project/\" + this.state.projects.customer);\n    formData.append('width', '')\n    formData.append('height', '')\n    axios.post(BASE_URL, formData).then(response => {\n      this.setState({\n        handleResponse: {\n          isSuccess: response.status === 200,\n          message: response.data.message\n        },\n        // imageUrl: BASE_URL + response.data.file.path\n      });\n    }).catch(err => {\n      this.opensweetalertdanger(err.message);\n    });\n  }\n\n  handleUpdateSubmit(event) {\n    event.preventDefault();\n    this.handleUpload();\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.projects.id, details: this.Details.value,\n        file: this.state.photo\n      })\n    };\n\n    const endpoint = httpUrl + 'project/update';\n    fetch(endpoint, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n        this.opensweetalert(json.Status);\n      });\n    this.loadData();\n    setTimeout(() => {\n      this.loadData();\n    }, 5000);\n    this.setState({ setScreenOpen: 0 });\n  }\n\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            <div className=\"col-md-4 animated fadeIn\" key={this.state.projects.id}>\n              <div className=\"card\">\n                <h3 style={{ display: \"flex\", justifyContent: \"space-between\", padding: 20 }}>\n                  <span>Project Details</span>\n                  <span onClick={() => { this.props.Back() }} style={{ color: \"white\" }}>\n                    <button>\n                      Back\n                    </button>\n                  </span>\n\n                </h3>\n                <table id='projects'>\n                  <tbody>\n                    {this.renderTableHeader()}\n                    <tr>\n                      <td>\n                        <ul><span>Name:</span>{this.state.projects.name}</ul>\n                        <ul><span>Customer Name:</span>{this.state.cname}</ul>\n                        <ul><span>Genre:</span>{this.getToTitles(this.state.projects.genre)}</ul>\n                        <ul><span>Project Type:</span>{this.getToTitles(this.state.projects.projecttype)}</ul>\n                        <ul><span>Needs Help With:</span>{this.getToTitles(this.state.projects.faqs)}</ul>\n                        <ul><span>Price Type:</span>{this.getToTitles(this.state.projects.projectprice)}</ul>\n                        <ul><span>Payment Status:</span>{this.getToTitles(this.state.projects.paymentstatus)}</ul>\n                        {/* <ul><span>Manager:</span>{managername}</ul> */}\n                        <ul><span>Details:</span><li>{this.getToTitles(this.state.projects.details)}</li></ul>\n                      </td>\n                      <td className=\"text-align-center\">\n                        <audio controls\n                          preload=\"auto\"\n                          src={this.state.docServer + this.state.projects.file?.docpath}>\n                        </audio>\n                      </td>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          : null}\n\n        {this.state.setScreenOpen === 0 ?\n          <div className=\"row\">\n            <div className=\"col-md-4 animated fadeIn\">\n              <div className=\"card\">\n                <div>\n                  <h3 className=\"paddi\">Reference Links</h3>\n                  <table id='projects'>\n                    <tbody>\n                      {this.renderTableHeader()}\n                      {this.renderTableDataYoutube()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          this.state.setScreenOpen === 1 ?\n            <div className=\"row\">\n              <div className=\"card-body\">\n                <div className=\"card\">\n                  <div className=\"paddi\"><h3>Project Update</h3></div>\n                  <hr />\n                  <form onSubmit={this.handleUpdateSubmit}>\n                    <ul>\n                      <label className=\"label\" >Details: </label><br />\n                      <textarea ref={(ref) => { this.Details = ref }} type=\"text\" className=\"sampleTextarea\" name=\"details\" /></ul>\n\n                    <div style={{ padding: '10px 20px 0px 20px' }}>\n                      <span>Select Audio File:</span>\n                      <span style={{ marginBottom: 10 }}>\n                        <input type=\"file\" onChange={this.onChangeFile} />\n                      </span>\n                      <div className=\"up-img\">\n                        {imageUrl &&\n                          <audio controls\n                            autoplay preload=\"auto\"\n                            src={imageUrl}>\n                          </audio>\n                        }\n                      </div>\n                    </div>\n\n                    <div className=\"btn-margin\">\n                      <button className=\"btn-primary btn-small\">\n                        Submit\n                      </button>\n                      <button className=\"btn-primary btn-small\"\n                        onClick={e => {\n                          this.updateCancel();\n                        }}\n                      >Cancel\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            :\n            this.state.setScreenOpen === 2 ?\n              <div className=\"col-xs-2\">\n                <div className=\"card-body\">\n                  <div className=\"card\">\n                    <form onSubmit={this.handleSubmit}>\n                      <div className=\"paddi\"><h3>Add Reference Link</h3></div>\n                      <hr />\n                      <ul>\n                        <label className=\"label\" >Reference Link: </label>\n                        <input type=\"text\" ref={(ref) => { this.firstName = ref }} placeholder=\"Enter Youtube Url\" name=\"url\" className=\"inputs\" /></ul>\n\n                      <div className=\"btn-margin\">\n                        <button type=\"Submit\" className=\"btn-primary btn-small\"\n                        >\n                          Submit\n                        </button>\n                        <button className=\"btn-primary btn-small\"\n                          onClick={e => {\n                            this.updateCancel();\n                          }}\n                        >Cancel\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              : null\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default DetailsFormProject;\n","import React, { useState } from 'react'\nimport Editpage from './Editpage'\nimport Swal from \"sweetalert2\";\nimport ManageProjects from './project';\nimport DetailsFormProject from './detailsProject';\n\n\nlet projectId = 0;\nlet username\nlet Selected_project = 0\n\nexport default function Setprojectpage() {\n\n    const [projectSelection, setprojectelection] = useState(1)\n\n    const showeditpage = (receiveId,name) => {\n        if (receiveId > 0) {\n            projectId = receiveId;\n            username = name\n            setprojectelection(2)\n            console.log(username)\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: \"Something Happen\",\n                text: \"Please try again after some time.\",\n                showConfirmButton: false,\n                timer: 5500\n            });\n        }\n    }\n\n    const showproject = () => {\n        setprojectelection(1)\n    }\n\n    const showDetailsProject = (name, p_id) => {\n        username = name;\n        Selected_project = p_id;\n        setprojectelection(3)\n        console.log(username)\n    }\n\n\n\n    return (\n        <>\n            {projectSelection === 1 ?\n                (<ManageProjects showeditpage={showeditpage} showDetails={showDetailsProject}/>)\n                : projectSelection === 2 ?\n                    (<Editpage projectId={projectId} username={username}  Back={showproject} />)\n                    : (<DetailsFormProject Back={showproject} username={username} selectProject={Selected_project} showDetails={showDetailsProject}/>)\n            }\n        </>\n    )\n}\n","import React, { Component } from \"react\";\nimport \"./profile.scss\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { httpUrl, docServerUrl } from \"../../restservice\";\n\nclass FormProjectRM extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      localData: {},\n      data: [],\n      photo: {},\n      fields: {},\n      setScreenOpen: 0,\n      selectedFile: null,\n      handleResponse: null,\n      imageUrl: null,\n      fieldss: {},\n      setotppage: 0,\n      otpdata: {},\n      otp: 1234,\n      fieldsss: {},\n    };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitpassword = this.submitpassword.bind(this);\n  }\n\n  docServer = docServerUrl;\n  uppercase = (word) => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  };\n\n  opensweetalert(data) {\n    Swal.fire({\n      title: data,\n      type: \"success\",\n    }).then(function () {\n      window.location.reload();\n    });\n  }\n\n  loadData = () => {\n    const page = JSON.parse(localStorage.getItem(\"userData\")).id;\n    const endpoint = httpUrl + \"employee/\" + page;\n    fetch(endpoint)\n      .then((response) => response.json())\n      .then((json) => {\n        this.setState({\n          data: [{ ...json }],\n          scrolling: false,\n        });\n      })\n      .catch((e) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Account Inactive\",\n          text: \"Your account has now been deactivated.\",\n          showConfirmButton: false,\n          timer: 5500,\n        });\n        setTimeout(() => {\n          this.logoutUser();\n          window.location.href = \"/\";\n        }, 2000);\n      });\n  };\n\n  updateProfile = () => {\n    this.setState({ setScreenOpen: 1 });\n  };\n\n  updatepass = () => {\n    this.setState({ setScreenOpen: 2 });\n  };\n  handleChange(e) {\n    let fields = this.state.fields;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields,\n    });\n  }\n  handleChange2(e) {\n    let fieldsss = this.state.fieldsss;\n    fieldsss[e.target.name] = e.target.value;\n    this.setState({\n      fieldsss,\n    });\n  }\n  otpfunction = () => {\n    var digits = \"0123456789\";\n    let OTP = \"\";\n    for (let i = 0; i < 4; i++) {\n      OTP += digits[Math.floor(Math.random() * 10)];\n    }\n    console.log(OTP);\n\n    let sendotp = {\n      toMobile: \"91\" + this.state.fieldss.phone,\n      message: \"Your OTP for verification is: \" + OTP + \". Choira\",\n    };\n\n    axios\n      .post(httpUrl + \"sms/send\", sendotp)\n      .then((responce) => {\n        this.setState({\n          otpdata: responce.data,\n          scrolling: false,\n          otp: OTP,\n        });\n        this.setState({ setotppage: 3 });\n        console.log(responce.data);\n      })\n      .catch((error) => {\n        console.log(error, \"something went wrong\");\n        this.setState({ setotppage: 1 });\n      });\n  };\n  updateemployee = () => {\n    console.log(this.state.otp);\n    let idd = JSON.parse(localStorage.getItem(\"userData\")).id;\n    let updateemp = {\n      id: idd,\n      phone: this.state.fieldss.phone,\n    };\n    if (this.state.fieldsss.otpnum !== this.state.otp) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Your OTP Is Incorrect\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    } else {\n      axios.post(httpUrl + \"employee/update\", updateemp).then((responce) => {\n        console.log(responce.data);\n      });\n      Swal.fire({\n        icon: \"success\",\n        title: \"Phone Number Updated\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n      this.setState({ setScreenOpen: 0 });\n    }\n  };\n  backpage() {\n    this.setState({ setScreenOpen: 0 });\n  }\n  handleChange1(e) {\n    let fieldss = this.state.fieldss;\n    fieldss[e.target.name] = e.target.value;\n    this.setState({\n      fieldss,\n    });\n    if (this.state.fieldss.phone) {\n      this.setState({ setotppage: 1 });\n    }\n    console.log(this.state);\n  }\n  submitpassword(e) {\n    e.preventDefault();\n\n    let fields = {\n      oldpassword: \"\",\n      newpassword: \"\",\n      confirmpassword: \"\",\n    };\n    console.log(this.state.fields);\n    // console.log(fields)\n    let id = JSON.parse(localStorage.getItem(\"userData\")).id;\n    let loginid = JSON.parse(localStorage.getItem(\"userData\")).login.id;\n    let passjson = {\n      id: id,\n      login: {\n        id: loginid,\n        password: btoa(this.state.fields.newpassword),\n      },\n    };\n\n    let setpass = JSON.parse(localStorage.getItem(\"userData\")).login.password;\n    setpass = atob(setpass);\n    if (setpass !== this.state.fields.oldpassword) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Does Not Match old Password\",\n      });\n    } else if (setpass === this.state.fields.newpassword) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"You Are Using Old Password Add New Password\",\n      });\n    } else if (\n      this.state.fields.newpassword !== this.state.fields.confirmpassword\n    ) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"New Passowrd And Confirm Password Does Not Match\",\n      });\n    } else {\n      axios\n        .post(httpUrl + \"employee/update\", passjson)\n        .then((responce) => {\n          // this.state.fields = fields\n          this.setState({\n            fields: fields,\n          });\n\n          console.log(responce.data);\n          Swal.fire({\n            icon: \"success\",\n            title: \"Your Password Has Been Changed Successfully\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          this.setState({ setScreenOpen: 0 });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  logoutUser() {\n    localStorage.clear();\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.data[0]);\n    return header.map((key, index) => {\n      return (\n        <label key={index} className=\"labelStyle\">\n          {key.toUpperCase()}\n        </label>\n      );\n    });\n  }\n\n  onChangeFile = (event) => {\n    this.setState({ selectedFile: event.target.files[0] });\n\n    if (event.target.files[0] !== \"\") {\n      // this.file = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = (eve) => {\n        this.setState({ imageUrl: eve.target.result });\n      };\n      reader.readAsDataURL(event.target.files[0]);\n      this.setState({\n        photo: {\n          docname: event.target.files[0].name,\n          doctype: \"Profile\",\n          docpath:\n            \"Customer/\" +\n            this.state.data[0].id +\n            \"/\" +\n            event.target.files[0].name,\n          urllink: \"\",\n        },\n      });\n    }\n  };\n\n  handleUpload = () => {\n    const BASE_URL = httpUrl + \"common/doc/upload\";\n    const { selectedFile } = this.state;\n    if (!selectedFile) {\n      this.setState({\n        handleResponse: {\n          isSuccess: false,\n          message: \"Please select image to upload.\",\n        },\n      });\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append(\"doc\", selectedFile, this.state.selectedFile.name);\n    formData.append(\"name\", \"Customer/\" + this.state.data[0].id);\n    formData.append(\"width\", \"400\");\n    formData.append(\"height\", \"400\");\n    axios\n      .post(BASE_URL, formData)\n      .then((response) => {\n        this.setState({\n          handleResponse: {\n            isSuccess: response.status === 200,\n            message: response.data.message,\n          },\n          // imageUrl: BASE_URL + response.data.file.path\n        });\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.City.value === \"\" && this.state.selectedFile === null) {\n      return;\n    }\n    this.handleUpload();\n    localStorage.setItem(\"photo\", JSON.stringify(this.state.photo));\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: this.state.data[0].id,\n        phone: this.Phone.value,\n        city: this.City.value,\n        photo: this.state.photo,\n      }),\n    };\n\n    const endpoint = httpUrl + \"employee/update\";\n    fetch(endpoint, requestOptions)\n      .then((response) => response.json())\n      .then((json) => {\n        this.opensweetalert(json.Status);\n      });\n    this.setState({ setScreenOpen: 0 });\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    return (\n      <div className=\"clearfix\">\n        <div className=\"row animateBox\">\n          {this.state.data.map((data) => (\n            <div className=\"col-md-4 animated fadeIn\" key={data.id.value}>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"avatar\">\n                    {data.photo?.docpath !== null ? (\n                      <img\n                        src={this.docServer + data.photo?.docpath}\n                        className=\"card-img-top\"\n                        alt=\"\"\n                      />\n                    ) : (\n                      <img\n                        src={data.photo.urllink}\n                        className=\"card-img-top\"\n                        alt=\"\"\n                      />\n                    )}\n                  </div>\n                  <ul>\n                    <h5 className=\"card-title\">{data.name}</h5>\n                  </ul>\n                  <ul className=\"card-text\">\n                    <span>Location:</span>\n                    {data.city}\n                  </ul>\n                  <ul>\n                    <span className=\"phone\">Phone:</span>\n                    {data.phone}\n                  </ul>\n                  <ul>\n                    <span className=\"phone\">Email:</span>\n                    {data.email}\n                  </ul>\n                </div>\n                <div>\n                  {this.state.setScreenOpen === 0 ? (\n                    <div className=\"btn_margin\">\n                      <div className=\"row\">\n                        <div style={{ width: \"33.33%\", float: \"left\" }}>\n                          <Link to={\"/#/home\"}>\n                            <button\n                              onClick={(e) => {\n                                this.logoutUser();\n                              }}\n                            >\n                              {\" \"}\n                              Log Out{\" \"}\n                            </button>\n                          </Link>\n                        </div>\n                        <div\n                          style={{\n                            width: \"33.33%\",\n                            float: \"left\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          <button\n                            onClick={() => {\n                              this.updatepass();\n                            }}\n                          >\n                            Change Password\n                          </button>\n                        </div>\n                        <div\n                          style={{\n                            width: \"33.33%\",\n                            float: \"left\",\n                            textAlign: \"right\",\n                          }}\n                        >\n                          <button\n                            onClick={(e) => {\n                              this.updateProfile();\n                            }}\n                          >\n                            Edit\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n\n              {this.state.setScreenOpen === 2 ? (\n                <div className=\"col-xs-2\">\n                  <form onSubmit={this.submitpassword}>\n                    <div className=\"card-body\">\n                      <ul>\n                        <label className=\"label\">Old Password</label>\n                        <br />\n                        <input\n                          type=\"password\"\n                          required\n                          name=\"oldpassword\"\n                          className=\"input\"\n                          value={this.state.fields.oldpassword}\n                          onChange={this.handleChange}\n                        />\n                      </ul>\n                      <ul>\n                        <label className=\"label\">New Password</label>\n                        <br />\n                        <input\n                          type=\"password\"\n                          required\n                          name=\"newpassword\"\n                          className=\"input\"\n                          value={this.state.fields.newpassword}\n                          onChange={this.handleChange}\n                        />\n                      </ul>\n                      <ul>\n                        <label className=\"label\">Confirm Password</label>\n                        <br />\n                        <input\n                          type=\"password\"\n                          required\n                          name=\"confirmpassword\"\n                          className=\"input\"\n                          value={this.state.fields.confirmpassword}\n                          onChange={this.handleChange}\n                        />\n                      </ul>\n                    </div>\n\n                    <div className=\"btn_margin\" style={{ margin: \"0px 25px\" }}>\n                      {this.state.setScreenOpen === 2 ? (\n                        <button\n                          type=\"Submit\"\n                          className=\"btn btn-light btn-block w-50 mx-auto\"\n                        >\n                          Submit\n                        </button>\n                      ) : null}\n                    </div>\n                  </form>\n                </div>\n              ) : null}\n\n              {this.state.setScreenOpen === 1 ? (\n                <div className=\"col-xs-2\">\n                  <form onSubmit={this.handleSubmit}>\n                    <div className=\"card-body\">\n                      <ul>\n                        <label className=\"label\">Phone</label>\n                        <br />\n                        <input\n                          type=\"text\"\n                          className=\"input\"\n                          name=\"phone\"\n                          value={this.state.fieldss.phone}\n                          onChange={this.handleChange1}\n                          ref={(ref) => {\n                            this.Phone = ref;\n                          }}\n                          placeholder={data.phone}\n                        />\n                      </ul>\n                      {this.state.setotppage === 1 ? (\n                        <ul>\n                          <button\n                            type=\"submit\"\n                            className=\"otpchange\"\n                            onClick={() => {\n                              this.otpfunction();\n                            }}\n                          >\n                            Send OTP\n                          </button>\n                          <button\n                            className=\"otpchange1\"\n                            onClick={() => {\n                              this.backpage();\n                            }}\n                          >\n                            Cancel\n                          </button>\n                          <br />\n                        </ul>\n                      ) : null}\n                      {this.state.setotppage === 3 ? (\n                        <ul>\n                          <input\n                            type=\"number\"\n                            required\n                            className=\"input\"\n                            name=\"otpnum\"\n                            placeholder=\"Enter OTP\"\n                            value={this.state.fieldsss.otpnum}\n                            id=\"otpnum\"\n                            onChange={this.handleChange2}\n                          />\n                          <br />\n                          <button\n                            type=\"submit\"\n                            className=\"otpchange1\"\n                            onClick={() => {\n                              this.updateemployee();\n                            }}\n                          >\n                            Submit\n                          </button>\n                          <br />\n                        </ul>\n                      ) : null}\n                      {this.state.setotppage === 0 ? <ul></ul> : null}\n                      <ul>\n                        <label className=\"label\">City</label>\n                        <br />\n                        <input\n                          type=\"text\"\n                          className=\"input\"\n                          ref={(ref) => {\n                            this.City = ref;\n                          }}\n                          placeholder={data.city}\n                          name=\"city\"\n                        />\n                      </ul>\n                    </div>\n                    <div\n                      style={{\n                        padding: \"15px 20px 0px 20px\",\n                        textAlign: \"center\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <span style={{ fontSize: \"13px\" }}>Select Image:</span>\n                      <span style={{ marginBottom: 10 }}>\n                        <input\n                          style={{ fontSize: \"12px\", width: \"auto\" }}\n                          type=\"file\"\n                          onChange={this.onChangeFile}\n                        />\n                      </span>\n                      <div className=\"up-img\">\n                        {imageUrl && (\n                          <img\n                            src={imageUrl}\n                            className=\"card-img-bottom\"\n                            alt=\"\"\n                          />\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"btn_margin\" style={{ margin: \"0px 20px\" }}>\n                      {this.state.setScreenOpen === 1 ? (\n                        <button\n                          type=\"Submit\"\n                          className=\"btn btn-light btn-block w-50 mx-auto\"\n                        >\n                          Submit\n                        </button>\n                      ) : null}\n                    </div>\n                  </form>\n                </div>\n              ) : null}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormProjectRM;\n","import React from 'react'\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './messageManager.scss';\nimport { nodeUrl } from '../../restservice'\nexport default function MessageManager() {\n\n    // const [selectedUUID, setSelectedUUID] = useState(1)\n    // const [chatInput, setChatInput] = useState(\"\")\n    // let customerId = JSON.parse(localStorage.getItem('userData')).id\n\n\n    // const selectChat = () => {\n    //     setSelectedUUID(12)\n    // }\n\n    // const detectChange = (event) => {\n    //     if (event.key === 'Enter') {\n    //         console.log(\"object\")\n    //         console.log(chatInput)\n    //         setChatInput(\"\")\n    //     }\n    // }\n    let url = nodeUrl + 'operator'\n\n    return (\n        <div className='flexSet'>\n            <div className=\"content__heading\">\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    Messages\n                </h1>\n            </div>\n            <div className=\"messageBody\">\n                {/* <div className=\"msgBox\">\n                    <div className=\"profileBox active\" onClick={() => selectChat()}>\n                        <div className=\"profilePic\"><img src=\"https://i.pinimg.com/736x/e8/91/57/e891575d03afba348fa6242e41610215.jpg\" alt=\"User\" /></div>\n                        <div className=\"profileDetails\">\n                            <b>Aman</b>\n                            <div>ARM</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chatBox\">\n                    <div className=\"showChat\">\n                        <div className=\"showChatArea\">\n                            <div className=\"clientBox\"><span>Hi, I'm there.</span></div>\n                            <div className=\"armBox\"><span>Ha bolo</span></div>\n\n                        </div>\n                    </div>\n                    <div className=\"sendChat\">\n                        <input\n                            type=\"text\"\n                            placeholder='Write your message...'\n                            value={chatInput}\n                            onKeyDown={detectChange}\n                            onChange={event => setChatInput(event.target.value)}\n                        />\n                    </div>\n                </div> */}\n                <iframe src={url} className=\"chatBox\" frameBorder=\"0\"></iframe>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./addtrack.scss\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n// import { computeHeadingLevel } from \"@testing-library/react\";\nimport { httpUrl, docServerUrl } from \"../../restservice\";\n\nlet idtrack;\nlet statustrack;\nlet Armname = JSON.parse(localStorage.getItem(\"userData\")).name;\n\nexport default function Managetracks(props) {\n  const [data, setData] = useState([]);\n  const [datafill, setDatafill] = useState([]);\n  const [searchterm, setsearchterm] = useState(\"\");\n  const [pagestatus, setpagestatus] = useState(\"ALL\");\n  const [trackstatus, settrackstatus] = useState(\"ALL_TRACK\");\n  const { showaddtrack, showedittrack } = props;\n  const [changepage, setchangepage] = useState(0);\n  const [changerejectstatus, setchangerejectstatus] = useState(false);\n  const [trackdata, settrackdata] = useState([]);\n\n  const [totaltrack, settotaltrack] = useState([]);\n  const [totalsold, setotalsold] = useState(0);\n\n  const docServer = docServerUrl;\n  // let apiCallInit = true;\n\n  useEffect(() => {\n    // setpagezero()\n    setpagefour();\n    setpagetwo();\n  }, []);\n\n  function getToTitles(str) {\n    let string = str.replace(/_/g, \" \");\n    return toTitles(string);\n  }\n  function toTitles(s) {\n    return s.replace(/\\w\\S*/g, function (t) {\n      return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase();\n    });\n  }\n\n  function getToTitles(str) {\n    if (str) {\n      let string;\n      if (str !== \" \") {\n        string = str.replace(/_/g, \" \");\n      } else {\n        string = str;\n      }\n      return toTitles(string);\n    }\n  }\n\n  const chnagepageitem = (id) => {\n    setchangerejectstatus(true);\n    idtrack = id;\n  };\n\n  const statussubmit = (e) => {\n    // e.preventDefault();\n\n    //  console.log(idstore)\n    // const { rejectreason } = values\n\n    let statusupdate = {\n      id: idtrack,\n      rejectreason: e,\n      status: \"REJECT\",\n    };\n\n    axios.post(httpUrl + \"soundTrack/update\", statusupdate).then((responce) => {\n      console.log(responce.data);\n      statustrack = pagestatus;\n      setpagezeroall();\n    });\n\n    Swal.fire({\n      icon: \"success\",\n      title: \"Rejected\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n    // values.rejectreason = \"\"\n    // setchangerejectstatus(false)\n  };\n\n  const showedit = (senidd) => {\n    showedittrack(senidd);\n  };\n\n  function trackdetails(id) {\n    setchangepage(1);\n    axios.get(httpUrl + \"soundTrack/\" + id).then((responce) => {\n      settrackdata(responce.data);\n      // setidstore(responce.data.id)\n      console.log(responce.data);\n    });\n  }\n\n  function checkstatus(e) {\n    let val = e.target.value;\n    statustrack = val;\n    if (val === \"SUBMITTED\") {\n      setpagestatus(val);\n      setpagezeroall();\n      // filterItems(val)\n    } else if (val === \"PUBLISHED\") {\n      setpagestatus(val);\n      setpagezeroall();\n      // filterItems(val)\n    } else if (val === \"SOLD\") {\n      setpagestatus(val);\n      setpagezeroall();\n      // filterItems(val)\n    } else if (val === \"APPROVED\") {\n      setpagestatus(val);\n      setpagezeroall();\n      // filterItems(val)\n    } else if (val === \"REJECT\") {\n      setpagestatus(val);\n      setpagezeroall();\n      // filterItems(val)\n    } else {\n      setpagestatus(val);\n      setpagefour();\n      setpagetwo();\n      // filterItems(val)\n    }\n  }\n\n  function setpagezeroall() {\n    if (trackstatus !== \"ALL_TRACK\") {\n      let strdata = \"&status=\" + statustrack + \"&track=\" + trackstatus;\n      axios\n        .get(httpUrl + \"soundTrack?uploadedby=\" + Armname + strdata)\n        .then((responce) => {\n          setData([...responce.data]);\n          setDatafill([...responce.data]);\n          console.log(responce.data);\n        });\n    } else if (statustrack === \"ALL\") {\n      setpagefour();\n      setpagetwo();\n    } else {\n      let strdata = \"status=\" + statustrack;\n\n      axios\n        .get(httpUrl + \"soundTrack?uploadedby=\" + Armname + \"&\" + strdata)\n        .then((responce) => {\n          setData([...responce.data]);\n          setDatafill([...responce.data]);\n          console.log(responce.data);\n        });\n    }\n  }\n\n  function setpagetwo() {\n    axios\n      .get(httpUrl + \"soundTrack?uploadedby=\" + Armname + \"&status=SOLD\")\n      .then((responce) => {\n        let jsonData = [...responce.data];\n        setotalsold(jsonData.length);\n        console.log(responce.data);\n      });\n  }\n\n  function nonfeatured() {\n    axios\n      .get(httpUrl + \"soundTrack?uploadedby=\" + Armname + \"&track=NON_FEATURED\")\n      .then((responce) => {\n        setData([...responce.data]);\n        settrackstatus(\"NON_FEATURED\");\n        console.log(responce.data);\n      });\n  }\n\n  function featured() {\n    axios\n      .get(httpUrl + \"soundTrack?uploadedby=\" + Armname + \"&track=FEATURED\")\n      .then((responce) => {\n        setData([...responce.data]);\n        settrackstatus(\"FEATURED\");\n        console.log(responce.data);\n      });\n  }\n\n  function setpagefour() {\n    axios.get(httpUrl + \"soundTrack?uploadedby=\" + Armname).then((responce) => {\n      let jsonData = [...responce.data];\n      setData([...responce.data]);\n      setDatafill([...responce.data]);\n      settotaltrack(jsonData.length);\n      settrackstatus(\"ALL_TRACK\");\n      // console.log(responce.data)\n    });\n  }\n\n  function deleteemployee(id) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this Sound Track!\",\n      type: \"Warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then((result) => {\n      if (result.value) {\n        axios.delete(httpUrl + \"soundTrack/\" + id).then((responce) => {\n          Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\n          console.log(responce);\n          statustrack = pagestatus;\n          setpagezeroall();\n        });\n      }\n    });\n  }\n\n  function statuschange(id, status) {\n    let updateproject = {\n      id: id,\n      status: \"PUBLISHED\",\n    };\n\n    console.log(\"updateproject\", updateproject);\n\n    axios\n      .post(httpUrl + \"soundTrack/update\", updateproject)\n      .then((responce) => {\n        // setData([...responce.data])\n        console.log(responce.data);\n        setpagefour();\n      });\n  }\n\n  function rejectedChange(id, status) {\n    Swal.fire({\n      title: \"Reject Reason\",\n      input: \"text\",\n      inputPlaceholder: \"Enter your Reject Reason\",\n      confirmButtonText: \"Submit\",\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.value) {\n        console.log(\"rejectedChange:\", result.value);\n        statustrack = pagestatus;\n        statussubmit(result.value);\n      }\n    });\n\n    // setchangerejectstatus(true)\n    idtrack = id;\n  }\n\n  return (\n    <div>\n      {changepage === 0 ? (\n        <div className=\"card\">\n          <div className=\"card-body \">\n            <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n              <div className=\"panel panel-default cart-border\">\n                <div className=\"panel-heading panel-style\">\n                  <span>\n                    <h3 style={{ color: \"#ffc701\" }}>\n                      <span style={{ float: \"left\" }}>\n                        Total Track = {totaltrack} &nbsp; Total Sold ={\" \"}\n                        {totalsold}{\" \"}\n                      </span>\n                    </h3>\n                  </span>\n                  <span\n                    onClick={() => {\n                      showaddtrack();\n                    }}\n                    title=\"Add Track\"\n                    style={{ float: \"right\", cursor: \"pointer\" }}\n                  >\n                    <i className=\"fa fa-plus\"></i>\n                  </span>\n                </div>\n                <div style={{ float: \"left\", margin: \"12px\" }}>\n                  <button\n                    onClick={() => {\n                      featured();\n                    }}\n                    className=\"btn-primary\"\n                    style={{\n                      color: \"White\",\n                      margin: \"0 20px\",\n                      padding: \"6px 32px\",\n                      fontSize: \"15px\",\n                    }}\n                    className={trackstatus === \"FEATURED\" ? \"active-link\" : \"\"}\n                  >\n                    FEATURED\n                  </button>\n                  <button\n                    onClick={() => {\n                      nonfeatured();\n                    }}\n                    className=\"btn-primary\"\n                    style={{\n                      color: \"White\",\n                      margin: \"0 20px\",\n                      padding: \"6px 32px\",\n                      fontSize: \"15px\",\n                    }}\n                    className={\n                      trackstatus === \"NON_FEATURED\" ? \"active-link\" : \"\"\n                    }\n                  >\n                    NON FEATURED\n                  </button>\n                  <button\n                    onClick={() => {\n                      setpagefour();\n                    }}\n                    className=\"btn-primary\"\n                    style={{\n                      color: \"White\",\n                      margin: \"0 20px\",\n                      padding: \"6px 32px\",\n                      fontSize: \"15px\",\n                    }}\n                    className={trackstatus === \"ALL_TRACK\" ? \"active-link\" : \"\"}\n                  >\n                    ALL TRACK\n                  </button>\n                </div>\n                <div className=\"dropdownstyle1\">\n                  <select name=\"pagestatus\" onChange={checkstatus} id=\"status\">\n                    <option value=\"ALL\">All</option>\n                    <option value=\"SUBMITTED\">SUBMITTED</option>\n                    <option value=\"PUBLISHED\">PUBLISHED</option>\n                    <option value=\"SOLD\">SOLD</option>\n                    <option value=\"REJECT\">REJECT</option>\n                  </select>\n                </div>\n                <div>\n                  {pagestatus === \"ALL\" ? (\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive table-style\">\n                        <table id=\"projects\">\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Track Type</th>\n                              <th>Genre</th>\n                              <th>Composer</th>\n                              <th>Status</th>\n                              <th>Price</th>\n                              <th>Action</th>\n                            </tr>\n\n                            <tr>\n                              <th colSpan=\"12\">\n                                <div className=\"Search\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"inputetype\"\n                                    onChange={(e) => {\n                                      setsearchterm(e.target.value);\n                                    }}\n                                    placeholder=\"Search By Name,Composer,Status,Track\"\n                                    name=\"search\"\n                                  />\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn-primary\"\n                                    style={{ color: \"White\" }}\n                                  >\n                                    <i className=\"fa fa-search\"></i>\n                                  </button>\n                                </div>\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data\n                              .filter((val) => {\n                                if (searchterm === \"\") {\n                                  return true;\n                                } else if (\n                                  val.name\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.tracktype\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.composer\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.status\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase())\n                                ) {\n                                  return true;\n                                } else return false;\n                              })\n                              .map((entry, _index) => (\n                                <tr key={entry.id}>\n                                  <td>{entry.name}</td>\n                                  <td>{entry.tracktype}</td>\n                                  <td>{getToTitles(entry.genre)}</td>\n                                  <td>{entry.composer}</td>\n                                  <td>{entry.status}</td>\n                                  <td>{entry.price}</td>\n                                  <td>\n                                    {/* {entry.status === 'SUBMITTED' ?\n                                                                            <span>\n                                                                                <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Approved\" style={{ color: \"white\" }}>\n                                                                                    <button>\n                                                                                        <i className=\"fa fa-thumbs-up\"></i>\n                                                                                    </button>\n                                                                                </span>\n                                                                                &nbsp;\n                                                                                &nbsp;\n                                                                                \n                                                                            </span>\n                                                                            : null} */}\n                                    {/* {entry.status === 'SOLD' ?\n                                                                            <span onClick={() => { deleteemployee(entry.id) }} title=\"Delete\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null}\n\n                                                                        {entry.status === 'APPROVED' || entry.status === 'PUBLISHED' ?\n                                                                            <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submitted\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-check\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null\n                                                                        }\n\n                                                                        {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} */}\n                                    <span\n                                      onClick={() => {\n                                        trackdetails(entry.id);\n                                      }}\n                                      title=\"Track Detail\"\n                                      style={{ color: \"white\" }}\n                                    >\n                                      <button>\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </button>\n                                    </span>\n                                    &nbsp; &nbsp;\n                                    {entry.status === \"REJECT\" ? (\n                                      <span\n                                        onClick={() => {\n                                          showedit(entry.id);\n                                        }}\n                                        title=\"Track Update\"\n                                        style={{ color: \"white\" }}\n                                      >\n                                        <button>\n                                          <i className=\"fa fa-edit\"></i>\n                                        </button>\n                                      </span>\n                                    ) : null}\n                                  </td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  ) : null}\n\n                  {pagestatus === \"SUBMITTED\" ? (\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive table-style\">\n                        <table id=\"projects\">\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Track Type</th>\n                              <th>Genre</th>\n                              <th>Composer</th>\n                              <th>Status</th>\n                              <th>Price</th>\n                              <th>Action</th>\n                            </tr>\n\n                            <tr>\n                              <th colSpan=\"12\">\n                                <div className=\"Search\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"inputetype\"\n                                    onChange={(e) => {\n                                      setsearchterm(e.target.value);\n                                    }}\n                                    placeholder=\"Search By Name,Composer,Status,Track\"\n                                    name=\"search\"\n                                  />\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn-primary\"\n                                    style={{ color: \"White\" }}\n                                  >\n                                    <i className=\"fa fa-search\"></i>\n                                  </button>\n                                </div>\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data\n                              .filter((val) => {\n                                if (searchterm === \"\") {\n                                  return true;\n                                } else if (\n                                  val.name\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.tracktype\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.composer\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.status\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase())\n                                ) {\n                                  return true;\n                                } else return false;\n                              })\n                              .map((entry, _index) => (\n                                <tr key={entry.id}>\n                                  <td>{entry.name}</td>\n                                  <td>{entry.tracktype}</td>\n                                  <td>{getToTitles(entry.genre)}</td>\n                                  <td>{entry.composer}</td>\n                                  <td>{entry.status}</td>\n                                  <td>{entry.price}</td>\n                                  <td>\n                                    <span\n                                      onClick={() => {\n                                        trackdetails(entry.id);\n                                      }}\n                                      title=\"Track Detail\"\n                                      style={{ color: \"white\" }}\n                                    >\n                                      <button>\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </button>\n                                    </span>\n                                    &nbsp; &nbsp;\n                                    {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null}\n                                                                             &nbsp;\n                                                                             &nbsp; */}\n                                    {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp; */}\n                                    {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Approved\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-thumbs-up\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                       \n\n                                                                        <span onClick={() => { rejectedChange(entry.id, entry.status) }} title=\"Rejected\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-thumbs-down\"></i>\n                                                                            </button>\n                                                                        </span> */}\n                                  </td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  ) : null}\n\n                  {pagestatus === \"PUBLISHED\" ? (\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive table-style\">\n                        <table id=\"projects\">\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Track Type</th>\n                              <th>Genre</th>\n                              <th>Composer</th>\n                              <th>Status</th>\n                              <th>Price</th>\n                              <th>Action</th>\n                            </tr>\n\n                            <tr>\n                              <th colSpan=\"12\">\n                                <div className=\"Search\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"inputetype\"\n                                    onChange={(e) => {\n                                      setsearchterm(e.target.value);\n                                    }}\n                                    placeholder=\"Search By Name,Composer,Status,Track\"\n                                    name=\"search\"\n                                  />\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn-primary\"\n                                    style={{ color: \"White\" }}\n                                  >\n                                    <i className=\"fa fa-search\"></i>\n                                  </button>\n                                </div>\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data\n                              .filter((val) => {\n                                if (searchterm === \"\") {\n                                  return true;\n                                } else if (\n                                  val.name\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.tracktype\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.composer\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.status\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase())\n                                ) {\n                                  return true;\n                                } else return false;\n                              })\n                              .map((entry, _index) => (\n                                <tr key={entry.id}>\n                                  <td>{entry.name}</td>\n                                  <td>{entry.tracktype}</td>\n                                  <td>{getToTitles(entry.genre)}</td>\n                                  <td>{entry.composer}</td>\n                                  <td>{entry.status}</td>\n                                  <td>{entry.price}</td>\n                                  <td>\n                                    <span\n                                      onClick={() => {\n                                        trackdetails(entry.id);\n                                      }}\n                                      title=\"Track Detail\"\n                                      style={{ color: \"white\" }}\n                                    >\n                                      <button>\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </button>\n                                    </span>\n                                    &nbsp; &nbsp;\n                                    {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null} */}\n                                  </td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  ) : null}\n\n                  {pagestatus === \"APPROVED\" ? (\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive table-style\">\n                        <table id=\"projects\">\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Track Type</th>\n                              <th>Genre</th>\n                              <th>Composer</th>\n                              <th>Status</th>\n                              <th>Price</th>\n                              <th>Action</th>\n                            </tr>\n\n                            <tr>\n                              <th colSpan=\"12\">\n                                <div className=\"Search\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"inputetype\"\n                                    onChange={(e) => {\n                                      setsearchterm(e.target.value);\n                                    }}\n                                    placeholder=\"Search By Name,Composer,Status,Track\"\n                                    name=\"search\"\n                                  />\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn-primary\"\n                                    style={{ color: \"White\" }}\n                                  >\n                                    <i className=\"fa fa-search\"></i>\n                                  </button>\n                                </div>\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data\n                              .filter((val) => {\n                                if (searchterm === \"\") {\n                                  return true;\n                                } else if (\n                                  val.name\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.tracktype\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.composer\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.status\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase())\n                                ) {\n                                  return true;\n                                } else return false;\n                              })\n                              .map((entry, _index) => (\n                                <tr key={entry.id}>\n                                  <td>{entry.name}</td>\n                                  <td>{entry.tracktype}</td>\n                                  <td>{getToTitles(entry.genre)}</td>\n                                  <td>{entry.composer}</td>\n                                  <td>{entry.status}</td>\n                                  <td>{entry.price}</td>\n                                  <td>\n                                    <span\n                                      onClick={() => {\n                                        trackdetails(entry.id);\n                                      }}\n                                      title=\"Track Detail\"\n                                      style={{ color: \"white\" }}\n                                    >\n                                      <button>\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </button>\n                                    </span>\n                                    &nbsp; &nbsp;\n                                    {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null}\n                                                                              &nbsp;\n                                                                            &nbsp; */}\n                                    {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submited\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-check\"></i>\n                                                                            </button>\n                                                                        </span> */}\n                                  </td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  ) : null}\n\n                  {pagestatus === \"SOLD\" ? (\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive table-style\">\n                        <table id=\"projects\">\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Track Type</th>\n                              <th>Genre</th>\n                              <th>Composer</th>\n                              <th>Status</th>\n                              <th>Price</th>\n                              <th>Action</th>\n                            </tr>\n\n                            <tr>\n                              <th colSpan=\"12\">\n                                <div className=\"Search\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"inputetype\"\n                                    onChange={(e) => {\n                                      setsearchterm(e.target.value);\n                                    }}\n                                    placeholder=\"Search By Name,Composer,Status,Track\"\n                                    name=\"search\"\n                                  />\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn-primary\"\n                                    style={{ color: \"White\" }}\n                                  >\n                                    <i className=\"fa fa-search\"></i>\n                                  </button>\n                                </div>\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data\n                              .filter((val) => {\n                                if (searchterm === \"\") {\n                                  return true;\n                                } else if (\n                                  val.name\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.tracktype\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.composer\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.status\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase())\n                                ) {\n                                  return true;\n                                } else return false;\n                              })\n                              .map((entry, _index) => (\n                                <tr key={entry.id}>\n                                  <td>{entry.name}</td>\n                                  <td>{entry.tracktype}</td>\n                                  <td>{getToTitles(entry.genre)}</td>\n                                  <td>{entry.composer}</td>\n                                  <td>{entry.status}</td>\n                                  <td>{entry.price}</td>\n                                  <td>\n                                    <span\n                                      onClick={() => {\n                                        trackdetails(entry.id);\n                                      }}\n                                      title=\"Track Detail\"\n                                      style={{ color: \"white\" }}\n                                    >\n                                      <button>\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </button>\n                                    </span>\n                                    &nbsp; &nbsp;\n                                    {/* <span onClick={() => {showedit(entry.id) }} title=\"Artist Update\" style={{ color: \"white\" }}>\n                                                            <button>\n                                                                <i className=\"fa fa-edit\"></i>\n                                                            </button>\n                                                        </span>\n                                                        &nbsp;\n                                                        &nbsp; */}\n                                    {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span> */}\n                                  </td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  ) : null}\n\n                  {pagestatus === \"REJECT\" ? (\n                    <div className=\"panel-body\">\n                      <div className=\"table-responsive table-style\">\n                        <table id=\"projects\">\n                          <thead>\n                            <tr>\n                              <th>Name</th>\n                              <th>Track Type</th>\n                              <th>Genre</th>\n                              <th>Composer</th>\n                              <th>Status</th>\n                              <th>Price</th>\n                              <th>Action</th>\n                            </tr>\n\n                            <tr>\n                              <th colSpan=\"12\">\n                                <div className=\"Search\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"inputetype\"\n                                    onChange={(e) => {\n                                      setsearchterm(e.target.value);\n                                    }}\n                                    placeholder=\"Search By Name,Composer,Status,Track\"\n                                    name=\"search\"\n                                  />\n                                  <button\n                                    type=\"submit\"\n                                    className=\"btn-primary\"\n                                    style={{ color: \"White\" }}\n                                  >\n                                    <i className=\"fa fa-search\"></i>\n                                  </button>\n                                </div>\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data\n                              .filter((val) => {\n                                if (searchterm === \"\") {\n                                  return true;\n                                } else if (\n                                  val.name\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.tracktype\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.composer\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase()) ||\n                                  val.status\n                                    .toLowerCase()\n                                    .includes(searchterm.toLowerCase())\n                                ) {\n                                  return true;\n                                } else return false;\n                              })\n                              .map((entry, _index) => (\n                                <tr key={entry.id}>\n                                  <td>{entry.name}</td>\n                                  <td>{entry.tracktype}</td>\n                                  <td>{getToTitles(entry.genre)}</td>\n                                  <td>{entry.composer}</td>\n                                  <td>{entry.status}</td>\n                                  <td>{entry.price}</td>\n                                  <td>\n                                    <span\n                                      onClick={() => {\n                                        trackdetails(entry.id);\n                                      }}\n                                      title=\"Track Detail\"\n                                      style={{ color: \"white\" }}\n                                    >\n                                      <button>\n                                        <i className=\"fa fa-info-circle\"></i>\n                                      </button>\n                                    </span>\n                                    &nbsp; &nbsp;\n                                    {/* <span onClick={() => { statuschange(entry.id, entry.status) }} title=\"Submited\" style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-check\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp; */}\n                                    {/* <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                            <button>\n                                                                                <i className=\"fa fa-trash\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                        &nbsp;\n                                                                        &nbsp;\n\n                                                                        {entry.status === 'REJECT' ?\n                                                                            <span onClick={() => { showedit(entry.id) }} title=\"Track Update\" style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-edit\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            : null} */}\n                                    {entry.status === \"REJECT\" ? (\n                                      <span\n                                        onClick={() => {\n                                          showedit(entry.id);\n                                        }}\n                                        title=\"Track Update\"\n                                        style={{ color: \"white\" }}\n                                      >\n                                        <button>\n                                          <i className=\"fa fa-edit\"></i>\n                                        </button>\n                                      </span>\n                                    ) : null}\n                                    {/* {\n                                                                                entry.tracktype === 'FEATURED'?\n                                                                                <span onClick={() => { deleteemployee(entry.id) }} style={{ color: \"white\" }}>\n                                                                                <button>\n                                                                                    <i className=\"fa fa-trash\"></i>\n                                                                                </button>\n                                                                            </span>\n                                                                            :null} */}\n                                  </td>\n                                </tr>\n                              ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {changepage === 1 ? (\n        <div className=\"card\">\n          <div className=\"card-body \">\n            <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n              <div className=\"panel panel-default cart-border\">\n                <div className=\"panel-heading panel-style\">\n                  <h3 style={{ color: \"#ffc701\" }}>\n                    <span style={{ float: \"left\" }}>Track Details</span>\n                    <span\n                      onClick={() => {\n                        setchangepage(0);\n                      }}\n                      style={{\n                        color: \"white\",\n                        float: \"right\",\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      Back\n                    </span>\n                  </h3>\n\n                  {/* <h1 onClick={() => {goBack()}} >This is details page==={userId}</h1> */}\n                </div>\n\n                <div className=\"panel-body\">\n                  <div style={{ padding: \"24px\" }}>\n                    <span style={{ fontSize: \"19px\", float: \"left\" }}>\n                      Details :\n                    </span>\n                  </div>\n\n                  <div className=\"grid-container\">\n                    <div className=\"grid-item\">\n                      Name: <label>{trackdata.name}</label>\n                    </div>\n\n                    <div className=\"grid-item\">\n                      Track Type: <label>{trackdata.tracktype}</label>\n                    </div>\n\n                    <div className=\"grid-item\">\n                      Artist: <label>{trackdata.composer}</label>\n                    </div>\n\n                    <div className=\"grid-item\">\n                      Status: <label>{trackdata.status}</label>\n                    </div>\n\n                    <div className=\"grid-item\">\n                      Price: <label>{trackdata.price}</label>\n                    </div>\n                    <div className=\"grid-item\">\n                      Description: <label>{trackdata.description}</label>\n                    </div>\n                    {trackdata.status === \"REJECT\" ? (\n                      <div className=\"grid-item\">\n                        Reject Reason: <label>{trackdata.rejectreason}</label>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"grid-container\">\n                    {trackdata.photo ? (\n                      <div className=\"grid-item\">\n                        <img\n                          style={{ height: \"100px\", width: \"100px\" }}\n                          src={docServer + trackdata.photo?.docpath}\n                        />\n                      </div>\n                    ) : null}\n\n                    {trackdata.track ? (\n                      <div className=\"grid-item\">\n                        <audio\n                          controls\n                          preload=\"auto\"\n                          style={{ width: \"100%\" }}\n                          src={docServer + trackdata.track?.docpath}\n                        ></audio>\n                      </div>\n                    ) : null}\n                  </div>\n                  {/* <div className=\"btn-margin\">\n                                        {trackdata.status === 'REJECT' ?\n                                            <button className=\"btn-primary btn-small\" style={{ padding: '5px 20px' }}\n                                                onClick={() => { showedit(trackdata.id) }} >Edit\n                                            </button>\n                                            : null}\n                                    </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","// import React, { Component } from \"react\";\nimport axios from 'axios';\nimport React from 'react';\n// import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport './addtrack.scss'\nimport { httpUrl, docServerUrl } from '../../restservice'\n\nlet trackidd\nlet dataid\nlet rname = Math.random().toString(36).substring(7) + new Date().getTime();\nlet Armname = JSON.parse(localStorage.getItem(\"userData\")).name;\nclass Addtrack extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            selectedFile1: null,\n            handleResponse: null,\n            imageUrl: null,\n            track: {},\n            data: {},\n            projectid: 0,\n            projectvalue: [],\n            imageUrl1: null,\n            docServer: docServerUrl,\n            tracktypess: \"NON_FEATURED\",\n            // statustrack:\"SUBMITTED\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updatedata = this.updatedata.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handletrackstatus = this.handletrackstatus.bind(this)\n\n\n    };\n\n    // loadData = () => {\n    //     let userid=this.props.empid\n    //     const endpoint = httpUrl + 'employee/${userid}`;\n    //     fetch(endpoint)\n    //       .then(response => response.json())\n    //       .then(json => {\n    //         this.setState({\n    //           data: [{ ...json }],\n    //           scrolling: false,\n    //         });\n    //       });\n    //   };\n\n\n\n    componentDidMount() {\n        this.getdata();\n    }\n\n    // initfun = () => {\n    //     let userid = this.props.empid\n    //     // alert(userid)\n    //     // let data\n    //     axios.get(httpUrl +  'employee/' + userid)\n    //         .then(responce => {\n    //             this.setState({\n    //                 data: responce.data,\n    //                 scrolling: false,\n    //                 empStatus: responce.data.status\n    //             });\n    //             statuschange = responce.data.status;\n\n    //            console.log('status',responce.data.status);\n\n    //         });\n    // }\n\n\n\n    getdata = () => {\n        axios.get(httpUrl +  'genre')\n            .then(responce => {\n                this.setState({\n                    projectvalue: responce.data,\n                    scrolling: false,\n                });\n                // dataid = responce.data[0].id\n                console.log(dataid)\n                console.log(responce.data)\n            });\n    }\n\n\n\n\n\n\n\n\n\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n        console.log(this.state)\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            projectid: value\n        })\n    }\n    handletrackstatus(e) {\n        let value = e.target.value;\n        this.setState({\n            tracktypess: value\n        })\n    }\n\n\n\n    onChangeFile1 = event => {\n        this.setState({ selectedFile1: event.target.files[0] })\n        if (event.target.files[0] !== '') {\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl1: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                track: {\n                    docname: event.target.files[0].name,\n                    doctype: 'track',\n                    docpath: \"soundtrack/Audio/\" + rname + '/' + event.target.files[0].name,\n                    docdesc: \"track\"\n                }\n            })\n\n        }\n        console.log(\"track\")\n        console.log(this.state.track.docname)\n\n    }\n\n    refreshdata = () => {\n        axios.get(httpUrl +  'soundTrack?uploadedby=' + Armname)\n            .then(responce => {\n                this.setState({\n                    data: responce.data,\n                    scrolling: false,\n                });\n                // dataid = responce.data[0].id\n                console.log(responce.data)\n            });\n    }\n\n    updatedata(e) {\n        e.preventDefault();\n    //    alert(this.state.track.docname)\n        const armname = JSON.parse(localStorage.getItem(\"userData\")).name;\n        let fields = {\n            name: \"\",\n            composer: \"\",\n            description: \"\",\n            price: \"\"\n            // uploadedby:\"\"\n        }\n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n        console.log(this.state.statustrack)\n        console.log(this.state.projectid)\n\n        \n          \n        let projectdata = {\n            name: this.state.fields.name,\n            tracktype: this.state.tracktypess,\n            composer: this.state.fields.composer,\n            description: this.state.fields.description,\n            // price: this.state.fields.price,\n            status: 'SUBMITTED',\n            genre: this.state.projectid,\n            uploadedby: armname,\n            track: {\n                docname: this.state.selectedFile1.name,\n                docpath: \"soundtrack/Audio\" + \"/\" + rname + this.state.selectedFile1.name,\n                docdesc: \"track\",\n                doctype: \"track\"\n            }\n        }\n\n        if(this.state.tracktypess === 'NON_FEATURED'){\n         projectdata.price = 0\n        }\n        else{\n            projectdata.price = this.state.fields.price\n        }\n      \n        console.log('projectdata')\n        console.log(this.state.projectid)\n\n        var ext = this.state.track.docname.substr(this.state.track.docname.lastIndexOf('.') + 1);\n            if (ext === 'mp3' || ext === 'mp4') {\n                axios.post(httpUrl +  'soundTrack', projectdata)\n                    .then(responce =>{\n\n                        this.setState({\n                            fields: fields\n                        })\n                        console.log(responce)\n                        trackidd = responce.data.id\n                        this.phoadd(responce.data.id)\n                        this.handleUpload1(responce.data.id)\n\n\n\n                        Swal.fire({\n                            icon: 'success',\n                            title: 'Submitted',\n                            showConfirmButton: false,\n                            timer: 1500\n                        })\n                        this.props.goBack()\n                        this.refreshdata();\n            \n                    }).catch(error =>{\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'SoundTrack And Genre Already Exist ',\n                            showConfirmButton: false,\n                            timer: 3500\n                        })\n                        console.log(error)\n                      });\n            }\n            else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Please Upload Mp3 Or Mp4 File',\n                    showConfirmButton: false,\n                    timer: 1500\n                })\n            }\n\n        \n    }\n    updateaudio(trackid) {\n        let updateaudiofile = {\n            id: trackid,\n            track: {\n                docname: this.state.selectedFile1.name,\n                docpath: \"soundtrack/Audio/\" + trackid + \"/\" + this.state.selectedFile1.name,\n                docdesc: \"track\",\n                doctype: \"track\"\n            }\n        }\n        axios.post(httpUrl +  'soundTrack/update', updateaudiofile)\n            .then(responce => {\n                // this.state.fields = fields \n                this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate Track\",\n                });\n\n\n            })\n    }\n\n    phoadd = (trackid) => {\n        console.log(trackid)\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"soundtrack/\" + trackidd);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            this.updatephoto(trackid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n    updatephoto(trackid) {\n        let updateAbleData = {\n            id: trackid,\n            photo: {\n                docname: this.state.selectedFile.name,\n                doctype: 'soundtrack',\n                docpath: \"soundtrack/\" + trackid + \"/\" + this.state.selectedFile.name,\n                docdesc: 'soundtrack'\n            },\n        }\n        axios.post(httpUrl +  'soundTrack/update', updateAbleData)\n            .then(responce => {\n                // this.state.fields = fields \n                this.props.goBack()\n\n                console.log(responce.data)\n            }).catch(error => {\n                console.log(error)\n                Swal.fire({\n                    icon: 'error',\n                    title: \"Duplicate User\",\n                });\n\n\n            })\n    }\n\n\n\n\n    handleUpload1 = (trackid) => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile1 } = this.state;\n        if (!selectedFile1) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select audio to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile1, rname + this.state.selectedFile1.name);\n        formData.append('name', \"soundtrack/Audio\");\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updateaudio(trackid);\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert('error')\n            //   this.opensweetalertdanger(err.message);\n        });\n    }\n\n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'soundtrack',\n                    docpath: \"soundtrack/\" + trackidd + '/' + event.target.files[0].name,\n                    docdesc: \"soundtrack\"\n                }\n            });\n        }\n    }\n\n\n\n\n\n\n\n    render() {\n        const { imageUrl, imageUrl1 } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Add Sound Track</span>\n                                </h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                                        <div className=\"row1\">\n                                            <div className=\"column1\" >\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\" className='textstyle' name=\"name\" id=\"name\" value={this.state.fields.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Artist</label>\n                                                    <input type=\"text\" className='textstyle' name=\"composer\" id=\"composer\" value={this.state.fields.composer} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Select Genre</label>\n                                                    <select required name='status' value={this.state.projectid} onChange={this.handleStatusChange} id=\"status\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        <option value=\"0\">Select</option>\n\n                                                        {this.state.projectvalue.map((entry) => {\n                                                            return <option value={entry.name}>{entry.genre}</option>\n                                                        })\n                                                        }\n\n                                                    </select>\n                                                </div>\n                                                {\n                                                    this.state.tracktypess === 'FEATURED' ?\n                                                        <div style={{ marginTop: \"25px\" }}>\n                                                            <label style={{ float: \"left\", marginBottom: \"8px\" }}>Price</label>\n                                                            <input type=\"number\" className='textstyle' id=\"price\" name=\"price\" value={this.state.fields.price} onChange={this.handleChange} />\n                                                        </div>\n                                                        : null}\n\n\n                                            </div >\n                                            <div className=\"column1\" >\n\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Track Type</label>\n                                                    <select name='tracktype' required value={this.state.tracktypess} onChange={this.handletrackstatus} id=\"trackstatus\" style={{ borderRadius: \"10px\", padding: \"8px\", width: \"100%\" }} >\n                                                        {/* <option value=\"0\">select</option> */}\n                                                        <option value=\"NON_FEATURED\">NON_FEATURED</option>\n                                                        <option value=\"FEATURED\">FEATURED</option>\n                                                    </select>\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Description</label>\n                                                    <input type=\"text\" className='textstyle' id=\"description\" name=\"description\" value={this.state.fields.description} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Uploaded By</label>\n                                                    <input type=\"text\" readOnly className='textstyle' id=\"uploadedby\" name=\"uploadedby\" value={Armname} />\n                                                </div>\n\n\n\n                                            </div>\n\n\n\n\n\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\" onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height: \"185px\", width: \"175px\" }}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Audio File:</span></label>\n                                                    <input required type=\"file\"  onChange={this.onChangeFile1} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <audio controls required accept=\"audio/*\"\n                                                        autoPlay preload=\"auto\"\n                                                        src={imageUrl1}>\n                                                    </audio>\n\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Submit\n                                                    </button>\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>\n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Addtrack;\n","// import React, { Component } from \"react\";\nimport  axios from 'axios';\nimport React from 'react';\n// import React, { useState } from \"react\";\nimport Swal from 'sweetalert2';\nimport './addtrack.scss'\nimport { httpUrl, docServerUrl } from '../../restservice'\n\nlet dataid\nlet Armname=JSON.parse(localStorage.getItem(\"userData\")).name;\nclass Edittrack extends React.Component {\n    constructor(props) {\n        super(props);\n       \n        this.state = {\n            fields: {},\n            photo: {},\n            selectedFile: null,\n            selectedFile1: null,\n            handleResponse: null,\n            imageUrl: null,\n            track:{},\n            data:{},\n            projectid:\"\",\n            projectvalue:[],\n            imageUrl1: null,\n            docServer: docServerUrl,\n            tracktypess: \"\",\n            // statustrack:\"SUBMITTED\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updatedata = this.updatedata.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this)\n        this.handletrackstatus = this.handletrackstatus.bind(this)\n\n\n    };\n\n    // loadData = () => {\n    //     let userid=this.props.empid\n    //     const endpoint = httpUrl + 'employee/${userid}`;\n    //     fetch(endpoint)\n    //       .then(response => response.json())\n    //       .then(json => {\n    //         this.setState({\n    //           data: [{ ...json }],\n    //           scrolling: false,\n    //         });\n    //       });\n    //   };\n\n\n\n    componentDidMount(){\n        this.getdata();\n        this.getdatabyid();\n    }\n\n    // initfun = () => {\n    //     let userid = this.props.empid\n    //     // alert(userid)\n    //     // let data\n    //     axios.get(httpUrl +  'employee/' + userid)\n    //         .then(responce => {\n    //             this.setState({\n    //                 data: responce.data,\n    //                 scrolling: false,\n    //                 empStatus: responce.data.status\n    //             });\n    //             statuschange = responce.data.status;\n               \n    //            console.log('status',responce.data.status);\n\n    //         });\n    // }\n\n    getdatabyid = ()=>{\n        let getbyidtrack = this.props.trackdetailId\n        axios.get(httpUrl +  'soundTrack/'+getbyidtrack)\n                .then(responce => {\n                    this.setState({\n                        data: responce.data,\n                        scrolling: false,\n                        tracktypess:responce.data.tracktype,\n                        projectid:responce.data.genre\n                    });\n                    // dataid = responce.data[0].id\n                    console.log(responce.data)\n                });\n    }\n\n  getdata = ()=>{\n        axios.get(httpUrl +  'genre')\n                .then(responce => {\n                    this.setState({\n                        projectvalue: responce.data,\n                        scrolling: false,\n                    });\n                    // dataid = responce.data[0].id\n                    console.log(dataid)\n                    console.log(responce.data)\n                });\n    }\n    refreshdata = ()=>{\n         axios.get(httpUrl +  'soundTrack?uploadedby='+Armname)\n                .then(responce => {\n                    this.setState({\n                        data: responce.data,\n                        scrolling: false,\n                    });\n                    // dataid = responce.data[0].id\n                    console.log(responce.data)\n                });\n    }\n\n\n    \n    // axios.get(httpUrl +  'soundTrack?uploadedby='+Armname)\n\n\n\n\n\n\n    handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n        console.log(this.state)\n    }\n\n    handleStatusChange(e) {\n        let value = e.target.value;\n        this.setState({\n            projectid: value\n        })\n    }\n    handletrackstatus(e) {\n        let value = e.target.value;\n        this.setState({\n            tracktypess: value\n        })\n    }\n\n    \n\n    onChangeFile1 = event => {\n        this.setState({ selectedFile1: event.target.files[0] })\n       if (event.target.files[0] !== '') {\n          var reader = new FileReader();\n          reader.onload = (eve) => {\n            this.setState({ imageUrl1: eve.target.result });\n          }\n          reader.readAsDataURL(event.target.files[0]);\n          this.setState({\n            track: {\n              docname:event.target.files[0].name,\n              doctype:'track',\n              docpath: \"soundtrack/Audio/\"+ event.target.files[0].name,\n              docdesc:\"track\"\n            }\n          })\n         \n        }\n        console.log(\"track\")\n        console.log(this.state.track)\n       \n      }\n\n\n\n    updatedata(e) {\n        e.preventDefault();\n        const armname = JSON.parse(localStorage.getItem(\"userData\")).name;\n       \n\n        console.log(\"this.state.fields\")\n        console.log(this.state.fields)\n        console.log(this.state.statustrack)\n        console.log(this.state.projectid)\n\n\n        let projectdata = {\n            id:this.props.trackdetailId,\n            name: this.state.fields.name,\n            tracktype: this.state.tracktypess,\n            composer: this.state.fields.composer,\n            description: this.state.fields.description,\n            price: this.state.fields.price,\n            status:'SUBMITTED',\n            genre:this.state.projectid,\n            uploadedby:armname,\n            photo:{},\n            track: {\n                docname: this.state.selectedFile1.name,\n                docpath:\"soundtrack/Audio\"  + \"/\" + this.state.selectedFile1.name,\n                docdesc:\"track\",\n                doctype:\"track\"\n            }\n        }\n        console.log('projectdata')\n        console.log(this.state.projectid)\n       \n        var ext = this.state.track.docname.substr(this.state.track.docname.lastIndexOf('.') + 1);\n        if(ext ==='mp3' || ext==='mp4'){\n            projectdata.photo = this.state.photo\n                axios.post(httpUrl +  'soundTrack/update',projectdata)\n        .then(responce => {\n           \n            this.setState({\n                fields: fields\n            })  \n            console.log(responce)\n            this.phoadd()\n            this.handleUpload1()\n           \n          \n          \n        });\n       \n       \n    Swal.fire({\n        icon: 'success',\n        title: 'Submitted',\n        showConfirmButton: false,\n        timer: 1500\n    })\n    this.props.goBack()\n    let fields = {\n        name: \"\",\n        composer: \"\",\n        description: \"\",\n        price:\"\"\n    }\n    this.refreshdata()\n    \n        }\n        else{\n             Swal.fire({\n                        icon: 'error',\n                        title: 'Please Upload Mp3 Or Mp4 File',\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n        }\n    }\n   \n  \n    phoadd=() => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile } = this.state;\n        if (!selectedFile) {\n            this.setState({\n                handleResponse: {\n                    isSuccess: false,\n                    message: \"Please select image to upload.\"\n                }\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('doc', selectedFile, this.state.selectedFile.name);\n        formData.append('name', \"soundtrack/\" + this.props.trackdetailId);\n        formData.append('width', '400')\n        formData.append('height', '400')\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updatephoto(trackid)\n            this.setState({\n                handleResponse: {\n                    isSuccess: response.status === 200,\n                    message: response.data.message\n                },\n                // imageUrl: BASE_URL + response.data.file.path\n            });\n        }).catch(err => {\n            alert(err.message);\n        });\n    }\n\n  \n\n   \n\n   \n      handleUpload1 = () => {\n        const BASE_URL = httpUrl + 'common/doc/upload';\n        const { selectedFile1 } = this.state;\n        if (!selectedFile1) {\n          this.setState({\n            handleResponse: {\n              isSuccess: false,\n              message: \"Please select audio to upload.\"\n            }\n          });\n          return false;\n        }\n    \n        const formData = new FormData();\n        formData.append('doc', selectedFile1, this.state.selectedFile1.trackvalue);\n        formData.append('name', \"soundtrack/Audio\");\n        axios.post(BASE_URL, formData).then(response => {\n            // this.updateaudio(trackid);\n          this.setState({\n            handleResponse: {\n              isSuccess: response.status === 200,\n              message: response.data.message\n            },\n            // imageUrl: BASE_URL + response.data.file.path\n          });\n        }).catch(err => {\n            alert('error')\n        //   this.opensweetalertdanger(err.message);\n        });\n      }\n  \n    onChangeFile = event => {\n        this.setState({ selectedFile: event.target.files[0] })\n\n        if (event.target.files[0] !== '') {\n            // this.file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = (eve) => {\n                this.setState({ imageUrl: eve.target.result });\n            }\n            reader.readAsDataURL(event.target.files[0]);\n            this.setState({\n                photo: {\n                    docname: event.target.files[0].name,\n                    doctype: 'soundtrack',\n                    docpath: \"soundtrack/\" + this.props.trackdetailId + '/'+ event.target.files[0].name,\n                    docdesc: \"soundtrack\"\n                }\n            });\n        }\n    }\n     \n\n\n    \n\n\n\n    render() {\n        const { imageUrl,imageUrl1 } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body \">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 text-capitalize\">\n                        <div className=\"panel panel-default cart-border\">\n\n                            <div className=\"panel-heading panel-style\">\n\n\n                                   <h3 style={{ color: \"#ffc701\" }} >\n                                    <span style={{ float: \"left\" }}>Edit Sound Track</span>\n                                    </h3>\n\n                            </div>\n\n\n                            <div className=\"panel-body\">\n                                <div className=\"table-responsive table-style\">\n                                    <form method=\"post\" name=\"userRegistrationForm\" onSubmit={this.updatedata} >\n                                        <div className=\"row1\">\n                                            <div className=\"column1\" >\n                                                <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Name</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"name\" id=\"name\" defaultValue={this.state.data.name} onChange={this.handleChange} />\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Artist</label>\n                                                    <input type=\"text\"  className='textstyle' name=\"composer\" id=\"composer\" defaultValue={this.state.data.composer} onChange={this.handleChange} />\n                                                </div>\n                                                \n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Select Genre</label>\n                                                   <select required  name='status' value={this.state.projectid}  onChange={this.handleStatusChange} id=\"status\"   style={{borderRadius:\"10px\",padding:\"8px\",width:\"100%\"}} >\n                                                       <option value=\"0\">Select</option>\n                                                      \n                                                       {this.state.projectvalue.map((entry) => {\n                                                        return <option value={entry.name}>{entry.genre}</option>\n                                                        })\n                                                        }\n                                                      \n                                                   </select>\n                                                </div>\n                                               {\n                                                   this.state.tracktypess === 'FEATURED'?\n                                                   <div style={{ marginTop: \"25px\" }}>\n                                                   <label style={{ float: \"left\", marginBottom: \"8px\" }}>Price</label>\n                                                   <input type=\"number\"  className='textstyle' id=\"price\" name=\"price\" defaultValue={this.state.data.price} onChange={this.handleChange} />\n                                               </div>\n                                               :null}\n                                               \n                                                \n                                            </div >\n                                            <div className=\"column1\" >\n                                           \n                                            <div style={{ marginTop: \"19px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Track Type</label>\n                                                   <select name='tracktype' value={this.state.tracktypess}  onChange={this.handletrackstatus} id=\"trackstatus\"   style={{borderRadius:\"10px\",padding:\"8px\",width:\"100%\"}} >\n                                                       {/* <option value=\"0\">select</option> */}\n                                                       <option value=\"NON_FEATURED\">NON_FEATURED</option>\n                                                       <option value=\"FEATURED\">FEATURED</option> \n                                                   </select>\n                                                </div>\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Description</label>\n                                                    <input type=\"text\"  className='textstyle' id=\"description\" name=\"description\" defaultValue={this.state.data.description} onChange={this.handleChange} />\n                                                </div>\n\n                                                <div style={{ marginTop: \"25px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}>Uploaded By</label>\n                                                    <input type=\"text\" readOnly  className='textstyle' id=\"uploadedby\" name=\"uploadedby\" value={Armname}  />\n                                                </div>\n                                               \n                                                \n                                                \n                                            </div>\n                                            \n                                           \n\n                                            \n                                            \n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Photo:</span></label>\n                                                    <img style={{ height:\"200px\",width:\"200px\"}}\n                                                        src={this.state.docServer + this.state.data.photo?.docpath}\n                                                        className=\"card-img-top\"\n                                                        \n                                                    />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Audio:</span></label>\n                                                <audio controls preload=\"auto\"   src={this.state.docServer + this.state.data.track?.docpath}>\n                                                 </audio>\n                                                </div>\n                                            </div>\n                                        </div>\n                                       \n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Image:</span></label>\n                                                    <input type=\"file\"   onChange={this.onChangeFile} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <img style={{ height:\"185px\",width:\"175px\"}}\n                                                        src={imageUrl}\n                                                        className=\"card-img-top\"\n                                                        \n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <label style={{ float: \"left\", marginBottom: \"8px\" }}> <span>Select Audio File:</span></label>\n                                                    <input required type=\"file\" onChange={this.onChangeFile1} />\n                                                </div>\n\n                                            </div >\n\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\" }}>\n                                                    <audio controls required accept=\"audio/*\"\n                                                    autoPlay preload=\"auto\"\n                                                    src={imageUrl1}>\n                                                    </audio>\n                                                \n                                               \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"left\" }}>\n                                                    <button type=\"submit\" className='btn-primary' style={{ color: \"White\" }}>\n                                                        Update\n                                                    </button>\n                                                </div>\n\n                                            </div >\n                                            <div className=\"column\" >\n                                                <div style={{ marginTop: \"8px\", float: \"right\" }}>                                                    \n                                                    <button type=\"cancel\" onClick={() => { this.props.goBack() }} className='btn-primary' style={{ color: \"White\" }}>\n                                                        Cancel\n                                                    </button>\n                                                </div>\n\n                                            </div >\n\n\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Edittrack;\n","import React, { useState } from 'react'\n// import Swal from \"sweetalert2\"; \nimport Addtrack from './Addtrack';\nimport Edittrack from './Edittrack';\nimport Managetracks from './Tracksstatus';\n\n\n\nlet trackdetailId\nexport default function ManagepageTrack() {\n\n    const [pageSelection, setPageSelection] = useState(1)\n\n    const showmanagetrack=()=>{\n        setPageSelection(1)\n    }\n\n   const showaddtrack =()=>{\n       setPageSelection(2)\n   } \n\n   const showedittrack =(receiveId)=>{\n    trackdetailId = receiveId\n    setPageSelection(3)\n} \n\n    return (\n        <>\n\n        {\n            pageSelection === 1?\n            <Managetracks showaddtrack={showaddtrack} showedittrack={showedittrack}/>\n            :\n            pageSelection === 2?\n            <Addtrack goBack={showmanagetrack}/>\n            :\n            pageSelection === 3?\n            <Edittrack trackdetailId={trackdetailId} goBack={showmanagetrack}/>\n            :null\n           \n        }\n        \n           \n        </>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport Logo from \"../../assets/choria.svg\";\nimport FormMain from \"../dashboard/produce/projectForm/FormMain\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport \"../dashboard/produce/project/project.scss\";\nimport \"./armHome.scss\"\nimport { docServerUrl } from '../../restservice'\nimport \"../../assets/theme/theme.css\";\n\nimport ShowArmUsers from \"./user/showUsers\";\nimport Setprojectpage from \"./projects/Setprojectpage\";\nimport FormProjectRM from \"../myprofile/FormProfileRM\";\nimport { useNavigate } from \"react-router\";\nimport MessageManager from \"../messages/messageManager\";\nimport Managetracks from \"./Tracksstatus\";\nimport ManagepageTrack from \"./managetrack\";\n\nReactModal.setAppElement(\"#root\");\n\n\nexport default function ArmHome() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [isProfile, setIsProfile] = useState(false);\n\n  const [tabPage, setTabPage] = useState(1)\n\n  const [getName, setGetName] = useState(\"\")\n\n  const navigate = useNavigate();\n  const docServer = docServerUrl\n  let userPhoto = JSON.parse(localStorage.getItem('photo'));\n  let getDoc = userPhoto?.docpath;\n  let getDocLink = userPhoto?.urllink;\n\n  let userData;\n\n  useEffect(() => {\n    if (localStorage.getItem(\"userData\") === null) {\n      localStorage.clear();\n      navigate(\"/\");\n    }\n    else {\n      userData = JSON.parse(localStorage.getItem('userData'));\n      setGetName(userData.name)\n    }\n  }, [])\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  function openProfile() {\n    setIsProfile(!isProfile);\n  }\n\n  return (\n    // <!-- [WRAPPER] -->\n    <div id=\"wrapper\">\n      {/* <!-- [MAIN CONTAINER] ------------ --> */}\n\n      <main className=\"main-container\">\n        {/* <!-- [SIDEBAR] ------------ --> */}\n        <aside className=\"sidebar\">\n          <div className=\"sidebar__wrap\">\n            <div className=\"sidebar__logo\">\n              <a href=\"/userHome\" className=\"sidebar__logo--img\">\n                <img src={Logo} alt=\"Logo main\" />\n              </a>\n\n              {/* <button className=\"btn-primary\">Start Jam</button> */}\n            </div>\n\n            <div className=\"sidebar__list\">\n              <ul>\n                <li>\n                  <div onClick={() => { setTabPage(1) }} className={tabPage === 1 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-user-group\"}></use>\n                    </svg>\n                    All Projects\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(2); }} className={tabPage === 2 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    User\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(4); }} className={tabPage === 4 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-folder\"}></use>\n                    </svg>\n                    Tracks\n                  </div>\n                </li>\n\n                <li>\n                  <div onClick={() => { setTabPage(3); }} className={tabPage === 3 ? \"active-link\" : \"\"}>\n                    <svg>\n                      <use href={sprite + \"#icon-chat\"}></use>\n                    </svg>\n                    Chats\n                  </div>\n                </li>\n              </ul>\n\n              <div className=\"sidebar__user\" onClick={openProfile}>\n                <div className=\"sidebar__user--img\">\n                  {getDoc !== null ?\n                    (\n                      <img src={docServer + getDoc} alt=\"User\" />\n                    ) : (\n                      <img src={getDocLink} alt=\"ARM\" />\n                    )\n                  }\n                </div>\n                <div className=\"sidebar__user--text\">\n                  <h3>{getName}</h3>\n                  <p>ARM Profile</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n\n        {/* <!-- [CONTENT BOX] --> */}\n\n        <div className={\"con page-margin\" + (tabPage === 3 ? \" hide\" : \"\")} >\n          {tabPage === 1 ?\n            (<Setprojectpage />)\n            :\n            tabPage === 2 ?\n              (<ShowArmUsers />)\n              :\n              tabPage === 4 ?\n                (<ManagepageTrack />)\n                : null\n          }\n        </div>\n        <div className={\"con page-margin\" + (tabPage !== 3 ? \" hide\" : \"\")}  >\n          <MessageManager />\n        </div>\n      </main>\n\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormMain />\n        {/* <button onClick={toggleModal}>Close modal</button> */}\n      </ReactModal>\n\n      <ReactModal\n        isOpen={isProfile}\n        onRequestClose={openProfile}\n        contentLabel=\"My dialog\"\n        className=\"Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        <FormProjectRM />\n      </ReactModal>\n\n    </div>\n  );\n}\n"],"sourceRoot":""}