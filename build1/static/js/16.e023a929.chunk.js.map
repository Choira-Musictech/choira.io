{"version":3,"sources":["pages/admin/layout/AdminDashboardLayout.jsx","components/adminStudio/SlotBooking.jsx","components/adminStudio/AllStudioDetail.jsx","pages/admin/studios/BookingPages.jsx"],"names":["AdminDashboardLayout","navigate","useNavigate","tabCount","setTabCount","useState","useEffect","token","localStorage","getItem","console","log","undefined","isSignin","_jsx","_Fragment","children","_jsxs","className","style","wrapper","WebDashboard2","studioMainScreen","studioHeader","type","placeholder","IoSearch","notifyIcon","GoDotFill","FaRegBell","MdOutlineSettings","AllStudioPageDetailsPage","BookingPages","SlotBooking","_ref","_data$state","setSelectTab","data","useLocation","navCount","state","selectedAmenities","setSelectedAmenities","selectedDate","setSelectedDate","iframeCode","setIframeCode","hasContent","setHasContent","addNewStudioTitle","addNewStudioPage","height","addNewStudioinputBox","htmlFor","id","StudioFooter","backOnclick","AllStudioDetail","currentPage","setCurrentPage","products","setProducts","currentTableData","useMemo","firstPageIndex","lastPageIndex","slice","selectedStatus","setSelectedStatus","activityStatus","setActivityStatus","studioTabelDiv","studiotabelHead","map","display","alignItems","studioImage","studioPhotos","src","alt","onError","e","target","imageNotFound","fullName","pricePerHour","address","totalRooms","tableActionbtn","checked","_id","onChange","handleSwitchChange","studioId","prevStatus","GrShare","cursor","MdEdit","color","RiDeleteBin5Fill","tabelpaginationDiv","Pagination","totalCount","length","pageSize","onPageChange","page","bookingPageCount","setBookingPageCount","handleChange","async","productId","event","updateddata","prd","bookingStatus","parseInt","value","bookingPageApi","updateStatus","status","error","getStatusColor","idToUse","musicProduction","then","response","concat","catch","limit","active","bookingType","category","getBookings","allStudioDetailsPage","BookingActionBar","StudioBookingDetail","MusicProduction","MixMaster","Artist"],"mappings":"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","file":"static/js/16.e023a929.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\n// import \"../studios/studios.css\";\nimport style from \"../studios/studio.module.css\";\nimport { IoSearch } from \"react-icons/io5\";\n\nimport { FaRegBell } from \"react-icons/fa6\";\nimport { MdCalendarMonth, MdOutlineSettings } from \"react-icons/md\";\nimport { GoDotFill } from \"react-icons/go\";\n// import data from \"../studios/mock-data.json\";\nimport AllStudioDetail from \"../../../components/adminStudio/AllStudioDetail\";\n\nimport AddNewStudio from \"../../../components/adminStudio/AddNewStudio\";\n\nimport SlotBooking from \"../../../components/adminStudio/SlotBooking\";\nimport WebDashboard2 from \"../../produce/WebDashBoard2\";\nimport AllStudioPageDetailsPage from \"../studios/AllStudioPageDetailsPage\";\nimport BookingPages from \"../studios/BookingPages\";\nimport AddNewProduction from \"../../../components/adminStudio/appsAndMore/AddNewProduction\";\nimport AddNewServices from \"../../../components/adminStudio/appsAndMore/AddNewServices\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction AdminDashboardLayout() {\n  const navigate = useNavigate();\n  const [tabCount, setTabCount] = useState(3);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token from localStorage:\", token);\n    if (token === null || token === undefined) {\n      const isSignin = localStorage.getItem(\"isSignin\");\n      if (isSignin) {\n        navigate(\"/landingpage\");\n      } else {\n        navigate(\"/signin\");\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <div className={style.wrapper}>\n        <WebDashboard2 tabCount={tabCount} setTabCount={setTabCount} />\n        <div className={style.studioMainScreen}>\n          <div className={style.studioHeader}>\n            <div>\n              <input type=\"text\" placeholder=\"search\" />\n            </div>\n            <div>\n              <IoSearch />\n            </div>\n            <div>\n              <div className={style.notifyIcon}>\n                <GoDotFill />\n              </div>\n              <FaRegBell />\n            </div>\n            <div>\n              <MdOutlineSettings />\n            </div>\n          </div>\n          {tabCount === 1 && \"\"}\n          {tabCount === 2 && \"\"}\n\n          {tabCount === 3 ? (\n            <AllStudioPageDetailsPage />\n          ) : tabCount === 4 ? (\n            <BookingPages />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminDashboardLayout;\n","import React, { useState } from \"react\";\nimport { MdAddAPhoto, MdOutlineSettings } from \"react-icons/md\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport upload from \"../../assets/img/upload.png\";\nimport style from \"../../pages/admin/studios/studio.module.css\";\n\nimport {\n  FaCheckDouble,\n  FaFilter,\n  FaRegBell,\n  FaRegClock,\n  FaShare,\n} from \"react-icons/fa6\";\nimport StudioFooter from \"./StudioFooter\";\nimport WebDashboard2 from \"../../pages/produce/WebDashBoard2\";\nimport { IoSearch } from \"react-icons/io5\";\nimport { GoDotFill } from \"react-icons/go\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nfunction SlotBooking({ setSelectTab }) {\n  const data = useLocation();\n  const [tabCount, setTabCount] = useState();\n  const navCount = data?.state?.navCount;\n  const days = [\n    { id: \"Monday\", label: \"Monday\" },\n    { id: \"Tuesday\", label: \"Tuesday\" },\n    { id: \"wednesday\", label: \"wednesday\" },\n    { id: \"thursday\", label: \"thursday\" },\n    { id: \"friday\", label: \"friday\" },\n    { id: \"Saturday\", label: \"Saturday\" },\n    { id: \"sunday\", label: \"sunday\" },\n  ];\n  const amenitiesList = [\n    { id: \"wifi\", label: \"Wifi\" },\n    { id: \"ac\", label: \"AC\" },\n    { id: \"dj\", label: \"DJ\" },\n    { id: \"piano\", label: \"Piano\" },\n    { id: \"drum\", label: \"Drum\" },\n    { id: \"carparking\", label: \"Car Parking\" },\n    { id: \"banjo\", label: \"Banjo\" },\n  ];\n\n  const [selectedAmenities, setSelectedAmenities] = useState([]);\n  const [selectedDate, setSelectedDate] = useState([]);\n\n  const handleCheckboxChange = (id) => {\n    const updatedAmenities = selectedAmenities.includes(id)\n      ? selectedAmenities.filter((amenity) => amenity !== id)\n      : [...selectedAmenities, id];\n\n    setSelectedAmenities(updatedAmenities);\n    console.log(selectedAmenities);\n  };\n  const handledaysCheckboxChange = (id) => {\n    const updaeddays = selectedDate.includes(id)\n      ? selectedDate.filter((day) => day !== id)\n      : [...selectedDate, id];\n\n    setSelectedDate(updaeddays);\n    console.log(selectedDate);\n  };\n  const [iframeCode, setIframeCode] = useState(\"\");\n  const [hasContent, setHasContent] = useState(false);\n\n  const handleIframeCodeChange = (e) => {\n    const inputCode = e.target.value;\n\n    // Update the state with the user-entered iframe code\n    setIframeCode(inputCode);\n\n    // Update hasContent state based on whether there is content in the textarea\n    setHasContent(inputCode.trim() !== \"\");\n  };\n  const navigate = useNavigate();\n  const backOnclick = () => {\n    navigate(\"/adminDashboard\");\n  };\n  return (\n    <>\n      <div className={style.wrapper}>\n        <WebDashboard2\n          navCount={navCount}\n          tabCount={tabCount}\n          setTabCount={setTabCount}\n        />\n        <div className={style.studioMainScreen}>\n          <div className={style.studioHeader}>\n            <div>\n              <input type=\"text\" placeholder=\"search\" />\n            </div>\n            <div>\n              <IoSearch />\n            </div>\n            <div>\n              <div className={style.notifyIcon}>\n                <GoDotFill />\n              </div>\n              <FaRegBell />\n            </div>\n            <div>\n              <MdOutlineSettings />\n            </div>\n          </div>\n          <div className={style.addNewStudioTitle}>Slot Booking</div>\n          <div className={style.addNewStudioPage}>\n            <div style={{ height: \"80%\" }}>\n              <div>\n                <div className={style.addNewStudioinputBox}>\n                  <label htmlFor=\"UserName\">User Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"UserName\"\n                    placeholder=\"Enter User Name\"\n                  />\n                </div>\n\n                <div className={style.addNewStudioinputBox}>\n                  <label htmlFor=\"Mobilenumber\">Mobile number</label>\n                  <input\n                    type=\"text\"\n                    id=\"Mobilenumber\"\n                    placeholder=\"Enter Mobile number\"\n                  />\n                </div>\n\n                <div className={style.addNewStudioinputBox}>\n                  <label htmlFor=\"Email\">Email</label>\n                  <input type=\"email\" id=\"Email\" placeholder=\"Enter Email id\" />\n                </div>\n\n                <div className={style.addNewStudioinputBox}>\n                  <label>Booking Hours</label>\n\n                  <select>\n                    <option>Choose Booking Hours</option>\n                    <option>1 Hour</option>\n                    <option>2 Hour</option>\n                    <option>3 Hour</option>\n                    <option>4 Hour</option>\n                    <option>5 Hour</option>\n                  </select>\n                </div>\n              </div>\n              {/* secod side  */}\n              <div>\n                <div className={style.addNewStudioinputBox}>\n                  <label>Studio</label>\n\n                  <select>\n                    <option>Select Studio</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </select>\n                </div>\n                <div className={style.addNewStudioinputBox}>\n                  <label>Room</label>\n\n                  <select>\n                    <option>Select Room</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </select>\n                </div>\n\n                <div className={style.addNewStudioinputBox}>\n                  <label htmlFor=\"Date\">Date</label>\n                  <input type=\"date\" id=\"RoomArea\" placeholder=\"Enter Date\" />\n                </div>\n\n                <div className={style.addNewStudioinputBox}>\n                  <label htmlFor=\"TimeSlot\">Time Slot</label>\n                  <input\n                    type=\"time\"\n                    id=\"TimeSlot\"\n                    placeholder=\"Enter Time Slot\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <StudioFooter setSelectTab={setSelectTab} backOnclick={backOnclick} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SlotBooking;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport style from \"../../pages/admin/studios/studio.module.css\";\n\nimport { GrShare } from \"react-icons/gr\";\nimport { MdEdit } from \"react-icons/md\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\n\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { FaFilter, FaShare, FaTableCellsLarge } from \"react-icons/fa6\";\n\n// import Button from \"../../../pages/admin/layout/Button\";\nimport Switch from \"../../pages/admin/layout/Switch\";\nimport Pagination from \"../../pages/admin/studios/Pagination\";\nimport { LuFilePlus } from \"react-icons/lu\";\nimport imageNotFound from \"../../assets/imagesNotFound.png\";\nimport axios from \"axios\";\nlet PageSize = 10;\n\nfunction AllStudioDetail() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    console.log(products);\n  }, [products]);\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return products.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, products]);\n\n  const [selectedStatus, setSelectedStatus] = useState({});\n\n  const handleChange = (productId, event) => {\n    setSelectedStatus((prevStatus) => ({\n      ...prevStatus,\n      [productId]: event.target.value,\n    }));\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"Cancelled\":\n        return \"#FFDDDD\";\n      case \"Pending\":\n        return \"#CAE2FF\";\n      case \"Complete\":\n        return \"#DDFFF3\";\n      case \"Active\":\n        return \"#FFF3CA\";\n      default:\n        return \"\";\n    }\n  };\n  const [activityStatus, setActivityStatus] = useState({});\n  const handleSwitchChange = (studioId) => {\n    setActivityStatus((prevStatus) => ({\n      ...prevStatus,\n      [studioId]: !prevStatus[studioId], // Toggle the switch state\n    }));\n  };\n  return (\n    <>\n      <div className={style.studioTabelDiv}>\n        <div>\n          <table>\n            <thead className={style.studiotabelHead}>\n              <tr>\n                <th>Studio</th>\n                <th>Price</th>\n                <th>Location</th>\n                <th>No. of Rooms</th>\n                <th>Activity Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {currentTableData.map((products) => {\n                return (\n                  <tr key={products._id}>\n                    <td style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <div className={style.studioImage}>\n                        {products.studioPhotos ? (\n                          <img\n                            src={products.studioPhotos}\n                            alt=\"\"\n                            onError={(e) => {\n                              e.target.src = imageNotFound;\n                            }}\n                          />\n                        ) : (\n                          <img src={imageNotFound} alt=\"\" />\n                        )}\n                      </div>\n                      &nbsp;&nbsp;{products.fullName}\n                    </td>\n                    <td>\n                      ₹{products.pricePerHour}\n                      <br />\n                      <small>per hour</small>\n                    </td>\n                    <td>\n                      {products.address}\n                      <br />\n                      <small> {products.state}</small>\n                    </td>\n                    <td>{products.totalRooms}</td>\n                    <td className={style.tableActionbtn}>\n                      <div>\n                        <label className=\"switch\">\n                          <input\n                            type=\"checkbox\"\n                            checked={activityStatus[products._id] || false}\n                            onChange={() => handleSwitchChange(products._id)}\n                          />\n                          <span className=\"slider\"></span>\n                        </label>\n                      </div>\n                      <div>\n                        <GrShare style={{ cursor: \"pointer\" }} />\n                        <MdEdit\n                          style={{ color: \"#ffc701\", cursor: \"pointer\" }}\n                        />\n                        <RiDeleteBin5Fill\n                          style={{ color: \"red\", cursor: \"pointer\" }}\n                        />\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className={style.tabelpaginationDiv}>\n        <Pagination\n          className=\"pagination-bar\"\n          currentPage={currentPage}\n          totalCount={products.length}\n          pageSize={PageSize}\n          onPageChange={(page) => setCurrentPage(page)}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default AllStudioDetail;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Alert } from \"antd\";\n// import \"../studios/studios.css\";\nimport style from \"../studios/studio.module.css\";\n\nimport StudioBookingDetail from \"../../../components/adminStudio/booking/StudioBookingDetail\";\nimport MusicProduction from \"../../../components/adminStudio/booking/MusicProduction\";\nimport MixMaster from \"../../../components/adminStudio/booking/MixMaster\";\nimport Artist from \"../../../components/adminStudio/booking/Artist\";\nimport BookingActionBar from \"../../../components/adminStudio/booking/BookingActionBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport WebDashboard2 from \"../../produce/WebDashBoard2\";\nimport bookingPageApi from \"../../../services/bookingPageApi\";\n\nfunction BookingPages() {\n  const [bookingPageCount, setBookingPageCount] = useState(\"c1\");\n  const [products, setProducts] = useState([]);\n\n  const navigate = useNavigate();\n  const gotoSignin = () => {\n    navigate(\"/signin\");\n  };\n\n  const handleChange = async (productId, event) => {\n    /// api\n    try {\n      const updateddata = products.map((prd) => {\n        if (prd._id === productId) {\n          prd.bookingStatus = parseInt(event.target.value);\n          console.log(\" prd.status\", prd.bookingStatus);\n        }\n        return prd;\n      });\n      const response = await bookingPageApi.updateStatus(\n        productId,\n        event.target.value\n      );\n\n      if (response.status) {\n        // Assuming response.data is an array of updated products\n        // setProducts(response.data);\n\n        setProducts(updateddata);\n      }\n    } catch (error) {\n      console.error(\"Error updating status:\", error);\n    }\n\n    // console.log(updateddata);\n  };\n\n  const getStatusColor = (status) => {\n    status = parseInt(status);\n    switch (status) {\n      case 2:\n        return \"#FFDDDD\";\n      // case \"Pending\":\n      //   return \"#CAE2FF\";\n      case 1:\n        return \"#DDFFF3\";\n      case 0:\n        return \"#FFF3CA\";\n      default:\n        return \"\";\n    }\n  };\n\n  // {-------  this code is end of  update color of selected  action ---------}\n  useEffect(() => {\n    console.log(\"bookingPageCount-----\", bookingPageCount);\n    setProducts([]);\n\n    if (bookingPageCount === \"c2\" || bookingPageCount === \"c3\") {\n      // Corrected the id assignments\n      const idToUse = bookingPageCount === \"c2\" ? \"c2\" : \"c3\";\n\n      bookingPageApi\n        .musicProduction(\"100\", idToUse, 1)\n        .then((response) => {\n          console.log(\n            `====================> response ${bookingPageCount} `,\n            response\n          );\n          if (response.data) {\n            setProducts(response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching studios:\", error);\n        });\n    } else if (bookingPageCount === \"c1\") {\n      const limit = 10;\n      const active = 1;\n      const bookingType = 1;\n      const category = bookingPageCount;\n      // const type = bookingPageCount;\n      bookingPageApi\n        .getBookings(limit, active, bookingType, category)\n        .then((response) => {\n          console.log(\"====================> response C1\", response);\n          if (response.data) {\n            setProducts(response.data);\n            console.log(\"pagekaDetail\", response);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching studios:\", error);\n        });\n    }\n  }, [bookingPageCount]);\n  return (\n    <>\n      <div className={style.allStudioDetailsPage}>\n        <BookingActionBar\n          bookingPageCount={bookingPageCount}\n          setBookingPageCount={setBookingPageCount}\n        />\n        {bookingPageCount === \"c1\" ? (\n          <StudioBookingDetail\n            products={products}\n            setProducts={setProducts}\n            handleChange={handleChange}\n            getStatusColor={getStatusColor}\n          />\n        ) : // <AllStudioDetail />\n        bookingPageCount === \"c2\" ? (\n          <MusicProduction\n            products={products}\n            setProducts={setProducts}\n            handleChange={handleChange}\n            getStatusColor={getStatusColor}\n          />\n        ) : bookingPageCount === \"c3\" ? (\n          <MixMaster\n            products={products}\n            setProducts={setProducts}\n            handleChange={handleChange}\n            getStatusColor={getStatusColor}\n          />\n        ) : (\n          <Artist />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default BookingPages;\n"],"sourceRoot":""}