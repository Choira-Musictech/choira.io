{"ast":null,"code":"var _jsxFileName = \"E:\\\\ui\\\\src\\\\pages\\\\customerExplore\\\\showData.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './showExploreData.scss';\nimport featureBox from \"../../assets/explore/img1.png\";\nimport iconBox from \"../../assets/explore/playButton.png\";\nimport iconPauseBox from \"../../assets/explore/pause.png\";\nimport trackImage from \"../../assets/explore/trackImage.png\";\nimport track from \"../../assets/explore/tracks.png\";\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\nimport { httpUrl, docServerUrl } from '../../restservice';\nimport Waveform from \"./Waveform\";\n// import WaveSurfer from \"wavesurfer.js\";\nimport \"./woveStyles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar audio = null;\nexport default function ShowExploreData(props) {\n  _s();\n  const [selectedFilter, setSelectedFilter] = useState(\"All\");\n  const [genreTable, setGenreTable] = useState([]);\n  const [trackTable, setTrackTable] = useState([]);\n  const [trackTableAll, setTrackTableAll] = useState([]);\n  const [featuredTrackTable, setFeaturedTrackTable] = useState([]);\n  const [composername, setcomposer] = useState([]);\n  const [featuredTrackTableAll, setFeaturedTrackTableAll] = useState([]);\n  const [openOverLay, setOpenOverLay] = useState(false);\n  const [openSoundPlay, setSoundPlay] = useState(false);\n  const [playingAudio, setPlayingAudio] = useState(0);\n  const [selectedPrice, setSelectedPrice] = useState(0);\n  const [selectedTrack, setSelectedTrack] = useState(0);\n  const [selectedLicenseType, setSelectedLicenseType] = useState('');\n  const [selectednametrack, setselectedname] = useState('');\n\n  // For triggaring event\n  const [selectedPlayButton, setSelectedPlayButton] = useState(\"\");\n  const docServer = docServerUrl;\n  const setSelectedPage = param => {\n    setSelectedFilter(param);\n    if (param === \"All\") {\n      setTrackTable(trackTableAll);\n      setFeaturedTrackTable(featuredTrackTableAll);\n    } else {\n      setTrackTable(trackTableAll.filter(entry => entry.genre === param));\n      setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.genre === param));\n    }\n    stopSound();\n  };\n  useEffect(() => {\n    axios.get(httpUrl + 'genre').then(result => {\n      let responseJson = result.data;\n      setGenreTable(responseJson);\n    });\n    // axios.get(httpUrl +  'soundTrack?status=PUBLISHED&track=NON_FEATURED')\n    axios.get(httpUrl + 'soundTrack').then(result => {\n      let responseJson = result.data;\n      if (responseJson) {\n        setTrackTable(responseJson);\n        setTrackTableAll(responseJson);\n        setcomposer(responseJson);\n        setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"));\n        setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"));\n        console.log(responseJson);\n      }\n    });\n    // httpUrl + 'soundTrack?status=PUBLISHED&track=NON_FEATURED\n    axios.get(httpUrl + 'soundTrack?status=PUBLISHED').then(result => {\n      let responseJson = result.data;\n      setTrackTable(responseJson);\n      setTrackTableAll(responseJson);\n      setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"));\n      setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"));\n      console.log(\"track\");\n      console.log(result.data);\n    });\n    console.log(\"ShowExploreData:==\");\n  }, []);\n  const toTitleCase = str => {\n    if (str) {\n      let convertedStr = str.replaceAll(\"_\", \" \");\n      return convertedStr.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n    } else {\n      return \"\";\n    }\n  };\n  const lastpagego = () => {\n    setOpenOverLay(false);\n  };\n  const getTheSong = selectedEntry => {\n    setSelectedPrice(selectedEntry.price);\n    setSelectedTrack(selectedEntry.id);\n    setSelectedLicenseType(selectedEntry.tracktype);\n    setselectedname(selectedEntry.name);\n    setOpenOverLay(true);\n    stopSound();\n  };\n  const closeTheSong = () => {\n    setOpenOverLay(false);\n    props.setSelectedPrice(selectedPrice);\n    props.setSelectedTrackId(selectedTrack);\n    props.setSelectedLicense(selectedLicenseType);\n    props.changeState(2);\n  };\n  const onlyCloseTheSong = () => {\n    setOpenOverLay(false);\n  };\n  const playSound = (incomingPath, receivedId) => {\n    console.log(incomingPath);\n    if (openSoundPlay) {\n      audio.pause();\n      setSoundPlay(false);\n    }\n    if (playingAudio !== receivedId) {\n      if (incomingPath) {\n        audio = new Audio(docServerUrl + incomingPath);\n        audio.play();\n        setSoundPlay(true);\n      }\n      setPlayingAudio(receivedId);\n    } else {\n      setPlayingAudio(0);\n    }\n  };\n  const stopSound = _ => {\n    if (audio && openSoundPlay) {\n      audio.pause();\n      setSoundPlay(false);\n    }\n  };\n  const searchBox = value => {\n    console.log(value);\n    if (value === \"\") {\n      console.log(\"object1\");\n      setTrackTable(trackTableAll);\n      setFeaturedTrackTable(featuredTrackTableAll);\n      setcomposer(composername);\n    } else {\n      console.log(\"object\");\n      setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1));\n      setTrackTable(trackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1 || entry.genre.toLowerCase().search(value.toLowerCase()) !== -1 || entry.composer.toLowerCase().search(value.toLowerCase()) !== -1));\n    }\n    console.log(trackTableAll);\n    console.log(trackTable);\n    console.log(\"composer\");\n    console.log(composername);\n  };\n  const [username, userInput] = useInput({\n    type: \"text\"\n  }, searchBox);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexSet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__heading upperSectionShowData\",\n      onClick: () => {\n        searchBox();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          children: /*#__PURE__*/_jsxDEV(\"use\", {\n            href: sprite + \"#icon-music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), \"Explore\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBox\",\n      children: userInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exploreBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genericBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genericItemBox\" + (selectedFilter === 'All' ? \" activeGeneric\" : \"\"),\n          onClick: () => {\n            setSelectedPage(\"All\");\n          },\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), genreTable.map(entry => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genericItemBox\" + (selectedFilter === entry.genre ? \" activeGeneric\" : \"\"),\n            onClick: () => {\n              setSelectedPage(entry.genre);\n            },\n            children: toTitleCase(entry.genre)\n          }, entry.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainExploreBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featureBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"Featured songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"songShow\",\n            children: featuredTrackTable.map(entry => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"featureSong\",\n                children: [entry.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: docServer + entry.photo.docpath,\n                  alt: \"img 1\",\n                  onClick: () => {\n                    getTheSong(entry);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: featureBox,\n                  alt: \"img 1\",\n                  onClick: () => {\n                    getTheSong(entry);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detailBox\",\n                  onClick: () => playSound(entry.track.docpath, entry.id),\n                  children: [playingAudio === entry.id ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconPauseBox,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconBox,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"songName\",\n                    children: entry.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trackSong\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showSongs\",\n            children: trackTable ? trackTable.map(entry => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trackShow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buyOutbutton\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      getTheSong(entry);\n                    },\n                    style: {\n                      backgroundColor: \"#FFC701\",\n                      color: 'white'\n                    },\n                    children: \"Get Song\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trackDetail\",\n                  onClick: stopSound,\n                  children: /*#__PURE__*/_jsxDEV(Waveform, {\n                    url1: docServer + entry.photo.docpath,\n                    url: docServer + entry.track.docpath,\n                    tracks: entry,\n                    id: entry.id,\n                    setSelectedPlayButton: setSelectedPlayButton,\n                    selectedPlayButton: selectedPlayButton\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 41\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this);\n            }) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), openOverLay && /*#__PURE__*/_jsxDEV(ExploreOverlay, {\n      goback: lastpagego,\n      changeState: closeTheSong,\n      selectednametrack: selectednametrack,\n      selectedTrack: selectedTrack,\n      onlyCloseTheSong: onlyCloseTheSong,\n      selectedPrice: selectedPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowExploreData, \"8l+3tJWGp5HHiLRtOXqo8YQaa/g=\", false, function () {\n  return [useInput];\n});\n_c = ShowExploreData;\nfunction useInput({\n  type\n}, keyFunction) {\n  _s2();\n  const [value, setValue] = useState(\"\");\n  const input = /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n      keyFunction(e.target.value);\n    },\n    type: type,\n    placeholder: \"Search by artist, songs or genre...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 19\n  }, this);\n  return [value, input];\n}\n_s2(useInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\nvar _c;\n$RefreshReg$(_c, \"ShowExploreData\");","map":{"version":3,"names":["React","useEffect","useRef","useState","sprite","featureBox","iconBox","iconPauseBox","trackImage","track","axios","ExploreOverlay","httpUrl","docServerUrl","Waveform","jsxDEV","_jsxDEV","audio","ShowExploreData","props","_s","selectedFilter","setSelectedFilter","genreTable","setGenreTable","trackTable","setTrackTable","trackTableAll","setTrackTableAll","featuredTrackTable","setFeaturedTrackTable","composername","setcomposer","featuredTrackTableAll","setFeaturedTrackTableAll","openOverLay","setOpenOverLay","openSoundPlay","setSoundPlay","playingAudio","setPlayingAudio","selectedPrice","setSelectedPrice","selectedTrack","setSelectedTrack","selectedLicenseType","setSelectedLicenseType","selectednametrack","setselectedname","selectedPlayButton","setSelectedPlayButton","docServer","setSelectedPage","param","filter","entry","genre","stopSound","get","then","result","responseJson","data","tracktype","console","log","toTitleCase","str","convertedStr","replaceAll","replace","txt","charAt","toUpperCase","substr","toLowerCase","lastpagego","getTheSong","selectedEntry","price","id","name","closeTheSong","setSelectedTrackId","setSelectedLicense","changeState","onlyCloseTheSong","playSound","incomingPath","receivedId","pause","Audio","play","_","searchBox","value","search","composer","username","userInput","useInput","type","className","children","onClick","href","fileName","_jsxFileName","lineNumber","columnNumber","map","photo","src","docpath","alt","style","backgroundColor","color","url1","url","tracks","goback","_c","keyFunction","_s2","setValue","input","onChange","e","target","placeholder","$RefreshReg$"],"sources":["E:/ui/src/pages/customerExplore/showData.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport sprite from \"../../assets/icons/sprite.svg\";\nimport './showExploreData.scss'\nimport featureBox from \"../../assets/explore/img1.png\"\nimport iconBox from \"../../assets/explore/playButton.png\"\nimport iconPauseBox from \"../../assets/explore/pause.png\"\nimport trackImage from \"../../assets/explore/trackImage.png\"\nimport track from \"../../assets/explore/tracks.png\"\nimport axios from 'axios';\nimport ExploreOverlay from './exploreOverlay';\nimport { httpUrl, docServerUrl } from '../../restservice'\nimport Waveform from \"./Waveform\";\n// import WaveSurfer from \"wavesurfer.js\";\nimport \"./woveStyles.scss\"\n\nvar audio = null\n\nexport default function ShowExploreData(props) {\n\n    const [selectedFilter, setSelectedFilter] = useState(\"All\")\n    const [genreTable, setGenreTable] = useState([])\n    const [trackTable, setTrackTable] = useState([])\n    const [trackTableAll, setTrackTableAll] = useState([])\n    const [featuredTrackTable, setFeaturedTrackTable] = useState([])\n    const [composername, setcomposer] = useState([])\n    const [featuredTrackTableAll, setFeaturedTrackTableAll] = useState([])\n    const [openOverLay, setOpenOverLay] = useState(false)\n    const [openSoundPlay, setSoundPlay] = useState(false)\n    const [playingAudio, setPlayingAudio] = useState(0)\n    const [selectedPrice, setSelectedPrice] = useState(0)\n    const [selectedTrack, setSelectedTrack] = useState(0)\n    const [selectedLicenseType, setSelectedLicenseType] = useState('')\n    const [selectednametrack, setselectedname] = useState('')\n\n    // For triggaring event\n    const [selectedPlayButton, setSelectedPlayButton] = useState(\"\")\n\n    const docServer = docServerUrl\n\n    const setSelectedPage = param => {\n        setSelectedFilter(param)\n        if (param === \"All\") {\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n        }\n        else {\n            setTrackTable(trackTableAll.filter(entry => entry.genre === param))\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.genre === param))\n        }\n        stopSound()\n    }\n\n    useEffect(() => {\n        axios.get(httpUrl +  'genre')\n            .then((result) => {\n                let responseJson = result.data;\n                setGenreTable(responseJson)\n            });\n        // axios.get(httpUrl +  'soundTrack?status=PUBLISHED&track=NON_FEATURED')\n        axios.get(httpUrl +  'soundTrack')\n            .then((result) => {\n                let responseJson = result.data;\n                if(responseJson){\n                    setTrackTable(responseJson)\n                    setTrackTableAll(responseJson)\n                    setcomposer(responseJson)\n                    setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                    setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                    console.log(responseJson)\n                }\n            });\n        // httpUrl + 'soundTrack?status=PUBLISHED&track=NON_FEATURED\n        axios.get(httpUrl +  'soundTrack?status=PUBLISHED')\n            .then((result) => {\n                let responseJson = result.data;\n                setTrackTable(responseJson)\n                setTrackTableAll(responseJson)\n                setFeaturedTrackTable(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                setFeaturedTrackTableAll(responseJson.filter(entry => entry.tracktype === \"FEATURED\"))\n                console.log(\"track\")\n                console.log(result.data)\n            });\n        console.log(\"ShowExploreData:==\")\n    }, [])\n\n    const toTitleCase = (str) => {\n        if (str) {\n            let convertedStr = str.replaceAll(\"_\", \" \");\n            return convertedStr.replace(\n                /\\w\\S*/g,\n                function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }\n            );\n        }\n        else {\n            return \"\"\n        }\n    }\n\n    const lastpagego=()=>{\n        setOpenOverLay(false)\n    }\n    const getTheSong = (selectedEntry) => {\n        setSelectedPrice(selectedEntry.price)\n        setSelectedTrack(selectedEntry.id)\n        setSelectedLicenseType(selectedEntry.tracktype)\n        setselectedname(selectedEntry.name)\n        setOpenOverLay(true)\n        stopSound()\n    }\n\n    const closeTheSong = () => {\n        setOpenOverLay(false)\n        props.setSelectedPrice(selectedPrice)\n        props.setSelectedTrackId(selectedTrack)\n        props.setSelectedLicense(selectedLicenseType)\n        props.changeState(2)\n    }\n\n    const onlyCloseTheSong = () => {\n        setOpenOverLay(false)\n    }\n\n    const playSound = (incomingPath, receivedId) => {\n        console.log(incomingPath)\n        if (openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n        if (playingAudio !== receivedId) {\n            if (incomingPath) {\n                audio = new Audio(docServerUrl + incomingPath);\n                audio.play();\n                setSoundPlay(true)\n            }\n            setPlayingAudio(receivedId)\n        }\n        else {\n            setPlayingAudio(0)\n        }\n    }\n\n    const stopSound = _ => {\n\n        if (audio && openSoundPlay) {\n            audio.pause();\n            setSoundPlay(false)\n        }\n    }\n\n    const searchBox = (value) => {\n        console.log(value)\n\n        if (value === \"\") {\n            console.log(\"object1\")\n            setTrackTable(trackTableAll)\n            setFeaturedTrackTable(featuredTrackTableAll)\n            setcomposer(composername)\n        }\n        else {\n            console.log(\"object\")\n            setFeaturedTrackTable(featuredTrackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1))\n\n            setTrackTable(trackTableAll.filter(entry => entry.name.toLowerCase().search(value.toLowerCase()) !== -1 || entry.genre.toLowerCase().search(value.toLowerCase()) !== -1 ||\n                entry.composer.toLowerCase().search(value.toLowerCase()) !== -1))\n        }\n        console.log(trackTableAll)\n        console.log(trackTable)\n        console.log(\"composer\")\n        console.log(composername)\n    }\n\n    const [username, userInput] = useInput({ type: \"text\" }, searchBox);\n\n\n    return (\n        <div className='flexSet'>\n            <div className=\"content__heading upperSectionShowData\" onClick={() => { searchBox() }}>\n                <h1>\n                    <svg>\n                        <use href={sprite + \"#icon-music\"}></use>\n                    </svg>\n                    Explore\n                </h1>\n            </div>\n            <div className=\"searchBox\">\n                {userInput}\n            </div>\n            <div className=\"exploreBox\">\n                <div className=\"genericBox\">\n                    <div\n                        className={\"genericItemBox\" + (selectedFilter === 'All' ? \" activeGeneric\" : \"\")}\n                        onClick={() => { setSelectedPage(\"All\"); }}>\n                        All\n                    </div>\n                    {genreTable.map((entry) => {\n                        return (\n                            <div\n                                key={entry.id}\n                                className={\"genericItemBox\" + (selectedFilter === entry.genre ? \" activeGeneric\" : \"\")}\n                                onClick={() => { setSelectedPage(entry.genre); }}>\n                                {toTitleCase(entry.genre)}\n                            </div>\n                        )\n                    })}\n                    {/* <div className={\"genericItemBox\" + (selectedFilter === 'Hip Hop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Hip Hop'); }}>Hip Hop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Bollywood' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Bollywood'); }}>Bollywood</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Pop' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Pop'); }}>Pop</div>\n                    <div className={\"genericItemBox\" + (selectedFilter === 'Rock' ? \" activeGeneric\" : \"\")} onClick={() => { setSelectedPage('Rock'); }}>Rock</div> */}\n                </div>\n                <div className=\"mainExploreBox\">\n                    <div className=\"featureBox\">\n                        <div className=\"heading\">Featured songs</div>\n                        <div className=\"songShow\">\n                            {featuredTrackTable.map((entry) => {\n                                return (\n                                    <div key={entry.id} className=\"featureSong\" >\n                                        {entry.photo ?\n                                            <img src={docServer + entry.photo.docpath} alt=\"img 1\" onClick={() => { getTheSong(entry) }} />\n                                            :\n                                            <img src={featureBox} alt=\"img 1\" onClick={() => { getTheSong(entry) }} />\n                                        }\n                                        <div className=\"detailBox\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" />\n                                            }\n\n                                            <div className=\"songName\">\n                                                {entry.name}\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n\n                            {/* <div className=\"featureSong\">\n                                <img src={featureBox} alt=\"img 1\" />\n                                <div className=\"detailBox\">\n                                    <img src={iconBox} alt=\"icon\" />\n                                    <div className=\"songName\">\n                                        Black Pink\n                                    </div>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                    <div className=\"trackSong\">\n                        <div className=\"heading\">Tracks</div>\n                        <div className=\"showSongs\">\n                            {trackTable?trackTable.map((entry) => {\n                                return (\n                                    <div key={entry.id} className=\"trackShow\" >\n                                        {/* <div className=\"imageTrack\" onClick={() => playSound(entry.track.docpath, entry.id)} >\n                                    <div className=\"songTrack\" >\n                                        <div className=\"imageTrack\" onClick={() => playSound(entry.track.docpath, entry.id)} >\n                                            {entry.photo ?\n                                                <img src={docServer + entry.photo.docpath} alt=\"trackImg\" className=\"trackImg\" />\n                                                :\n                                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                            }\n                                            {playingAudio === entry.id ?\n                                                <img src={iconPauseBox} alt=\"icon\" className='upperImage' />\n                                                :\n                                                <img src={iconBox} alt=\"icon\" className='upperImage' />\n                                            }\n\n\n                                        </div>\n                                        <div className=\"trackDetail\" onClick={() => playSound(entry.track.docpath, entry.id)}>\n                                            <div className=\"trackName\">{entry.name}</div>\n                                            <div className=\"trackAuthor\">{entry.composer},{entry.genre}</div>\n                                        </div>\n                                        \n                                        <Waveform url={docServer + entry.track.docpath} tracks={entry} id={entry.id} />\n                                         <img src={track} alt=\"trackShow\" className=\"trackShow\" onClick={() => playSound(entry.track.docpath, entry.id)} /> \n                                        <div className=\"buyOutButton\" onClick={() => { getTheSong(entry) }}>\n                                            Get Song\n                                        </div> */}\n\n                                        <div className=\"buyOutbutton\">\n                                            <button onClick={() => { getTheSong(entry) }} style={{ backgroundColor: \"#FFC701\", color: 'white' }}>\n                                                Get Song\n                                            </button>\n                                        </div>\n                                        <div className=\"trackDetail\" onClick={stopSound}>\n                                            <Waveform\n                                                url1 = {docServer + entry.photo.docpath}\n                                                url={docServer + entry.track.docpath}\n                                                tracks={entry} id={entry.id}\n                                                setSelectedPlayButton={setSelectedPlayButton}\n                                                selectedPlayButton={selectedPlayButton}\n                                            />\n                                        </div>\n\n                                    </div>\n                                )\n                            }):null}\n                            {/* <div className=\"songTrack\">\n                                <img src={trackImage} alt=\"trackImg\" className=\"trackImg\" />\n                                <div className=\"trackDetail\">\n                                    <div className=\"trackName\">Come Over</div>\n                                    <div className=\"trackAuthor\">Mike Mains</div>\n                                </div>\n                                <img src={track} alt=\"trackShow\" className=\"trackShow\" />\n                                <div className=\"buyOutButton\">\n                                    Get Song\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {openOverLay && <ExploreOverlay goback={lastpagego} changeState={closeTheSong} selectednametrack={selectednametrack} selectedTrack={selectedTrack} onlyCloseTheSong={onlyCloseTheSong} selectedPrice={selectedPrice} />}\n        </div>\n    )\n}\n\nfunction useInput({ type }, keyFunction) {\n    const [value, setValue] = useState(\"\");\n    const input = <input value={value} onChange={e => { setValue(e.target.value); keyFunction(e.target.value) }} type={type} placeholder='Search by artist, songs or genre...' />;\n    return [value, input];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}