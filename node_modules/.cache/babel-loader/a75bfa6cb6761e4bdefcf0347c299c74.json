{"ast":null,"code":"import { getIp } from '../src/restservice';\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = getIp; // \"http://localhost:8090/\";\n\nconst clientId = \"6ce20f30a1604df484a7c6f819383fb5\";\n\n// const scopes = [\n//     \"user-read-currently-playing\",\n//     \"user-read-recently-played\",\n//     \"user-read-playback-state\",\n//     \"user-top-read\",\n//     \"user-modify-playback-state\",\n//     \"user-read-email\",\n//     \"user-read-private\",\n// ];\n\nconst scopes = [\"user-top-read\", \"user-read-email\", \"user-read-private\"];\nexport const getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split(\"&\").reduce((initial, item) => {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nexport const getTokenByUrl = loc => {\n  return loc.hash.substring(1).split(\"&\").reduce((initial, item) => {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","map":{"version":3,"names":["getIp","authEndpoint","redirectUri","clientId","scopes","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","getTokenByUrl","loc","loginUrl","join"],"sources":["E:/ui/src/spotify.js"],"sourcesContent":["import { getIp } from '../src/restservice';\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = getIp; // \"http://localhost:8090/\";\n\nconst clientId = \"6ce20f30a1604df484a7c6f819383fb5\"\n\n// const scopes = [\n//     \"user-read-currently-playing\",\n//     \"user-read-recently-played\",\n//     \"user-read-playback-state\",\n//     \"user-top-read\",\n//     \"user-modify-playback-state\",\n//     \"user-read-email\",\n//     \"user-read-private\",\n// ];\n\nconst scopes = [\n    \"user-top-read\",\n    \"user-read-email\",\n    \"user-read-private\",\n];\n\nexport const getTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split(\"&\")\n        .reduce((initial, item) => {\n            var parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1])\n            return initial;\n           \n           \n        }, {})\n\n       \n}\n\n\nexport const getTokenByUrl = (loc) => {\n    return loc.hash\n        .substring(1)\n        .split(\"&\")\n        .reduce((initial, item) => {\n            var parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1])\n            return initial;\n           \n           \n        }, {})\n       \n       \n}\n\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,oBAAoB;AAC1C,OAAO,MAAMC,YAAY,GAAG,wCAAwC;AACpE,MAAMC,WAAW,GAAGF,KAAK,CAAC,CAAC;;AAE3B,MAAMG,QAAQ,GAAG,kCAAkC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CACX,eAAe,EACf,iBAAiB,EACjB,mBAAmB,CACtB;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,CACtBC,SAAS,CAAC,CAAC,CAAC,CACZC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAK;IACvB,IAAIC,KAAK,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;IAC3BE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,OAAOF,OAAO;EAGlB,CAAC,EAAE,CAAC,CAAC,CAAC;AAGd,CAAC;AAGD,OAAO,MAAMI,aAAa,GAAIC,GAAG,IAAK;EAClC,OAAOA,GAAG,CAACT,IAAI,CACVC,SAAS,CAAC,CAAC,CAAC,CACZC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAK;IACvB,IAAIC,KAAK,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;IAC3BE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,OAAOF,OAAO;EAGlB,CAAC,EAAE,CAAC,CAAC,CAAC;AAGd,CAAC;AAGD,OAAO,MAAMM,QAAQ,GAAI,GAAEjB,YAAa,cAAaE,QAAS,iBAAgBD,WAAY,UAASE,MAAM,CAACe,IAAI,CAAC,KAAK,CAAE,uCAAsC"},"metadata":{},"sourceType":"module"}