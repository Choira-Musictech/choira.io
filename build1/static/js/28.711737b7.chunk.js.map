{"version":3,"sources":["pages/admin/studios/BookingPages.jsx"],"names":["BookingPages","bookingPageCount","setBookingPageCount","useState","products","setProducts","handleChange","useNavigate","async","productId","event","updateddata","map","prd","_id","bookingStatus","parseInt","target","value","console","log","bookingPageApi","updateStatus","status","error","getStatusColor","useEffect","idToUse","musicProduction","then","response","concat","data","catch","limit","active","bookingType","category","getBookings","_jsx","_Fragment","children","_jsxs","className","style","allStudioDetailsPage","BookingActionBar","StudioBookingDetail","MusicProduction","MixMaster","Artist"],"mappings":"yGAAA,gHAmJeA,UArIf,WACE,MAAOC,EAAkBC,GAAuBC,mBAAS,OAClDC,EAAUC,GAAeF,mBAAS,IAOnCG,GALWC,cAKIC,MAAOC,EAAWC,KAErC,IACE,MAAMC,EAAcP,EAASQ,KAAKC,IAC5BA,EAAIC,MAAQL,IACdI,EAAIE,cAAgBC,SAASN,EAAMO,OAAOC,OAC1CC,QAAQC,IAAI,cAAeP,EAAIE,gBAE1BF,YAEcQ,IAAeC,aACpCb,EACAC,EAAMO,OAAOC,QAGFK,QAIXlB,EAAYM,GAEd,MAAOa,GACPL,QAAQK,MAAM,yBAA0BA,MAMtCC,EAAkBF,IAEtB,OADAA,EAASP,SAASO,IAEhB,KAAK,EACH,MAAO,UAGT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,UACT,QACE,MAAO,KA+Cb,OA1CAG,qBAAU,KAIR,GAHAP,QAAQC,IAAI,wBAAyBnB,GACrCI,EAAY,IAEa,OAArBJ,GAAkD,OAArBA,EAA2B,CAE1D,MAAM0B,EAA+B,OAArB1B,EAA4B,KAAO,KAEnDoB,IACGO,gBAAgB,MAAOD,EAAS,GAChCE,MAAMC,IACLX,QAAQC,IAAI,kCAADW,OACyB9B,EAAgB,KAClD6B,GAEEA,EAASE,MACX3B,EAAYyB,EAASE,SAGxBC,OAAOT,IACNL,QAAQK,MAAM,0BAA2BA,WAExC,GAAyB,OAArBvB,EAA2B,CACpC,MAAMiC,EAAQ,GACRC,EAAS,EACTC,EAAc,EACdC,EAAWpC,EAEjBoB,IACGiB,YAAYJ,EAAOC,EAAQC,EAAaC,GACxCR,MAAMC,IACLX,QAAQC,IAAI,oCAAqCU,GAC7CA,EAASE,OACX3B,EAAYyB,EAASE,MACrBb,QAAQC,IAAI,eAAgBU,OAG/BG,OAAOT,IACNL,QAAQK,MAAM,0BAA2BA,SAG9C,CAACvB,IAEFsC,cAAAC,WAAA,CAAAC,SACEC,eAAA,OAAKC,UAAWC,IAAMC,qBAAqBJ,SAAA,CACzCF,cAACO,IAAgB,CACf7C,iBAAkBA,EAClBC,oBAAqBA,IAED,OAArBD,EACCsC,cAACQ,IAAmB,CAClB3C,SAAUA,EACVC,YAAaA,EACbC,aAAcA,EACdmB,eAAgBA,IAGC,OAArBxB,EACEsC,cAACS,IAAe,CACd5C,SAAUA,EACVC,YAAaA,EACbC,aAAcA,EACdmB,eAAgBA,IAEK,OAArBxB,EACFsC,cAACU,IAAS,CACR7C,SAAUA,EACVC,YAAaA,EACbC,aAAcA,EACdmB,eAAgBA,IAGlBc,cAACW,IAAM","file":"static/js/28.711737b7.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { Alert } from \"antd\";\n// import \"../studios/studios.css\";\nimport style from \"../studios/studio.module.css\";\n\nimport StudioBookingDetail from \"../../../components/adminStudio/booking/StudioBookingDetail\";\nimport MusicProduction from \"../../../components/adminStudio/booking/MusicProduction\";\nimport MixMaster from \"../../../components/adminStudio/booking/MixMaster\";\nimport Artist from \"../../../components/adminStudio/booking/Artist\";\nimport BookingActionBar from \"../../../components/adminStudio/booking/BookingActionBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport WebDashboard2 from \"../../produce/WebDashBoard2\";\nimport bookingPageApi from \"../../../services/bookingPageApi\";\n\nfunction BookingPages() {\n  const [bookingPageCount, setBookingPageCount] = useState(\"c1\");\n  const [products, setProducts] = useState([]);\n\n  const navigate = useNavigate();\n  const gotoSignin = () => {\n    navigate(\"/signin\");\n  };\n\n  const handleChange = async (productId, event) => {\n    /// api\n    try {\n      const updateddata = products.map((prd) => {\n        if (prd._id === productId) {\n          prd.bookingStatus = parseInt(event.target.value);\n          console.log(\" prd.status\", prd.bookingStatus);\n        }\n        return prd;\n      });\n      const response = await bookingPageApi.updateStatus(\n        productId,\n        event.target.value\n      );\n\n      if (response.status) {\n        // Assuming response.data is an array of updated products\n        // setProducts(response.data);\n\n        setProducts(updateddata);\n      }\n    } catch (error) {\n      console.error(\"Error updating status:\", error);\n    }\n\n    // console.log(updateddata);\n  };\n\n  const getStatusColor = (status) => {\n    status = parseInt(status);\n    switch (status) {\n      case 2:\n        return \"#FFDDDD\";\n      // case \"Pending\":\n      //   return \"#CAE2FF\";\n      case 1:\n        return \"#DDFFF3\";\n      case 0:\n        return \"#FFF3CA\";\n      default:\n        return \"\";\n    }\n  };\n\n  // {-------  this code is end of  update color of selected  action ---------}\n  useEffect(() => {\n    console.log(\"bookingPageCount-----\", bookingPageCount);\n    setProducts([]);\n\n    if (bookingPageCount === \"c2\" || bookingPageCount === \"c3\") {\n      // Corrected the id assignments\n      const idToUse = bookingPageCount === \"c2\" ? \"c2\" : \"c3\";\n\n      bookingPageApi\n        .musicProduction(\"100\", idToUse, 1)\n        .then((response) => {\n          console.log(\n            `====================> response ${bookingPageCount} `,\n            response\n          );\n          if (response.data) {\n            setProducts(response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching studios:\", error);\n        });\n    } else if (bookingPageCount === \"c1\") {\n      const limit = 10;\n      const active = 1;\n      const bookingType = 1;\n      const category = bookingPageCount;\n      // const type = bookingPageCount;\n      bookingPageApi\n        .getBookings(limit, active, bookingType, category)\n        .then((response) => {\n          console.log(\"====================> response C1\", response);\n          if (response.data) {\n            setProducts(response.data);\n            console.log(\"pagekaDetail\", response);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching studios:\", error);\n        });\n    }\n  }, [bookingPageCount]);\n  return (\n    <>\n      <div className={style.allStudioDetailsPage}>\n        <BookingActionBar\n          bookingPageCount={bookingPageCount}\n          setBookingPageCount={setBookingPageCount}\n        />\n        {bookingPageCount === \"c1\" ? (\n          <StudioBookingDetail\n            products={products}\n            setProducts={setProducts}\n            handleChange={handleChange}\n            getStatusColor={getStatusColor}\n          />\n        ) : // <AllStudioDetail />\n        bookingPageCount === \"c2\" ? (\n          <MusicProduction\n            products={products}\n            setProducts={setProducts}\n            handleChange={handleChange}\n            getStatusColor={getStatusColor}\n          />\n        ) : bookingPageCount === \"c3\" ? (\n          <MixMaster\n            products={products}\n            setProducts={setProducts}\n            handleChange={handleChange}\n            getStatusColor={getStatusColor}\n          />\n        ) : (\n          <Artist />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default BookingPages;\n"],"sourceRoot":""}